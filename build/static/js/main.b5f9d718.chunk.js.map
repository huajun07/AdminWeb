{"version":3,"sources":["store.js","components/NavBar.js","components/ConfirmModal.js","components/QueryModal.js","services/alertService.js","services/api.js","components/DeviceModal.js","components/GateModal.js","components/AlertGroup.js","components/TablePaginationActions.js","components/RulesModal.js","components/ImageModal.js","pages/Home.js","pages/Login.js","pages/Projects.js","pages/projectSubPages/ProjectForm.js","pages/projectSubPages/BusinessDetails.js","pages/projectSubPages/Devices.js","pages/projectSubPages/Gates.js","pages/projectSubPages/LedConfig.js","pages/EditProject.js","pages/PlateRegex.js","assets/closeGate.png","assets/openGate.jpg","pages/Records.js","pages/ParkRecords.js","pages/ParkingRules.js","App.js","index.js"],"names":["initialState","auth","user","server_URL","store","createContext","Provider","StateProvider","children","useReducer","state","action","type","value","Error","dispatch","NavBar","storeContext","useContext","useState","toggled","setToggled","history","useHistory","direct","path","console","log","push","className","Navbar","bg","variant","expand","Brand","onClick","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","data-value","href","Divider","Text","collapsed","iconShape","icon","ConfirmModal","props","toggleModal","success","hide","body","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","alertSubject","Subject","defaultId","alertService","onAlert","asObservable","pipe","filter","x","message","options","alert","alertType","error","info","warn","clear","next","returnFunc","response","a","json","data","ok","content","status","Promise","reject","getProjects","columns","requestOptions","method","headers","JSON","stringify","authID","serviceName","objName","fetch","then","getGate","ID","filters","projectID","delProject","delGate","gateID","delDevice","deviceID","DeviceModal","newState","validated","setValidated","setState","dummy","useEffect","deviceName","deviceType","deviceCarpark","manufacturer","manufacturerCode","direction","isPrimaryDevice","getDeviceInfo","catch","handleChange","e","filler","e2","undefined","target","prevState","update","modifyParams","updateDeviceInfo","create","values","newDeviceReq","createDevice","Form","noValidate","onSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","Group","as","Row","Label","column","sm","Col","Control","placeholder","readOnly","required","name","onChange","Feedback","deviceStatus","Check","checked","GateModal","gateName","gateType","isChargeable","ledOnTime","ledOffTime","getGateInfo","updateGateInfo","newGateReq","createGate","custom","showSeconds","input","AlertGroup","alerts","this","subscription","subscribe","setTimeout","removeAlert","unsubscribe","length","map","idx","Alert","dismissible","onClose","React","Component","TablePaginationActions","count","page","rowsPerPage","onChangePage","style","flexShrink","right","IconButton","event","disabled","aria-label","Math","ceil","max","RulesModal","accessRuleID","projectName","gates","setGates","curGates","setCurGates","initialGates","setInitialGates","func","val","temp","forEach","element","accessRuleName","getAccessRuleInfo","Object","keys","gate","list","handleGateChange","updateAccessRuleInfo","createAccessRule","index","label","ImageModal","src","size","centered","Home","Login","username","password","document","getElementById","innerText","Projects","match","initialRows","setInitialRows","rows","setRows","delete","add","toggle","setToggle","curID","setCurID","location","projectType","curState","setCurState","reload","modal","prevVal","curRows","row","toLowerCase","indexOf","insert","contactNumber","maCompany","equipManu","addProject","del","setPage","setRowsPerPage","emptyRows","min","Breadcrumb","active","inline","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","slice","scope","padding","color","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","ProjectForm","useParams","getProjectInfo","updateProjectInfo","country","isValid","span","offset","BusinessDetails","barrierDelay","networkWarningDuration","instantImgUpload","vehicleColorDetect","localImgStore","myFormat","num","InputGroup","strict","format","Devices","useLocation","pathname","edit","setModal","getDevice","Tooltip","Gates","String","LedConfig","trigger","voiceMsg","textMsg","Input","vals","EditProject","useRouteMatch","url","split","Tab","Container","xs","exact","to","PlateRegex","actualPlate","matchPlate","setVal","projects","setProjects","projectNames","setProjectNames","getSpecialPlate","handleChangeVal","delSpecialPlate","addSpecialPlate","project","updateSpecialPlate","activateModal","Records","imageSrc","setImageSrc","fieldPlaceholder","vehicleType","isOpened","originalPlate","confirmedPlate","detectionTime","confirmedTime","image1","image2","image3","plateImage","fields","fieldLength","fieldHeight","curField","startTime","endTime","getMovementLogs","concat","sort","b","reset","queryField","isClearable","selected","maxDate","popperClassName","date","minDate","field","openGate","closeGate","logID","ParkRecords","ParkingRules","setProject","gateNames","setGateNames","inputField","outputField","getAccessRule","Router","PrivateRoute","rest","render","cloneElement","params","from","PublicRoute","App","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.b5f9d718.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  auth: true,\r\n  user: \"\",\r\n  server_URL: \"http://34.87.50.188:8000/api/router\"\r\n};\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"setAuth\":\r\n        return {\r\n          ...state,\r\n          auth: action.value\r\n        };\r\n      case \"setUser\":\r\n        return {\r\n          ...state,\r\n          user: action.value\r\n        };\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { store, StateProvider };\r\n","import {\r\n  SidebarContent,\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SubMenu\r\n} from \"react-pro-sidebar\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport { List } from \"react-bootstrap-icons\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { store } from \"../store.js\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalParkingIcon from '@material-ui/icons/LocalParking';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\n\r\nexport function NavBar() {\r\n  const storeContext = useContext(store);\r\n  const [toggled, setToggled] = useState(true);\r\n  const { dispatch } = storeContext;\r\n  let history = useHistory();\r\n  const logout = () => {\r\n    dispatch({\r\n      type: \"setAuth\",\r\n      value: false\r\n    });\r\n    dispatch({\r\n      type: \"setUser\",\r\n      value: \"\"\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n  const direct = (path) => {\r\n    console.log(\"clicked\", path);\r\n    setToggled(true);\r\n    history.push(path);\r\n  };\r\n  const toggleSideBar = () => {\r\n    setToggled(!toggled);\r\n  };\r\n  return (\r\n    <div className=\"h-100 fixed-top clickThrough\">\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"clickAble\">\r\n        <Navbar.Brand className=\"d-none d-sm-block\" onClick={toggleSideBar}>\r\n          <List />\r\n        </Navbar.Brand>\r\n        <Navbar.Brand>Admin</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto d-sm-block d-md-none\">\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/project\")}>\r\n                Project\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n                Log Records\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </Nav.Link>\r\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item data-value=\"/home\" onClick={direct}>\r\n                Action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Navbar.Text>\r\n            <Nav.Link onClick={logout}>Signout</Nav.Link>\r\n          </Navbar.Text>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <ProSidebar\r\n        className=\"clickAble d-none d-sm-block navbar-default navbar-static-top\"\r\n        collapsed={toggled}\r\n        //collapsedWidth=\"px\"\r\n      >\r\n        <SidebarContent>\r\n          <Menu iconShape=\"circle\">\r\n            <MenuItem icon={<HomeIcon onClick={()=>direct(\"/home\")}/>}>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<InfoIcon onClick={()=>direct(\"/project\")} />}>\r\n              <div onClick={()=>direct(\"/projet\")}>\r\n                Project\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<CodeIcon onClick={()=>direct(\"/regex\")} />}>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<StorageIcon onClick={()=>direct(\"/records\")} />}>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n                Exit/Entry Records\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<LocalParkingIcon onClick={()=>direct(\"/parking\")} />}>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </MenuItem>\r\n            <SubMenu title=\"Access\" icon={<PaymentIcon/>}>\r\n              <MenuItem  onClick={()=>direct(\"/accessRules\")} >Access Rules</MenuItem>\r\n              <MenuItem>Tracking</MenuItem>\r\n            </SubMenu>\r\n          </Menu>\r\n        </SidebarContent>\r\n      </ProSidebar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { NavBar };\r\n","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nexport function ConfirmModal(props) {\r\n  let toggleModal = props.toggleModal;\r\n  let success = props.success;\r\n  let hide = props.hide;\r\n  let body = props.body;\r\n  let title = props.title;\r\n  return (\r\n    <Modal show={hide} onHide={toggleModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{body}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={toggleModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={()=>{\r\n          success();\r\n        }}>\r\n          Confirm\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { ConfirmModal};\r\n","import { Button, Modal, Form } from \"react-bootstrap\";\r\nimport {useState} from 'react';\r\n\r\nexport function QueryModal(props) {\r\n    let toggleModal = props.toggleModal;\r\n    let success = props.success;\r\n    let hide = props.hide;\r\n    let body = props.body;\r\n    let title = props.title;\r\n    const [value,setValue] = useState(\"\");\r\n    const handleChange = (e) =>{\r\n      setValue(e.target.value);\r\n    }\r\n    const exit = () =>{\r\n      setValue(\"\");\r\n      toggleModal();\r\n    }\r\n    return (\r\n      <Modal show={hide} onHide={exit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Label>{body}</Form.Label>\r\n            <Form.Control \r\n            value={value}\r\n            onChange={handleChange}\r\n            />\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={exit}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>{\r\n              success(value);\r\n              exit();\r\n              }}>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default {QueryModal};","import { Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nconst alertSubject = new Subject();\r\nconst defaultId = 'default-alert';\r\n\r\nexport const alertService = {\r\n    onAlert,\r\n    success,\r\n    error,\r\n    info,\r\n    warn,\r\n    alert,\r\n    clear\r\n};\r\n\r\nexport const alertType = {\r\n    success: 'success',\r\n    error: 'danger',\r\n    info: 'info',\r\n    warning: 'warning'\r\n}\r\n\r\n// enable subscribing to alerts observable\r\nfunction onAlert(id = defaultId) {\r\n    return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\r\n}\r\n\r\n// convenience methods\r\nfunction success(message, options) {\r\n    alert({ ...options, type: alertType.success, message });\r\n}\r\n\r\nfunction error(message, options) {\r\n    alert({ ...options, type: alertType.error, message });\r\n}\r\n\r\nfunction info(message, options) {\r\n    alert({ ...options, type: alertType.info, message });\r\n}\r\n\r\nfunction warn(message, options) {\r\n    alert({ ...options, type: alertType.warning, message });\r\n}\r\n\r\n// core alert method\r\nfunction alert(alert) {\r\n    alert.id = alert.id || defaultId;\r\n    alertSubject.next(alert);\r\n}\r\n\r\n// clear alerts\r\nfunction clear(id = defaultId) {\r\n    alertSubject.next({ id });\r\n}","import { alertService } from './index.js';\r\n\r\nconst server_URL = \"http://34.87.50.188:8000/api/router\";\r\n\r\nconst returnFunc = async (response) => {\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.content) || response.status;\r\n        return Promise.reject(error);\r\n    }\r\n    return data;\r\n}\r\n\r\nconst getProjects = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"project\",\r\n            columns\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getMovementLogs = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"movementLog\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getSpecialPlate = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"specialPlate\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAccessRule = (projectID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"accessRule\",\r\n            columns,\r\n            filters:{\r\n                projectID\r\n            }\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createSpecialPlate\",\r\n          content: state\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delSpecialPlate = (matchPlate) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteSpecialPlate\",\r\n            content: {\r\n                matchPlate\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifySpecialPlate\",\r\n            content: {\r\n            matchPlate: state.matchPlate,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addProject = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createProject\",\r\n          content: {\r\n            projectName: \"\",\r\n            projectType: \"\",\r\n            location: \"\",\r\n            contactNumber: \"\",\r\n            maCompany: \"\",\r\n            equipManu: \"\"\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGate = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getTable\",\r\n            content: {\r\n            objName: \"gate\",\r\n            columns,\r\n            filters:{\r\n                projectID: ID\r\n            }\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDevice = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"device\",\r\n            columns,\r\n            filters:{\r\n              gateID: ID\r\n            }\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createGate = (projectID,values) =>{\r\n    const newGateReq = {\r\n        ...values,\r\n        projectID\r\n    };\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createGate\",\r\n            content: newGateReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createDevice = (gateID, values) =>{\r\n    const newDeviceReq = {\r\n        ...values,\r\n        gateID\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createDevice\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getProjectInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getProject\",\r\n            content: {\r\n            projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delProject = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteProject\",\r\n            content: {\r\n                projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateProjectInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyProject\",\r\n            content: {\r\n            projectID: ID,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getBusinessInfo = (ID) =>{\r\n    //Pending Function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateBusinessInfo = (ID, state) =>{\r\n    //Pending function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGateInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delGate = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateGateInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyGate\",\r\n            content: {\r\n                gateID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDeviceInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delDevice = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateDeviceInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyDevice\",\r\n            content: {\r\n                deviceID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createAccessRule = (values) =>{\r\n    const newDeviceReq = {\r\n        ...values\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createAccessRule\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAccessRuleInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getAccessRule\",\r\n          content: {\r\n            accessRuleID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateAccessRuleInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyAccessRule\",\r\n            content: {\r\n                accessRuleID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nexport {\r\n    getGate,\r\n    getDevice,\r\n    createGate,\r\n    createDevice,\r\n    getProjectInfo,\r\n    updateProjectInfo,\r\n    getBusinessInfo,\r\n    updateBusinessInfo,\r\n    getGateInfo,\r\n    updateGateInfo,\r\n    getDeviceInfo,\r\n    updateDeviceInfo,\r\n    getProjects,\r\n    addProject,\r\n    delProject,\r\n    delGate,\r\n    delDevice,\r\n    getMovementLogs,\r\n    getSpecialPlate,\r\n    delSpecialPlate,\r\n    updateSpecialPlate,\r\n    addSpecialPlate,\r\n    getAccessRule,\r\n    createAccessRule,\r\n    getAccessRuleInfo,\r\n    updateAccessRuleInfo\r\n};","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport { alertService, createDevice, getDeviceInfo, updateDeviceInfo } from '../services/index.js';\r\n\r\nexport function DeviceModal(props) {\r\n    let {hide, gateID, toggleModal, success, newState, deviceID } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    if(newState){\r\n      setState({\r\n        gateID,\r\n        deviceID: \"\",\r\n        deviceName: \"\",\r\n        deviceType: \"\",\r\n        deviceCarpark: \"\",\r\n        manufacturer: \"\",\r\n        manufacturerCode: \"\",\r\n        direction: \"\",\r\n        isPrimaryDevice: false\r\n      });\r\n    }else{\r\n      getDeviceInfo(deviceID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gate, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy,newState,gateID]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(newState) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateDeviceInfo(deviceID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createDevice(gateID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Device, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{newState?\"Add Device\":\"Edit Device\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id =\"deviceModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate ID\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={state.gateID} readOnly />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device ID\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >{newState?\r\n                        <div><Form.Control\r\n                        required\r\n                        placeholder=\"ID\"\r\n                        id=\"deviceID\"\r\n                        name=\"deviceID\"\r\n                        value={state.deviceID}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device ID is a required field.\r\n                        </Form.Control.Feedback></div>:<Form.Control type=\"text\" placeholder={state.deviceID} readOnly />}\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"deviceName\"\r\n                        name=\"deviceName\"\r\n                        value={state.deviceName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Type\"\r\n                        id=\"deviceType\"\r\n                        name=\"deviceType\"\r\n                        value={state.deviceType}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Carpark which the device belongs to\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Carpark\"\r\n                        id=\"deviceCarpark\"\r\n                        name=\"deviceCarpark\"\r\n                        value={state.deviceCarpark}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Capark is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n                    {newState?null:\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Status\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={state.deviceStatus} readOnly />\r\n                    </Col>\r\n                    </Form.Group>}\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Manufacturer\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer\"\r\n                        id=\"manufacturer\"\r\n                        name=\"manufacturer\"\r\n                        value={state.manufacturer}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Manufacturer Code\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer Code\"\r\n                        id=\"manufacturerCode\"\r\n                        name=\"manufacturerCode\"\r\n                        value={state.manufacturerCode}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer Code is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Direction\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Direction\"\r\n                        id=\"direction\"\r\n                        name=\"direction\"\r\n                        value={state.direction}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Direction is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Is Primary Device\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isPrimaryDevice}\r\n                        type=\"switch\"\r\n                        id=\"isPrimaryDevice\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"deviceModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { DeviceModal };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport TimeField from 'react-simple-timefield';\r\nimport { alertService, createGate, getGateInfo, updateGateInfo } from '../services/index.js';\r\n\r\nexport function GateModal(props) {\r\n    let {hide, gateID, toggleModal, success, newState, projectID } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    console.log(\"gateModal\", gateID, projectID, newState);\r\n    if(newState){\r\n      setState({\r\n        gateName: \"\",\r\n        gateType: \"\",\r\n  //      isOpenForInvalid: false,\r\n  //      isOpenForTemp: false,\r\n        isChargeable: false,\r\n        ledOnTime: \"00:00:00\",\r\n        ledOffTime: \"00:00:00\"\r\n      });\r\n    }else{\r\n      getGateInfo(gateID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gate, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy,newState,gateID]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(newState) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateGateInfo(gateID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createGate(projectID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Gate, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n      setValidated(false);\r\n      toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{newState?\"Add Gate\":\"Edit Gate\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id='gateModal' noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"gateName\"\r\n                        name=\"gateName\"\r\n                        value={state.gateName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"gateType\"\r\n                        name=\"gateType\"\r\n                        value={state.gateType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        <option>entry</option>\r\n                        <option>exit</option>\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n{/*\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Open Gate for invalid/expired season pass holders\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isOpenForInvalid}\r\n                        type=\"switch\"\r\n                        id=\"isOpenForInvalid\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Open Gate for temporary vehicles\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isOpenForTemp}\r\n                        type=\"switch\"\r\n                        id=\"isOpenForTemp\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n*/}\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Charge fee for entry\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                    Time to turn on the LPR camera’s LED\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex\"\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOnTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOnTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOnTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Time to turn off the LPR\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        className=\"align-items-center d-flex\"\r\n                        sm={6}\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOffTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOffTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOffTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"gateModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { GateModal };\r\n","import React from 'react';\r\n\r\nimport { alertService, alertType } from '../services/index.js';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nexport class AlertGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            alerts: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // subscribe to new alert notifications\r\n        this.subscription = alertService.onAlert(this.props.id)\r\n            .subscribe(alert => {\r\n                // add alert to array\r\n                this.setState({ alerts: [...this.state.alerts, alert] });\r\n\r\n                // auto close alert if required\r\n                setTimeout(() => this.removeAlert(alert), 3000);\r\n            });\r\n\r\n        // clear alerts on location change\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // unsubscribe & unlisten to avoid memory leaks\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert) {\r\n        this.setState({ alerts: this.state.alerts.filter(x => x !== alert) })\r\n    }\r\n\r\n    render() {\r\n        const { alerts } = this.state;\r\n        if (!alerts.length) return null;\r\n        return (\r\n            <div className=\"alertGrp\">\r\n                {console.log(alerts),\r\n                alerts.map((alert,idx) =>\r\n                    <Alert \r\n                    key = {idx} \r\n                    variant={alert.type}\r\n                    dismissible = {true}\r\n                    onClose={()=>{this.removeAlert(alert)}}>\r\n                        {alert.message}\r\n                    </Alert>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default {AlertGroup} ;","import {IconButton} from '@material-ui/core';\r\n\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nexport function TablePaginationActions(props) {\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div style={{flexShrink:0, right:0}}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        <FirstPageIcon />\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n         <KeyboardArrowLeft />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        <KeyboardArrowRight />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        <LastPageIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default {TablePaginationActions};","import { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport { alertService, createAccessRule, getAccessRuleInfo, updateAccessRuleInfo, getGate } from '../services/index.js';\r\n\r\nexport function RulesModal(props) {\r\n    let {hide, accessRuleID, projectID, success, projectName, toggleModal } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [gates, setGates] = useState([]);\r\n    const [curGates, setCurGates] = useState({});\r\n    const [initialGates, setInitialGates] = useState([]);\r\n\r\n    const func = async (val) =>{\r\n        let temp = {};\r\n        val.forEach(async (element)=>{\r\n            temp[element[\"gateID\"]] = false;\r\n        });\r\n        [...initialGates].forEach(async (element)=>{\r\n            console.log(element);\r\n            temp[element] = true;\r\n        });\r\n        console.log(\"temp\", await temp);\r\n        return await temp;\r\n    };\r\n    const loadGates = () =>{\r\n        getGate(projectID, [\"gateID\", \"gateName\"])\r\n        .then(async (data) => {\r\n            setGates(data.content);\r\n            func(data.content).then(async(list)=>{\r\n                setCurGates(await list);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            alertService.error(\"There was an error!\");\r\n            console.error(\"Get Gate Rule, There was an error!\", error);\r\n        });\r\n    }\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    if(accessRuleID===null){\r\n      setState({\r\n        projectID,\r\n        accessRuleName: \"\",\r\n        isChargeable: false,\r\n        gates: []\r\n      });\r\n      setInitialGates([]);\r\n    }else{\r\n      getAccessRuleInfo(accessRuleID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n        setInitialGates(data.message.gates);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Access Rule, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy, accessRuleID]);\r\n\r\n  useEffect(()=>{\r\n    setState((prevState)=>({\r\n        ...prevState,\r\n        gates: (Object.keys(curGates)).filter((gate)=>curGates[gate])\r\n      }));\r\n      console.log(state.gates);\r\n  },[curGates]);\r\n\r\n  useEffect(()=>{\r\n    loadGates();\r\n  },[initialGates]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleGateChange = (e) =>{\r\n      console.log(e);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(accessRuleID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateAccessRuleInfo(accessRuleID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Access Rule, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createAccessRule(state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Access Rule, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{accessRuleID===null?\"Add Rule\":\"Edit Rule\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id =\"ruleModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Project Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={projectName} readOnly />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Access Rule Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"accessRuleName\"\r\n                        name=\"accessRuleName\"\r\n                        value={state.accessRuleName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Rule Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gates\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        {gates.map((gate, index)=>(\r\n                            <div>{\r\n                                index%2==0?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={gate.gateID}\r\n                                value={curGates[gate.gateID]}\r\n                                onChange={handleGateChange}\r\n                                label={gate.gateName}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                    </Col>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        {gates.map((gate, index)=>(\r\n                            <div>{\r\n                                index%2==1?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={gate.gateID}\r\n                                value={curGates[gate.gateID]}\r\n                                onChange={handleGateChange}\r\n                                label={gate.gateName}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Is Chargeable\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"ruleModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { RulesModal };\r\n","import {Modal} from 'react-bootstrap';\r\n\r\nexport function ImageModal (props){\r\n    let {toggleModal, src} = props;\r\n    return(\r\n    <Modal size=\"lg\" centered show={src===null?false:true} onHide={toggleModal}>\r\n        <img src={src}/>\r\n    </Modal>\r\n    );\r\n}\r\n\r\nexport default {ImageModal};","import React, { useState, useContext } from \"react\";\r\nimport { store } from \"../store.js\";\r\nexport function Home() {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  const { dispatch } = storeContext;\r\n  return <div>Home</div>;\r\n}\r\n\r\nexport default { Home };\r\n","import React, { useState, useContext } from \"react\";\r\nimport { store } from \"../store.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport function Login() {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  const { dispatch } = storeContext;\r\n  let history = useHistory();\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n  const reqLogin = (e) => {\r\n    e.preventDefault();\r\n    let { username, password } = state;\r\n    /*\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    };\r\n    \r\n    fetch(server_URL + \"/login\", requestOptions)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n  \r\n      // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      }\r\n  \r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      return(\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/home\"\r\n          }}\r\n        />\r\n      );\r\n    })\r\n    .catch((error) => {\r\n      this.setState({ errorMessage: error.toString() });\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    if (username === \"huajun\" && password === \"huajun\") {\r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      dispatch({\r\n        type: \"setUser\",\r\n        value: username\r\n      });\r\n      history.push(\"/home\");\r\n    } else if (username.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Username cannot be blank\";\r\n    } else if (password.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Password cannot be blank\";\r\n    } else {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Invalid Username or Password\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"maincontainer h-100\">\r\n      <div className=\"container-fluid bg-light h-100\">\r\n        <div className=\"login d-flex align-items-center py-5\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-10 col-sm-6 col-md-5 col-xl-4 mx-auto \">\r\n                <h3 className=\"display-4\">Login</h3>\r\n                <p className=\"text-muted mb-4\">\r\n                  Enter your credentials to login.\r\n                </p>\r\n                <form>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"username\"\r\n                      type=\"username\"\r\n                      placeholder=\"Username\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4\"\r\n                      onChange={handleChange}\r\n                      value={state.username}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\r\n                      onChange={handleChange}\r\n                      value={state.password}\r\n                    />\r\n                  </div>\r\n                  <p id=\"login-error\" className=\"text-danger\"></p>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block text-uppercase mb-2 rounded-pill shadow-sm\"\r\n                    onClick={reqLogin}\r\n                  >\r\n                    Sign in\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Login };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, addProject, delProject, alertService } from '../services/index.js';\r\n\r\nexport function Projects({ match }) {\r\n  let history = useHistory();\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false\r\n  });\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n    setCurState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n  }\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (projectID) => {\r\n    setCurID(projectID);\r\n    toggleModal(\"delete\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectName, location, projectType } = curState;\r\n    let curRows = initialRows;\r\n    console.log(curRows);\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[\"projectName\"].toLowerCase().indexOf(projectName.toLowerCase()) >= 0 &&\r\n          row[\"location\"].toLowerCase().indexOf(location.toLowerCase()) >= 0 &&\r\n          row[\"projectType\"].toLowerCase().indexOf(projectType.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const insert = (e) => {\r\n    addProject()\r\n      .then(async (data) => {\r\n        let ID = data.message.projectID;\r\n        history.push(\"/project/\" + ID);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  const edit = (projectID) => {\r\n    history.push(\"/project/\" + projectID);\r\n  };\r\n\r\n  const del = async (projectID) => {\r\n    delProject(projectID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Project Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this project?\"\r\n      />\r\n      <ConfirmModal\r\n        hide={toggle.add}\r\n        success={() => {\r\n          insert();\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"add\");\r\n        }}\r\n        title=\"Confirm Addition\"\r\n        body=\"Add a new project?\"\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Projects</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectName\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectName}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"location\"\r\n                placeholder=\"Location\"\r\n                onChange={handleChange}\r\n                value={state.location}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectType\"\r\n                placeholder=\"Type\"\r\n                onChange={handleChange}\r\n                value={state.projectType}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content greyBackground\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Project</TableCell>\r\n                <TableCell align=\"left\">Location</TableCell>\r\n                <TableCell align=\"left\">Type</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.projectName}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.location}</TableCell>\r\n                  <TableCell align=\"left\">{row.projectType}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => edit(row.projectID)}>\r\n                      <PencilSquare\r\n                        data-value={row.projectID}\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => activateModal(row.projectID)}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Projects };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { alertService, getProjectInfo, updateProjectInfo } from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function ProjectForm() {\r\n  let { projectID }= useParams();\r\n  const [validated, setValidated] = useState(false);\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    projectType: \"\",\r\n    location: \"\",\r\n    contactNumber: \"\",\r\n    maCompany: \"\",\r\n    equipManu: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()) update();\r\n  };\r\n\r\n  const update = () => {\r\n    updateProjectInfo(projectID, state)\r\n      .then(async (data) => {\r\n        alertService.success('Update Successful!');\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Project Info</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project ID\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control type=\"text\" placeholder={projectID} readOnly />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project Name\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              placeholder=\"Name\"\r\n              id=\"projectName\"\r\n              name=\"projectName\"\r\n              value={state.projectName}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Name is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project Type\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              custom\r\n              required\r\n              as=\"select\"\r\n              id=\"projectType\"\r\n              name=\"projectType\"\r\n              value={state.projectType}\r\n              onChange={handleChange}\r\n            >\r\n              <option value={\"\"}>--Select Type--</option>\r\n              <option>condo</option>\r\n              <option>hdb</option>\r\n            </Form.Control>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Type is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Location\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"location\"\r\n              name=\"location\"\r\n              value={state.location}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Location is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Equipment Manufacturer\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"equipManu\"\r\n              name=\"equipManu\"\r\n              value={state.equipManu}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Equipment Manufacturer is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            MA Company\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"maCompany\"\r\n              name=\"maCompany\"\r\n              value={state.maCompany}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              MA Company is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Contact No.\r\n          </Form.Label>\r\n          <Form.Label\r\n            column\r\n            sm={4}\r\n          >\r\n            <PhoneInput\r\n              inputProps={{\r\n                required: true\r\n              }}\r\n              placeholder=\"+XX-XXXX-XXXX\"\r\n              id=\"contactNumber\"\r\n              name=\"contactNumber\"\r\n              country={\"sg\"}\r\n              value={state.contactNumber}\r\n              onChange={(e)=>{\r\n                setState((prevState) => ({\r\n                  ...prevState,\r\n                  [\"contactNumber\"]: e\r\n                }));\r\n              }}\r\n              isValid={(value, country) => {\r\n                if (value.length === 0) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              }}\r\n            />\r\n          </Form.Label>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col sm={{ span: 8, offset: 7 }}>\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ProjectForm };\r\n","import { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, InputGroup, Breadcrumb } from \"react-bootstrap\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport { alertService, getBusinessInfo, updateBusinessInfo } from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function BusinessDetails(props) {\r\n  let {projectID} = useParams();\r\n  const [state, setState] = useState({\r\n    barrierDelay: 5,\r\n    networkWarningDuration: 5,\r\n    instantImgUpload: false,\r\n    vehicleColorDetect: false,\r\n    localImgStore: false\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    /*   \r\n    getBusinessInfo(projectID)\r\n    .then(async (data) => {\r\n      setState(data.message)\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    let res = {\r\n      barrierDelay: 5,\r\n      networkWarningDuration: 5,\r\n      instantImgUpload: false,\r\n      vehicleColorDetect: false,\r\n      localImgStore: false\r\n    };\r\n    setState(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    update();\r\n  };\r\n\r\n  const update = () => {\r\n    /* Pending API for project details update*/\r\n  };\r\n\r\n  function myFormat(num) {\r\n    return num + \" mins\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Business Details</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Barrier Opening Delay\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"barrierDelay\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.barrierDelay}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Duration before issuing network down warning\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"networkWarningDuration\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.networkWarningDuration}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Instant Image Upload to Server\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.instantImgUpload}\r\n              type=\"switch\"\r\n              id=\"instantImgUpload\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Local Storage of images after uploading\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.localImgStore}\r\n              type=\"switch\"\r\n              id=\"localImgStore\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Vehicle Colour Detection\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.vehicleColorDetect}\r\n              type=\"switch\"\r\n              id=\"vehicleColorDetect\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col sm={{ span: 8, offset: 7 }}>\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { BusinessDetails };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, DeviceModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getDevice, alertService, delDevice} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport SignalCellularConnectedNoInternet0BarIcon from '@material-ui/icons/SignalCellularConnectedNoInternet0Bar';\r\n\r\nexport function Devices (){\r\n    let { projectID, gateID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getDevice(gateID, [\"deviceID\", \"deviceName\", \"deviceType\", \"deviceStatus\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Device, there was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (deviceID) => {\r\n    delDevice(deviceID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Device Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this device?\"\r\n      />\r\n      <DeviceModal\r\n        hide={toggle.edit}\r\n        deviceID = {curID}\r\n        newState = {modal}\r\n        gateID = {gateID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item href={\"/project/\"+projectID+\"/gate\"}>Gates</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Devices</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    setModal(true);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"center\"><b>Status</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceName}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceType}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceStatus?\r\n                  <SignalCellularAltIcon style={{ color: \"#4caf50\" }}/>:<SignalCellularConnectedNoInternet0BarIcon style={{ color: \"#f44336\" }}/>\r\n                  }</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        setModal(false);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"gold\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Devices };","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, GateModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getGate, alertService, delGate} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\n\r\nexport function Gates (){\r\n    let { projectID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getGate(projectID, [\"gateID\", \"gateName\", \"gateType\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const devices = (gateID) => {\r\n    history.push(pathname +\"/\"+ String(gateID));\r\n  };\r\n\r\n  const del = async (gateID) => {\r\n    delGate(gateID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Gate Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this gate?\"\r\n      />\r\n      <GateModal\r\n        hide={toggle.edit}\r\n        gateID = {curID}\r\n        newState = {modal}\r\n        projectID = {projectID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Gates</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    setModal(true);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.gateID}</TableCell>\r\n                  <TableCell align=\"center\">{row.gateName}</TableCell>\r\n                  <TableCell align=\"center\">{row.gateType}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Devices\">\r\n                    <IconButton onClick={() => {\r\n                        devices(row.gateID);\r\n                    }}>\r\n                      <Cpu\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        setModal(false);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"gold\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Gates };","import React, { useState, useEffect } from \"react\";\r\nimport { Breadcrumb } from \"react-bootstrap\";\r\nimport {Input , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { TablePaginationActions } from \"../../components/index.js\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport { PencilSquare } from \"react-bootstrap-icons\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport function LedConfig(props) {\r\n  let {projectID} = useParams();\r\n  const [rows, setRows] = useState([]);\r\n  const [curID, setCurID] = useState(null);\r\n  const [state, setState] = useState({\r\n    trigger: \"\",\r\n    voiceMsg: \"\",\r\n    textMsg: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    /*getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setInitialRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n  }\r\n  useEffect(() => {\r\n    //reload();\r\n    let res = [\r\n        {\r\n            id: 1,\r\n            trigger: \"Trigger 1\",\r\n            voiceMsg: \"Sample 1\",\r\n            textMsg: \"Sample 01\"\r\n        },\r\n        {\r\n            id: 2,\r\n            trigger: \"Trigger 2\",\r\n            voiceMsg: \"Sample 2\",\r\n            textMsg: \"Sample 02\"\r\n        },\r\n        {\r\n            id: 3,\r\n            trigger: \"Trigger 3\",\r\n            voiceMsg: \"Sample 3\",\r\n            textMsg: \"Sample 03\"\r\n        },\r\n        {\r\n            id: 4,\r\n            trigger: \"Trigger 4\",\r\n            voiceMsg: \"Sample 4\",\r\n            textMsg: \"Sample 04\"\r\n        },\r\n        {\r\n            id: 5,\r\n            trigger: \"Trigger 5\",\r\n            voiceMsg: \"Sample 5\",\r\n            textMsg: \"Sample 05\"\r\n        },\r\n        {\r\n            id: 6,\r\n            trigger: \"Trigger 6\",\r\n            voiceMsg: \"Sample 6\",\r\n            textMsg: \"Sample 06\"\r\n        }\r\n    ];\r\n    setRows(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const save = () =>{\r\n    // API\r\n    //reload();\r\n  }\r\n\r\n  const edit = (vals) =>{\r\n    const {id, trigger, voiceMsg, textMsg} = vals;\r\n    setState({\r\n        trigger, \r\n        voiceMsg, \r\n        textMsg});\r\n    setCurID(id);\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setCurID(null);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>LED Configuration</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Trigger</TableCell>\r\n                <TableCell align=\"center\">Voice Message</TableCell>\r\n                <TableCell align=\"center\">Text Message</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.trigger}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"voiceMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.voiceMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.voiceMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"textMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.textMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.textMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"right\"  style={{padding:0}}>\r\n                    {curID === null?\r\n                        (<IconButton onClick={() => edit(row)}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            color=\"royalblue\"\r\n                            />\r\n                        </IconButton>)\r\n                        :(\r\n                        curID === row.id?\r\n                        <div>\r\n                            <IconButton onClick={() => save()}>\r\n                                <SaveIcon\r\n                                size={21}\r\n                                color=\"primary\"\r\n                                />\r\n                            </IconButton>\r\n                            <IconButton onClick={() => setCurID(null)}>\r\n                                <CloseIcon\r\n                                size={21}\r\n                                color=\"error\"\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                        :\r\n                        (<IconButton disabled = {true}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            />\r\n                        </IconButton>)\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { LedConfig };\r\n","import {\r\n  ProjectForm,\r\n  BusinessDetails,\r\n  Devices,\r\n  LedConfig,\r\n  Gates\r\n} from \"./projectSubPages/index.js\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport {Nav, Tab} from \"react-bootstrap\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nexport function EditProject(props) {\r\n  let history = useHistory();\r\n  let { path, url } = useRouteMatch();\r\n  let {pathname} = useLocation();\r\n  let page = pathname.split('/')[3];\r\n  const direct = (path) =>{\r\n    history.push(url+path);\r\n  }\r\n  return (\r\n    <div className=\"tabModal\">\r\n      <Tab.Container id=\"left-tabs-example\">\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/info\")}} active = {page===\"info\"}>Infomation</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/business\")}} active = {page===\"business\"}>Business</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/gate\")}} active = {page===\"gate\"}>Gates</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/ledconfig\")}} active = {page===\"ledconfig\"}>LED Config</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n          <Switch>\r\n            <Route exact path={`${path}/info`}>\r\n              <ProjectForm />\r\n            </Route>\r\n            <Route exact path={`${path}/business`}>\r\n              <BusinessDetails />\r\n            </Route>\r\n            <Route exact path={`${path}/gate/:gateID`}>\r\n              <Devices />\r\n            </Route>\r\n            <Route exact path={`${path}/gate`}>\r\n              <Gates />\r\n            </Route>\r\n            <Route exact path={`${path}/ledconfig`}>\r\n              <LedConfig />\r\n            </Route>\r\n            <Route path={path}>\r\n              <Redirect to={`${url}/info`} />\r\n            </Route>\r\n          </Switch>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { EditProject };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Modal } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, \r\n  getSpecialPlate,\r\n  delSpecialPlate,\r\n  updateSpecialPlate,\r\n  addSpecialPlate } from '../services/index.js';\r\n\r\nexport function PlateRegex({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false,\r\n    edit: false\r\n  });\r\n  const [state, setState] = useState({\r\n    projectID: null,\r\n    actualPlate: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectID: null,\r\n    actualPlate: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectID: null,\r\n      actualPlate: \"\"\r\n    });\r\n    setCurState({\r\n      projectID: null,\r\n      actualPlate: \"\"\r\n    });\r\n  }\r\n  const [val, setVal] = useState({\r\n    projectID: null,\r\n    matchPlate: \"\",\r\n    actualPlate: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const reload = () =>{\r\n    getSpecialPlate([\"projectID\", \"matchPlate\", \"actualPlate\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  const func = async (val) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element.projectID] = element.projectName;\r\n    });\r\n    return await temp;\r\n  };\r\n  useEffect(() => {\r\n    getProjects([\"projectID\", \"projectName\"])\r\n    .then(async (data) => {\r\n      setProjects(data.content);\r\n      func(data.content).then(async(list)=>{\r\n        setProjectNames(await list);\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },projectNames);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleChangeVal = (e) =>{\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setVal((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (values) => {\r\n    let {projectID, matchPlate, actualPlate} = values;\r\n    setValidated(false);\r\n    setVal({\r\n        projectID,\r\n        matchPlate,\r\n        actualPlate\r\n      });\r\n    toggleModal(\"edit\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectID, actualPlate } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          (projectID === null || row[\"projectID\"] === projectID) &&\r\n          row[\"actualPlate\"].toLowerCase().indexOf(actualPlate.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const insert = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n      addSpecialPlate(val)\r\n      .then(async (data) => {\r\n        reload();\r\n        toggleModal(\"add\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const edit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n        updateSpecialPlate(val)\r\n        .then(async (data) => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const del = (id) => {\r\n    delSpecialPlate(id)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this regex?\"\r\n      />\r\n      <Modal show={toggle.add} onHide={()=>toggleModal(\"add\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={insert}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={5}>\r\n            Project Name\r\n          </Form.Label>\r\n          <Col sm={6}>\r\n              <Form.Control\r\n                custom\r\n                required\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChangeVal}\r\n                value={val.projectID}\r\n              >\r\n                  <option value={null}>--Select a Project--</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Project Name is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n        </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"add\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    <Modal show={toggle.edit} onHide={()=>toggleModal(\"edit\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={edit}>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"edit\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Plate Regex</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectID}\r\n              >\r\n                  <option value={null}>All Projects</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"actualPlate\"\r\n                placeholder=\"Actual Plate\"\r\n                onChange={handleChange}\r\n                value={state.actualPlate}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                setVal({\r\n                    projectID: \"\",\r\n                    matchPlate: \"\",\r\n                    actualPlate: \"\"\r\n                    });\r\n                  setValidated(false);\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content greyBackground\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Project</TableCell>\r\n                <TableCell align=\"center\">Regex of Plate</TableCell>\r\n                <TableCell align=\"center\">Actual Plate</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.matchPlate}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {projectNames[row.projectID]}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.matchPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.actualPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {activateModal(row)}}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.matchPlate);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { PlateRegex };\r\n","export default __webpack_public_path__ + \"static/media/closeGate.4cf57ce2.png\";","export default __webpack_public_path__ + \"static/media/openGate.46e4da23.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { ImageModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getMovementLogs } from '../services/index.js';\r\nimport closeGate from '../assets/closeGate.png';\r\nimport openGate from '../assets/openGate.jpg';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nexport function Records({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const  queryFields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\"\r\n  ];\r\n  const fieldPlaceholder = {\r\n    projectName: \"Project Name\",\r\n    vehicleType: \"Vehicle Type\",\r\n    isOpened: \"Is Opened\",\r\n    gateName: \"Gate Name\",\r\n    gateType: \"Gate Type\",\r\n    originalPlate: \"Original Plate\",\r\n    confirmedPlate: \"Actual Plate\",\r\n    detectionTime: \"Detection Time\",\r\n    confirmedTime: \"Confirmed Time\",\r\n    image1: \"Image 1\",\r\n    image2: \"Image 2\",\r\n    image3: \"Image 3\",\r\n    plateImage: \"Plate Image\"\r\n  };\r\n  const fields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"isOpened\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"detectionTime\",\r\n    \"confirmedTime\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\",\r\n    \"image1\",\r\n    \"image2\",\r\n    \"image3\",\r\n    \"plateImage\"\r\n  ];\r\n  const fieldLength = {\r\n    projectName: \"120px\",\r\n    vehicleType: \"120px\",\r\n    isOpened: \"120px\",\r\n    gateName: \"120px\",\r\n    gateType: \"120px\",\r\n    originalPlate: \"120px\",\r\n    confirmedPlate: \"120px\",\r\n    detectionTime: \"230px\",\r\n    confirmedTime: \"230px\",\r\n    image1: \"90px\",\r\n    image2: \"90px\",\r\n    image3: \"90px\",\r\n    plateImage: \"90px\"\r\n  };\r\n  const fieldHeight = {\r\n    image1: \"50px\",\r\n    image2: \"50px\",\r\n    image3: \"50px\",\r\n    plateImage: \"50px\",\r\n    isOpened: \"30px\"\r\n  }\r\n  const [state, setState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\",\r\n    startTime: null,\r\n    endTime: null\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\",\r\n    startTime: null,\r\n    endTime: null\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const reload = () =>{\r\n    getMovementLogs(fields.concat(\"logID\"), [])\r\n      .then(async (data) => {\r\n        console.log(data.content.slice(0,6));\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    if(id===\"curField\"){\r\n      setState((prevState) => ({\r\n        curField: value,\r\n        val: \"\"\r\n      }));\r\n    }else{\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { curField, val } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[curField].toLowerCase().indexOf(val.toLowerCase()) >= 0 \r\n      ).sort(\r\n        (a,b)=> (a.detectionTime < b.detectionTime) ? 1 : -1\r\n      )\r\n    );\r\n  };\r\n  \r\n  const reset = async (e) =>{\r\n    setState({\r\n      curField: \"projectName\",\r\n      val: \"\",\r\n      startTime: null,\r\n      endTime: null\r\n    });\r\n    setCurState({\r\n      curField: \"projectName\",\r\n      val: \"\",\r\n      startTime: null,\r\n      endTime: null\r\n    });\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ImageModal\r\n      src = {imageSrc}\r\n      toggleModal={()=>{\r\n        setImageSrc(null);\r\n      }}\r\n      />\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Entry Exit Records</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"curField\"\r\n                onChange={handleChange}\r\n                value={state.curField}\r\n              >\r\n                  {queryFields.map((queryField)=>(\r\n                      <option value={queryField}>{fieldPlaceholder[queryField]}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"val\"\r\n                placeholder={fieldPlaceholder[state.curField]}\r\n                onChange={handleChange}\r\n                value={state.val}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\" className=\"d-flex\">\r\n            <Form.Label>From:</Form.Label>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n            <DatePicker\r\n            isClearable\r\n              className=\"dateRecord\"\r\n              selected={state.startTime}\r\n              maxDate={state.endTime}\r\n              popperClassName=\"dateTimePopper\"\r\n              className=\"form-control\"\r\n              placeholderText=\"YYYY-MM-DD HH:MM:SS\"\r\n              onChange={date => handleChange({\r\n                target:{\r\n                  value:date,\r\n                  id: \"startTime\"\r\n                }\r\n              })}\r\n              showTimeSelect\r\n              dateFormat=\"yyyy-MM-dd\"\r\n              timeFormat=\"HH:mm:ss\"\r\n              timeIntervals={15}\r\n              timeCaption=\"time\"\r\n              dateFormat=\"yyyy-MM-dd HH:mm:ss\"\r\n              title=\"Start Time\"\r\n              clearButtonClassName=\"dateTimeClear\"\r\n            />\r\n            </Col>\r\n            <Col sm=\"auto\" className=\"d-flex\">\r\n            <Form.Label>To:</Form.Label>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n            <DatePicker\r\n            isClearable\r\n              className=\"dateRecord\"\r\n              selected={state.endTime}\r\n              minDate={state.startTime}\r\n              popperClassName=\"dateTimePopper\"\r\n              className=\"form-control\"\r\n              placeholderText=\"YYYY-MM-DD HH:MM:SS\"\r\n              onChange={date => handleChange({\r\n                target:{\r\n                  value:date,\r\n                  id: \"endTime\"\r\n                }\r\n              })}\r\n              showTimeSelect\r\n              dateFormat=\"yyyy-MM-dd\"\r\n              timeFormat=\"HH:mm:ss\"\r\n              timeIntervals={15}\r\n              timeCaption=\"time\"\r\n              dateFormat=\"yyyy-MM-dd HH:mm:ss\"\r\n              title=\"Start Time\"\r\n              clearButtonClassName=\"dateTimeClear\"\r\n            />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content greyBackground\">\r\n        <TableContainer component={Paper} className=\"overflowTable\">\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {fields.map((field) =>(\r\n                  <TableCell align=\"center\" style={{\"min-width\":fieldLength[field]}}>{fieldPlaceholder[field]}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.logID}>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.vehicleType}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.isOpened === true?\r\n                    <img style={{\"height\":fieldHeight.isOpened}} src={openGate} className=\"success-transform\"/>:\r\n                    <img style={{\"height\":fieldHeight.isOpened}} src={closeGate} className=\"danger-transform\"/>}\r\n            </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.gateName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.gateType}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.detectionTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.confirmedTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.originalPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.confirmedPlate===null?null:\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.confirmedPlate}</u>\r\n                      </div>\r\n                    </div>}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image1)} \r\n                    style={{\"height\":fieldHeight.image1}} \r\n                    src={row.image1}/>\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image2)} \r\n                    style={{\"height\":fieldHeight.image2}} \r\n                    src={row.image2} />\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image3)} \r\n                    style={{\"height\":fieldHeight.image3}} \r\n                    src={row.image3} />\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.plateImage)} \r\n                    style={{\"height\":fieldHeight.plateImage}} \r\n                    src={row.plateImage} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TableRow className=\"d-flex justify-content-center\">\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 50]}\r\n              colSpan={13}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n        </TableRow>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Records };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport function ParkRecords({ match }) {\r\n  return (<div className=\"d-flex justify-content-center\"><h1>Pending API</h1></div>);\r\n}\r\n\r\nexport default { ParkRecords };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, RulesModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getGate, alertService, delGate, getProjects, getAccessRule} from '../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\n\r\nexport function ParkingRules (){\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [project,setProject] = useState(null);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const [gateNames, setGateNames] = useState({});\r\n  const [projects,setProjects] = useState([]);\r\n  const func = async (val, inputField, outputField) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element[inputField]] = element[outputField];\r\n    });\r\n    return await temp;\r\n  };\r\n  const reloadProjects = () =>{\r\n    getProjects([\"projectID\", \"projectName\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setProjects(data.content);\r\n        func(data.content, \"projectID\", \"projectName\").then(async(list)=>{\r\n          setProjectNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reloadProjects();\r\n  }, [dummy]);\r\n\r\n  const reload = () =>{\r\n    getAccessRule(project, [\"accessRuleID\", \"accessRuleName\", \"isChargeable\", \"gates\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      //setRows(data.content);\r\n      setRows((data.content).map((val)=>{return{...val,\r\n      gates:[1,2]}}));\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Get Gate, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  const reloadGates = () =>{\r\n    getGate(project,[\"gateID\",\"gateName\"])\r\n      .then(async (data) => {\r\n        func(data.content, \"gateID\", \"gateName\").then(async(list)=>{\r\n          setGateNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n    if(project!==null)reloadGates();\r\n  },[project]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (accessRuleID) => {\r\n    /*\r\n    delGate(gateID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Rule Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Rule, There was an error!\", error);\r\n    });*/\r\n  };\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this rule?\"\r\n      />\r\n      {toggle.edit?\r\n      <RulesModal\r\n        hide={toggle.edit}\r\n        projectID = {project}\r\n        projectName = {projectNames[project]}\r\n        accessRuleID = {curID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />:null}\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Access Rules</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                onChange={(e)=>{\r\n                  setProject(e.target.value);\r\n                }}\r\n                value={project}\r\n              >\r\n                <option value=\"\">--Select a Project--</option>\r\n                  {projects.map((val)=>(\r\n                      <option value={val.projectID}>{val.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>Project</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Gates</b></TableCell>\r\n                <TableCell align=\"center\"><b>Chargeable</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{projectNames[project]}</TableCell>\r\n                  <TableCell align=\"center\">{row.accessRuleName}</TableCell>\r\n                  <TableCell align=\"center\">{(row.gates).map((gate)=>(\r\n                    <div>{gateNames[gate]} <br/></div> \r\n                  ))}</TableCell>\r\n                  <TableCell align=\"center\">{row.isChargeable}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.accessRuleID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"gold\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.accessRuleID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ParkingRules };","import React, { useContext } from \"react\";\nimport { store } from \"./store.js\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport \"./styles.css\";\nimport \"./assets/scrollbar.css\";\nimport { NavBar, AlertGroup } from \"./components/index.js\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport { Home, Login, Projects, EditProject, PlateRegex, Records, ParkRecords, ParkingRules } from \"./pages/index.js\";\n\nclass DebugRouter extends Router {\n  constructor(props) {\n    super(props);\n    console.log(\"initial history is: \", JSON.stringify(this.history, null, 2));\n    this.history.listen((location, action) => {\n      console.log(\n        `The current URL is ${location.pathname}${location.search}${location.hash}`\n      );\n      console.log(\n        `The last navigation action was ${action}`,\n        JSON.stringify(this.history, null, 2)\n      );\n    });\n  }\n}\n\nexport function App() {\n  return (\n    // <DebugRouter>\n    <Router>\n      <Switch>\n        <PrivateRoute path=\"/home\">\n          <Home />\n        </PrivateRoute>\n        <PrivateRoute path=\"/project/:projectID\">\n          <EditProject />\n        </PrivateRoute>\n        <PrivateRoute path=\"/project\">\n          <Projects />\n        </PrivateRoute>\n        <PrivateRoute path=\"/regex\">\n          <PlateRegex />\n        </PrivateRoute>\n        <PrivateRoute path=\"/records\">\n          <Records />\n        </PrivateRoute>\n        <PrivateRoute path=\"/parking\">\n          <ParkRecords />\n        </PrivateRoute>\n        <PrivateRoute path=\"/accessRules\">\n          <ParkingRules />\n        </PrivateRoute>\n        <PublicRoute path=\"/\">\n          <Login />\n        </PublicRoute>\n      </Switch>\n    </Router>\n    // </DebugRouter>\n  );\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  let auth = globalState.auth;\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth ? (\n          <div className=\"h-100\">\n              <AlertGroup />\n            <NavBar />\n            <div id=\"content-body\">\n              {React.cloneElement(children, { params: props.match.params })}\n            </div>\n          </div>\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ children, ...rest }) {\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  let auth = globalState.auth;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          <Redirect\n            to={{\n              pathname: \"/project\",\n              state: { from: location }\n            }}\n          />\n        ) : \n        <AlertGroup />(\n          children\n        )\n      }\n    />\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { StateProvider } from \"./store.js\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StateProvider>\n    <StrictMode>\n      <App />\n    </StrictMode>\n  </StateProvider>,\n  rootElement\n);\n"],"sourceRoot":""}