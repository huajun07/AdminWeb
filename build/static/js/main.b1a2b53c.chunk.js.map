{"version":3,"sources":["store.js","services/alertService.js","services/api.js","components/NavBar.js","components/ConfirmModal.js","components/QueryModal.js","components/DeviceModal.js","components/GateModal.js","components/AlertGroup.js","components/TablePaginationActions.js","components/RulesModal.js","components/UnitsModal.js","components/ImageModal.js","components/WhitelistModal.js","components/ExportWhitelistModal.js","components/ExportRecordModal.js","pages/Home.js","pages/Login.js","pages/Projects.js","pages/projectSubPages/ProjectForm.js","pages/projectSubPages/BusinessDetails.js","pages/projectSubPages/Devices.js","pages/projectSubPages/Gates.js","pages/projectSubPages/LedConfig.js","pages/EditProject.js","pages/SpecialPlates.js","pages/RegexPlates.js","pages/Records.js","pages/ParkRecords.js","pages/ParkingRules.js","pages/Whitelist.js","pages/Units.js","pages/DeviceHistory.js","App.js","index.js"],"names":["initialState","auth","user","toggled","store","createContext","Provider","StateProvider","children","useReducer","state","action","type","value","Error","dispatch","alertSubject","Subject","defaultId","alertService","onAlert","id","asObservable","pipe","filter","x","success","message","options","alert","alertType","error","info","warn","clear","next","server_URL","process","returnFunc","response","a","json","data","ok","content","status","Promise","reject","getProjects","columns","requestOptions","method","headers","body","JSON","stringify","authID","serviceName","objName","fetch","then","getMovementLogs","filters","startIndex","looseMatch","getDeviceHistory","getAccessRule","projectID","getGate","ID","getProjectInfo","delProject","getGateInfo","gateID","delGate","delDevice","deviceID","getObjectTypes","obj","getWhitelistTags","delAccessRule","accessRuleID","getWhitelistEntry","delWhitelistEntryInfo","recordID","updateUnitInfo","unitID","modifyParams","delUnit","getUnit","NavBar","storeContext","useContext","globalState","history","useHistory","direct","path","console","log","push","className","collapsed","width","iconShape","style","icon","fontSize","onClick","title","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Item","Button","restartServer","time","setTimeout","window","location","reload","catch","marginRight","endIcon","ConfirmModal","props","toggleModal","hide","Modal","show","onHide","Header","closeButton","Title","Body","Footer","DeviceModal","deviceTypes","useState","validated","setValidated","setState","dummy","projects","setProjects","curProject","setCurProject","gates","setGates","loading","setLoading","useEffect","deviceName","deviceType","deviceCarpark","manufacturer","manufacturerCode","direction","isPrimaryDevice","isGateControl","getDeviceInfo","handleChange","target","e","filler","e2","undefined","includes","boolean","checked","prevState","update","tempState","updateDeviceInfo","create","values","newDeviceReq","createDevice","Spinner","animation","role","Form","noValidate","onSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","Group","as","Row","Label","column","sm","align","Col","Control","required","placeholder","name","onChange","Feedback","readOnly","custom","map","project","projectName","disabled","gate","gateName","Check","GateModal","newState","gateTypes","whiteListTags","setWhiteListTags","newInitialState","gateType","isChargeable","ledOnTime","ledOffTime","allowedTypes","whitelistTags","tag","label","updateGateInfo","newGateReq","createGate","showSeconds","input","CheckPicker","sticky","searchable","defaultValue","AlertGroup","alerts","this","subscription","subscribe","removeAlert","unsubscribe","length","idx","Alert","dismissible","onClose","React","Component","TablePaginationActions","count","page","rowsPerPage","onChangePage","flexShrink","right","IconButton","event","aria-label","Math","ceil","max","RulesModal","curGates","setCurGates","initialGates","setInitialGates","func","val","temp","forEach","element","accessRuleName","getAccessRuleInfo","Object","keys","String","list","updateAccessRuleInfo","parseInt","createAccessRule","margin","size","UnitsModal","entryGates","setEntryGates","exitGates","setExitGates","curEntryGates","setCurEntryGates","curExitGates","setCurExitGates","initEntryGates","setInitEntryGates","initExitGates","setInitExitGates","funcEntry","funcExit","unitName","maxPlates","getUnitInfo","filterEntry","filterExit","createUnit","ImageModal","src","centered","pad2","n","dateToString","date","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","WhitelistModal","accessRules","units","setWhitelistTags","plates","setPlates","reloadPlate","getPlates","plate","plateNumber","startDateTime","endDateTime","getWhitelistEntryInfo","updateWhitelistEntryInfo","createWhitelistEntry","isValid","isInvalid","unit","rule","whitelistTag","DatePicker","str1","str2","format","ranges","Date","exportToCSV","apiData","fileName","ws","XLSX","aoa_to_sheet","sheet_add_json","skipHeader","origin","wch","wb","book_new","book_append_sheet","excelBuffer","bookType","Blob","FileSaver","ExportWhitelistModal","projectNames","setProject","setAccessRules","row","entry","accessRule","ExportRecordModal","startTime","endTime","timeState","setTimeState","fields","handleTimeChange","InputGroup","Addon","block","appearance","detectionTime","fetchData","Home","devices","setDevices","newDevices","setNewDevices","setDeviceTypes","deviceTypeNames","setDeviceTypeNames","curID","setCurID","edit","delete","toggle","setToggle","getAllDevice","device","deviceStatus","getNewDevices","entries","modal","prevVal","del","Helmet","charSet","Jumbotron","Card","color","height","Typography","component","TableContainer","Paper","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","index","deviceIP","padding","colSpan","Login","username","password","document","getElementById","innerText","Projects","match","initialRows","setInitialRows","rows","setRows","add","projectType","curState","setCurState","setPage","curRows","toLowerCase","indexOf","insert","contactNumber","maCompany","equipManu","addProject","setRowsPerPage","emptyRows","min","Breadcrumb","href","active","slice","scope","data-value","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","ActionsComponent","ProjectForm","useParams","checkConditions","levDistance","projectTypes","setProjectTypes","setCheckConditions","getCheckConditions","cond","desc","updateProjectInfo","country","BusinessDetails","setProjectName","barrierDelay","networkWarningDuration","instantImgUpload","vehicleColorDetect","localImgStore","myFormat","num","strict","Devices","useLocation","pathname","setGateName","getDevice","inline","Tooltip","Gates","setGateTypes","gateTypeNames","setGateTypeNames","setModal","openGateFunc","openGate","LedConfig","trigger","voiceMsg","textMsg","Input","vals","EditProject","useRouteMatch","url","split","background","Tab","Container","xs","exact","to","SpecialPlates","NaN","actualPlate","matchPlate","setVal","setProjectNames","getSpecialPlate","handleChangeVal","Number","isNaN","delSpecialPlate","addSpecialPlate","Text","muted","updateSpecialPlate","activateModal","RegexPlates","matchType","matchName","matchTypes","setMatchTypes","getRegexPlate","delRegexPlate","addRegexPlate","matchTypeID","updateRegexPlate","Records","imageSrc","setImageSrc","loadImage","setLoadImage","queryFields","fieldPlaceholder","vehicleType","isOpened","originalPlate","confirmedPlate","confirmedTime","image1","plateImage","fieldLength","fieldHeight","curField","curField2","val2","curTimeState","setCurTimeState","concat","sort","b","reset","addImages","logID","queryField","field","ParkRecords","ParkingRules","gateNames","setGateNames","inputField","outputField","Whitelist","export","accessRuleVals","setAccessRuleVals","setUnits","unitNames","setUnitNames","timeVar","setTimeVar","curTimeVar","setCurTimeVar","isInteger","Units","Array","isArray","currentPlates","DeviceHistory","logDateTime","Router","PrivateRoute","rest","render","cloneElement","params","from","PublicRoute","App","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.b1a2b53c.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  auth: true,\r\n  user: \"admin\",\r\n  toggled: false\r\n};\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"setAuth\":\r\n        return {\r\n          ...state,\r\n          auth: action.value\r\n        };\r\n      case \"setUser\":\r\n        return {\r\n          ...state,\r\n          user: action.value\r\n        };\r\n      case \"setToggled\":\r\n        return {\r\n          ...state,\r\n          toggled: !state.toggled\r\n        };\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { store, StateProvider };\r\n","import { Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nconst alertSubject = new Subject();\r\nconst defaultId = 'default-alert';\r\n\r\nexport const alertService = {\r\n    onAlert,\r\n    success,\r\n    error,\r\n    info,\r\n    warn,\r\n    alert,\r\n    clear\r\n};\r\n\r\nexport const alertType = {\r\n    success: 'success',\r\n    error: 'danger',\r\n    info: 'info',\r\n    warning: 'warning'\r\n}\r\n\r\n// enable subscribing to alerts observable\r\nfunction onAlert(id = defaultId) {\r\n    return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\r\n}\r\n\r\n// convenience methods\r\nfunction success(message, options) {\r\n    alert({ ...options, type: alertType.success, message });\r\n}\r\n\r\nfunction error(message, options) {\r\n    alert({ ...options, type: alertType.error, message });\r\n}\r\n\r\nfunction info(message, options) {\r\n    alert({ ...options, type: alertType.info, message });\r\n}\r\n\r\nfunction warn(message, options) {\r\n    alert({ ...options, type: alertType.warning, message });\r\n}\r\n\r\n// core alert method\r\nfunction alert(alert) {\r\n    alert.id = alert.id || defaultId;\r\n    alertSubject.next(alert);\r\n}\r\n\r\n// clear alerts\r\nfunction clear(id = defaultId) {\r\n    alertSubject.next({ id });\r\n}","import { alertService } from './index.js';\r\n\r\nconst server_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst returnFunc = async (response) => {\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.content) || response.status;\r\n        return Promise.reject(error);\r\n    }\r\n    return data;\r\n}\r\n\r\nconst getProjects = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"project\",\r\n            columns\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getMovementLogs = (columns, filters, startIndex = 0, looseMatch = false) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"movementLog\",\r\n            columns,\r\n            filters,\r\n            startIndex,\r\n            looseMatch\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDeviceHistory = (columns, filters, startIndex = 0, looseMatch = false) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"deviceStatusLog\",\r\n            columns,\r\n            filters,\r\n            startIndex,\r\n            looseMatch\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAccessRule = (projectID, columns) =>{\r\n    let filters = {};\r\n    if(projectID!==null)filters = {\r\n        projectID\r\n    };\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"accessRule\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createSpecialPlate\",\r\n          content: state\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getSpecialPlate = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"specialPlate\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delSpecialPlate = (matchPlate) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteSpecialPlate\",\r\n            content: {\r\n                matchPlate\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifySpecialPlate\",\r\n            content: {\r\n            matchPlate: state.matchPlate,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addRegexPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createRegexPlate\",\r\n          content: state\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getRegexPlate = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"regexPlate\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delRegexPlate = (matchPlate) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteRegexPlate\",\r\n            content: {\r\n                matchPlate\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateRegexPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyRegexPlate\",\r\n            content: {\r\n            matchPlate: state.matchPlate,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addProject = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createProject\",\r\n          content: {\r\n            projectName: \"\",\r\n            projectType: \"\",\r\n            location: \"\",\r\n            contactNumber: \"\",\r\n            maCompany: \"\",\r\n            equipManu: \"\"\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGate = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getTable\",\r\n            content: {\r\n            objName: \"gate\",\r\n            columns,\r\n            filters:{\r\n                projectID: ID\r\n            }\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDevice = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"device\",\r\n            columns,\r\n            filters:{\r\n              gateID: ID\r\n            }\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAllDevice = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"device\",\r\n            columns\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createGate = (projectID,values) =>{\r\n    const newGateReq = {\r\n        ...values,\r\n        projectID\r\n    };\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createGate\",\r\n            content: newGateReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createDevice = (gateID, values) =>{\r\n    const newDeviceReq = {\r\n        ...values,\r\n        gateID\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createDevice\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getProjectInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getProject\",\r\n            content: {\r\n            projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delProject = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteProject\",\r\n            content: {\r\n                projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateProjectInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyProject\",\r\n            content: {\r\n            projectID: ID,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getBusinessInfo = (ID) =>{\r\n    //Pending Function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateBusinessInfo = (ID, state) =>{\r\n    //Pending function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGateInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delGate = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateGateInfo = (ID, state) =>{\r\n    console.log(state);\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyGate\",\r\n            content: {\r\n                gateID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDeviceInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delDevice = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateDeviceInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyDevice\",\r\n            content: {\r\n                deviceID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createAccessRule = (values) =>{\r\n    const newDeviceReq = {\r\n        ...values\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createAccessRule\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAccessRuleInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getAccessRule\",\r\n          content: {\r\n            accessRuleID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateAccessRuleInfo = (ID, state) =>{\r\n    console.log(state);\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyAccessRule\",\r\n            content: {\r\n                accessRuleID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getObjectTypes = (obj) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getObjectTypes\",\r\n            content: {\r\n                objName: obj\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getCheckConditions = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getCheckConditions\"\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getWhitelistTags = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getWhitelistTags\"\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst openGate = (gateID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"openGate\",\r\n            content:{\r\n                gateID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getNewDevices = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getNewDevice\"\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delAccessRule = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteAccessRule\",\r\n          content: {\r\n              accessRuleID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getWhitelistEntry = (columns,filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"dbWhitelist\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getWhitelistEntryInfo = (recordID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getWhitelistEntry\",\r\n          content: {\r\n            recordID\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateWhitelistEntryInfo = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"editWhitelistEntry\",\r\n            content: state\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delWhitelistEntryInfo = (recordID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteWhitelistEntry\",\r\n          content: {\r\n            recordID\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createWhitelistEntry = (values) =>{\r\n    const newDeviceReq = {\r\n        ...values\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"editWhitelistEntry\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createUnit = (values) => {\r\n    const newDeviceReq = {\r\n        ...values\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createUnit\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getUnitInfo = (ID) => {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getUnit\",\r\n            content: {\r\n                unitID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateUnitInfo = (ID, state) => {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyUnit\",\r\n            content: {\r\n                unitID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delUnit = (ID) => {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteUnit\",\r\n            content: {\r\n                unitID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getUnit = (projectID, columns) => {\r\n    let filters = {};\r\n    if (projectID !== null) filters = { projectID };\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getTable\",\r\n            content: {\r\n                objName: \"unit\",\r\n                columns,\r\n                filters\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getPlates = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"plate\",\r\n            columns\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst restartServer = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"restartServer\"\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nexport {\r\n    getGate,\r\n    getDevice,\r\n    createGate,\r\n    createDevice,\r\n    getProjectInfo,\r\n    updateProjectInfo,\r\n    getBusinessInfo,\r\n    updateBusinessInfo,\r\n    getGateInfo,\r\n    updateGateInfo,\r\n    getDeviceInfo,\r\n    updateDeviceInfo,\r\n    getProjects,\r\n    addProject,\r\n    delProject,\r\n    delGate,\r\n    delDevice,\r\n    getMovementLogs,\r\n    getDeviceHistory,\r\n    getSpecialPlate,\r\n    delSpecialPlate,\r\n    updateSpecialPlate,\r\n    addSpecialPlate,\r\n    getRegexPlate,\r\n    delRegexPlate,\r\n    updateRegexPlate,\r\n    addRegexPlate,\r\n    getAccessRule,\r\n    createAccessRule,\r\n    getAccessRuleInfo,\r\n    updateAccessRuleInfo,\r\n    getObjectTypes,\r\n    getCheckConditions,\r\n    getWhitelistTags,\r\n    openGate,\r\n    getAllDevice,\r\n    getNewDevices,\r\n    delAccessRule,\r\n    getWhitelistEntry,\r\n    getWhitelistEntryInfo,\r\n    updateWhitelistEntryInfo,\r\n    delWhitelistEntryInfo,\r\n    createWhitelistEntry,\r\n    createUnit,\r\n    getUnitInfo,\r\n    updateUnitInfo,\r\n    delUnit,\r\n    getUnit,\r\n    getPlates,\r\n    restartServer\r\n};","import {\r\n  SidebarContent,\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SubMenu\r\n} from \"react-pro-sidebar\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport { List } from \"react-bootstrap-icons\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { store } from \"../store.js\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalParkingIcon from '@material-ui/icons/LocalParking';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport ApartmentIcon from '@material-ui/icons/Apartment';\r\nimport FlipIcon from '@material-ui/icons/Flip';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport {IconButton, Button} from '@material-ui/core';\r\nimport {restartServer, alertService} from '../services/index.js';\r\n\r\nexport function NavBar() {\r\n  const storeContext = useContext(store);\r\n  const { dispatch } = storeContext;\r\n  const globalState = storeContext.state;\r\n  const {toggled, user}  = globalState;\r\n  let history = useHistory();\r\n  const logout = () => {\r\n    dispatch({\r\n      type: \"setAuth\",\r\n      value: false\r\n    });\r\n    dispatch({\r\n      type: \"setUser\",\r\n      value: \"\"\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n  const direct = (path) => {\r\n    console.log(\"clicked\", path);\r\n    history.push(path);\r\n  };\r\n  const toggleSideBar = () => {\r\n    dispatch({\r\n      type: \"setToggled\"\r\n    });\r\n  };\r\n  const restart = () =>{\r\n    restartServer()\r\n    .then(async (data) => {\r\n      alertService.success(\"Restarting Server...\",{time:5000});\r\n      setTimeout(()=>{\r\n        refreshPage();\r\n      }, 5000);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  function refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-100 fixed-top clickThrough\">\r\n      <ProSidebar\r\n        className=\"clickAble navbar-default navbar-static-top sideBar\"\r\n        collapsed={toggled}\r\n        width=\"250px\"\r\n        //collapsedWidth=\"px\"\r\n      >\r\n        <SidebarContent>\r\n          <Menu iconShape=\"circle\">\r\n            <MenuItem \r\n              style={{\"background\":\"#2c3b41\",\"height\":\"60px\", \"pointer-events\":\"none\"}}\r\n              className=\"d-flex justify-content-center align-items-center\">\r\n              <div style={{\"padding-top\":\"10px\", \"color\":\"white\"}}>\r\n                <h5>Admin</h5>\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem \r\n              icon={<AccountCircleIcon fontSize='large'/>}\r\n              style={{\"pointer-events\":\"none\", \"border-bottom\":\"1px solid gray\"}}>\r\n              <div style={{ \"color\":\"white\"}}>\r\n                Welcome, {user}\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<HomeIcon onClick={()=>direct(\"/home\")}/>}>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<InfoIcon onClick={()=>direct(\"/project\")} />}>\r\n              <div onClick={()=>direct(\"/project\")}>\r\n                Project\r\n              </div>\r\n            </MenuItem>\r\n            <SubMenu title=\"Plate Correction\" icon={<FlipIcon/>}>\r\n              <MenuItem onClick={()=>direct(\"/specialPlates\")}>Special Plate Correction</MenuItem>\r\n              <MenuItem onClick={()=>direct(\"/regexPlates\")}>Standard Plate Matching</MenuItem>\r\n            </SubMenu>\r\n            <MenuItem icon={<StorageIcon onClick={()=>direct(\"/records\")} />}>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n                Exit/Entry Records\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<LocalParkingIcon onClick={()=>direct(\"/parking\")} />}>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </MenuItem>\r\n            <SubMenu title=\"Access\" icon={<PaymentIcon/>}>\r\n              <MenuItem  onClick={()=>direct(\"/accessRules\")}>Access Rules</MenuItem>\r\n              <MenuItem onClick={()=>direct(\"/whitelist\")}>Whitelist Entries</MenuItem>\r\n            </SubMenu>\r\n            <MenuItem icon={<ApartmentIcon onClick={()=>direct(\"/units\")} />}>\r\n              <div onClick={()=>direct(\"/units\")}>\r\n                Units\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<HistoryIcon onClick={()=>direct(\"/DeviceHistory\")} />}>\r\n              <div onClick={()=>direct(\"/DeviceHistory\")}>\r\n                Device History\r\n              </div>\r\n            </MenuItem>\r\n          </Menu>\r\n        </SidebarContent>\r\n      </ProSidebar>\r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" className={\"clickAble navBar\"+(toggled?\" navBar-collapsed\":\" navBar-expand\")}>\r\n        <Navbar.Brand \r\n        className=\"sideBar\" \r\n        onClick={toggleSideBar}>\r\n          <List />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"nav-dropdown\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto nav-dropdown\">\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/project\")}>\r\n                Project\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n              Exit/Entry Records\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </Nav.Link>\r\n            <NavDropdown title=\"Access\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item onClick={()=>direct(\"/accessRules\")}>\r\n                Access Rules\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={()=>direct(\"/whitelist\")}>\r\n                Whitelist Entries\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/units\")}>\r\n                Units\r\n              </div>\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Button onClick={restart}\r\n          style={{marginRight: \"10px\"}}\r\n          endIcon={<CachedIcon/>} >\r\n            Restart Server\r\n          </Button>\r\n          <Button onClick={logout}\r\n          variant='outlined'\r\n          endIcon={<ExitToAppIcon/>} >\r\n            Logout\r\n          </Button>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { NavBar };\r\n","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nexport function ConfirmModal(props) {\r\n  let toggleModal = props.toggleModal;\r\n  let success = props.success;\r\n  let hide = props.hide;\r\n  let body = props.body;\r\n  let title = props.title;\r\n  return (\r\n    <Modal show={hide} onHide={toggleModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{body}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={toggleModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={()=>{\r\n          success();\r\n        }}>\r\n          Confirm\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { ConfirmModal};\r\n","import { Button, Modal, Form } from \"react-bootstrap\";\r\nimport {useState} from 'react';\r\n\r\nexport function QueryModal(props) {\r\n    let toggleModal = props.toggleModal;\r\n    let success = props.success;\r\n    let hide = props.hide;\r\n    let body = props.body;\r\n    let title = props.title;\r\n    const [value,setValue] = useState(\"\");\r\n    const handleChange = (e) =>{\r\n      setValue(e.target.value);\r\n    }\r\n    const exit = () =>{\r\n      setValue(\"\");\r\n      toggleModal();\r\n    }\r\n    return (\r\n      <Modal show={hide} onHide={exit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Label>{body}</Form.Label>\r\n            <Form.Control \r\n            value={value}\r\n            onChange={handleChange}\r\n            />\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={exit}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>{\r\n              success(value);\r\n              exit();\r\n              }}>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default {QueryModal};","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, createDevice, getDeviceInfo, updateDeviceInfo, getGate, getProjects } from '../services/index.js';\r\n\r\nexport function DeviceModal(props) {\r\n    let {hide, gateID, toggleModal, success, deviceID, deviceTypes } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [projects, setProjects] = useState([]);\r\n    const [curProject, setCurProject] = useState(\"\");\r\n    const [gates, setGates] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    if(deviceID===null){\r\n      setState({\r\n        gateID,\r\n        deviceID: \"\",\r\n        deviceName: \"\",\r\n        deviceType: \"\",\r\n        deviceCarpark: \"\",\r\n        manufacturer: \"\",\r\n        manufacturerCode: \"\",\r\n        direction: \"\",\r\n        isPrimaryDevice: false,\r\n        isGateControl: false\r\n      });\r\n    }else{\r\n      setLoading(true);\r\n      getDeviceInfo(deviceID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Device, There was an error!\", error);\r\n      });\r\n      if(gateID===null){\r\n        handleChange({\r\n          target:{\r\n            id: \"gateID\",\r\n            value: \"\"\r\n          }\r\n        });\r\n        getProjects([\"projectID\",\"projectName\"])\r\n        .then(async (data) => {\r\n          setCurProject(\"\");\r\n          setProjects(data.content);\r\n        })\r\n        .catch((error) => {\r\n          alertService.error(\"There was an error!\");\r\n          console.error(\"Get Projects, There was an error!\", error);\r\n        });\r\n      }\r\n    }\r\n  }, [dummy,hide]);\r\n\r\n  useEffect(()=>{\r\n    handleChange({\r\n      target:{\r\n        id: \"gateID\",\r\n        value: \"\"\r\n      }\r\n    });\r\n    if(curProject === null)setGates([]);\r\n    else{\r\n      getGate(curProject,[\"gateID\",\"gateName\"])\r\n      .then(async (data) => {\r\n        setGates(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gates, There was an error!\", error);\r\n      });\r\n    }\r\n  },[curProject])\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (['isPrimaryDevice','isGateControl'].includes(id)) {\r\n      let boolean = e.target.checked;\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: boolean\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(deviceID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    console.log(state);\r\n    let tempState = state;\r\n    delete tempState[\"deviceStatus\"];\r\n    updateDeviceInfo(deviceID, tempState)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createDevice(gateID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Device, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{deviceID===null?\"Add Device\":\"Edit Device\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <div className={\"loadingModal\"+(loading?\"\":\" invisible\")}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n            <Modal.Body>\r\n            <Form id =\"deviceModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Device ID\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >{deviceID===null?\r\n                        <div><Form.Control\r\n                        required\r\n                        placeholder=\"ID\"\r\n                        id=\"deviceID\"\r\n                        name=\"deviceID\"\r\n                        type =\"text\"\r\n                        value={state.deviceID}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device ID is a required field.\r\n                        </Form.Control.Feedback></div>:<Form.Control type=\"text\" placeholder={state.deviceID} readOnly />}\r\n                    </Col>\r\n                    </Form.Group>\r\n                    {gateID===null?\r\n                    <div>\r\n                      <Form.Group as={Row}>\r\n                        <Form.Label column sm={4}  align=\"right\">\r\n                            Project\r\n                        </Form.Label>\r\n                        <Col\r\n                            sm={6}\r\n                        >\r\n                          <Form.Control\r\n                            custom\r\n                            required\r\n                            as=\"select\"\r\n                            id=\"project\"\r\n                            name=\"project\"\r\n                            value={curProject}\r\n                            onChange={(e)=>{\r\n                              setCurProject(e.target.value);\r\n                            }}\r\n                            >\r\n                            <option value={\"\"}>--Select Project--</option>\r\n                            {projects.map((project)=>(\r\n                              <option value={project.projectID}>{project.projectName}</option>\r\n                            ))}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            Project is a required field.\r\n                          </Form.Control.Feedback>\r\n                        </Col>\r\n                      </Form.Group>\r\n                      <Form.Group as={Row}>\r\n                        <Form.Label column sm={4}  align=\"right\">\r\n                            Gate\r\n                        </Form.Label>\r\n                        <Col\r\n                            sm={6}\r\n                        >\r\n                          <Form.Control\r\n                            disabled = {curProject===\"\"}\r\n                            custom\r\n                            required\r\n                            as=\"select\"\r\n                            id=\"gateID\"\r\n                            name=\"gateID\"\r\n                            value={state.gateID===null?\"\":state.gateID}\r\n                            onChange={handleChange}\r\n                            >\r\n                            <option value={\"\"}>--Select Project--</option>\r\n                            {gates.map((gate)=>(\r\n                              <option value={gate.gateID}>{gate.gateName}</option>\r\n                            ))}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            Gate is a required field.\r\n                          </Form.Control.Feedback>\r\n                        </Col>\r\n                      </Form.Group>\r\n                      </div>\r\n                      :null\r\n                    }\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Device Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"deviceName\"\r\n                        name=\"deviceName\"\r\n                        value={state.deviceName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Device Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"deviceType\"\r\n                        name=\"deviceType\"\r\n                        value={state.deviceType===null?null:state.deviceType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        {deviceTypes.map((type)=>(\r\n                          <option value={type.id}>{type.name}</option>\r\n                        ))}\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Carpark\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Carpark\"\r\n                        id=\"deviceCarpark\"\r\n                        name=\"deviceCarpark\"\r\n                        value={state.deviceCarpark}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Capark is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                         Manufacturer\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer\"\r\n                        id=\"manufacturer\"\r\n                        name=\"manufacturer\"\r\n                        value={state.manufacturer}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                         Manufacturer Code\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer Code\"\r\n                        id=\"manufacturerCode\"\r\n                        name=\"manufacturerCode\"\r\n                        value={state.manufacturerCode}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer Code is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                         Direction\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Direction\"\r\n                        id=\"direction\"\r\n                        name=\"direction\"\r\n                        value={state.direction}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Direction is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Primary Device?\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked = {state.isPrimaryDevice}\r\n                        type=\"switch\"\r\n                        id=\"isPrimaryDevice\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Control Gate?\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isGateControl}\r\n                        type=\"switch\"\r\n                        id=\"isGateControl\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"deviceModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { DeviceModal };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport TimeField from 'react-simple-timefield';\r\nimport { alertService, createGate, getGateInfo, updateGateInfo, getWhitelistTags } from '../services/index.js';\r\n\r\nimport { CheckPicker } from 'rsuite';\r\n\r\nexport function GateModal(props) {\r\n    let {hide, gateID, toggleModal, success, newState, projectID, gateTypes } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [whiteListTags, setWhiteListTags] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const newInitialState = {\r\n      gateName: \"\",\r\n      gateType: \"\",\r\n      isChargeable: false,\r\n      ledOnTime: \"00:00:00\",\r\n      ledOffTime: \"00:00:00\",\r\n      allowedTypes: []\r\n    };\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    console.log(\"gateModal\", gateID, projectID, newState);\r\n    if(!hide){\r\n      setState(newInitialState);\r\n    }else if(newState){\r\n      setState(newInitialState);\r\n    }else{\r\n      setLoading(true);\r\n      getGateInfo(gateID)\r\n      .then(async (data) => {\r\n        if(data.message.allowedTypes!==null){\r\n          setState(data.message);\r\n        }else{\r\n          setState({\r\n            ...data.message,\r\n            allowedTypes: []\r\n          })\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gate, There was an error!\", error);\r\n      });\r\n    }\r\n    getWhitelistTags()\r\n    .then(async (data) => {\r\n      setWhiteListTags(data.message.whitelistTags.map((tag)=>(\r\n        {\r\n          label: tag,\r\n          value: tag\r\n        }\r\n      )));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get WhiteList Tags, There was an error!\", error);\r\n    });\r\n  }, [dummy,hide]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (['isChargeable'].includes(id)) {\r\n      let boolean = e.target.checked;\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: boolean\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(newState) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateGateInfo(gateID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createGate(projectID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Gate, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n      setValidated(false);\r\n      toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{newState?\"Add Gate\":\"Edit Gate\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <div className={\"loadingModal\"+(loading?\"\":\" invisible\")}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n            <Modal.Body>\r\n            <Form id='gateModal' noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Gate Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"gateName\"\r\n                        name=\"gateName\"\r\n                        value={state.gateName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Gate Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"gateType\"\r\n                        name=\"gateType\"\r\n                        value={state.gateType===null?\"\":state.gateType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        {gateTypes.map((type)=>(\r\n                          <option value={type.id}>{type.name}</option>\r\n                        ))}\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Charge fee for entry\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                    Time to turn on the LPR camera’s LED\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex\"\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOnTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOnTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOnTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Time to turn off the LPR\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        className=\"align-items-center d-flex\"\r\n                        sm={6}\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOffTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOffTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOffTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Whitelist Tags\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <CheckPicker\r\n                          sticky\r\n                          searchable={false}\r\n                          data={whiteListTags}\r\n                          defaultValue={[]}\r\n                          style={{ width: \"100%\" }}\r\n                          value={state.allowedTypes}\r\n                          onChange={(value)=>{\r\n                            handleChange({\r\n                              target:{\r\n                                id: \"allowedTypes\",\r\n                                value\r\n                              }\r\n                            });\r\n                          }}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"gateModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { GateModal };\r\n","import React from 'react';\r\n\r\nimport { alertService, alertType } from '../services/index.js';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nexport class AlertGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            alerts: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // subscribe to new alert notifications\r\n        this.subscription = alertService.onAlert(this.props.id)\r\n            .subscribe(alert => {\r\n                // add alert to array\r\n                this.setState({ alerts: [...this.state.alerts, alert] });\r\n\r\n                // auto close alert if required\r\n                setTimeout(() => this.removeAlert(alert), alert.time===undefined ? 3000: alert.time);\r\n            });\r\n\r\n        // clear alerts on location change\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // unsubscribe & unlisten to avoid memory leaks\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert) {\r\n        this.setState({ alerts: this.state.alerts.filter(x => x !== alert) })\r\n    }\r\n\r\n    render() {\r\n        const { alerts } = this.state;\r\n        if (!alerts.length) return null;\r\n        return (\r\n            <div className=\"alertGrp\">\r\n                {console.log(alerts), \r\n                alerts.map((alert,idx) =>\r\n                    <Alert \r\n                    key = {idx} \r\n                    variant={alert.type}\r\n                    dismissible = {true}\r\n                    onClose={()=>{this.removeAlert(alert)}}>\r\n                        {alert.message}\r\n                    </Alert>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default {AlertGroup} ;","import {IconButton} from '@material-ui/core';\r\n\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nexport function TablePaginationActions(props) {\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div style={{flexShrink:0, right:0}}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        <FirstPageIcon />\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n         <KeyboardArrowLeft />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        <KeyboardArrowRight />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        <LastPageIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default {TablePaginationActions};","import { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, createAccessRule, getAccessRuleInfo, updateAccessRuleInfo, getGate } from '../services/index.js';\r\n\r\nimport { CheckPicker } from 'rsuite';\r\n\r\nexport function RulesModal(props) {\r\n    let {hide, accessRuleID, projectID, success, projectName, toggleModal } = props;\r\n    let cnt = 0;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [gates, setGates] = useState([]);\r\n    const [curGates, setCurGates] = useState({});\r\n    const [initialGates, setInitialGates] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const func = async (val) =>{\r\n        let temp = {};\r\n        val.forEach(async (element)=>{\r\n            temp[element[\"gateID\"]] = false;\r\n        });\r\n        initialGates.forEach(async (element)=>{\r\n            temp[element] = true;\r\n        });\r\n        return await temp;\r\n    };\r\n    const loadGates = () =>{\r\n        getGate(projectID, [\"gateID\", \"gateName\"])\r\n        .then(async (data) => {\r\n            setGates(data.content.map((gate)=>({\r\n              value: String(gate.gateID),\r\n              label: gate.gateName\r\n            })));\r\n            func(data.content).then(async(list)=>{\r\n                setCurGates(await list);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            alertService.error(\"There was an error!\");\r\n            console.error(\"Get Gate Rule, There was an error!\", error);\r\n        });\r\n    }\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    if(accessRuleID===null){\r\n      setLoading(false);\r\n      setState({\r\n        projectID,\r\n        accessRuleName: \"\",\r\n        isChargeable: false,\r\n        gates: []\r\n      });\r\n      setInitialGates([]);\r\n    }else{\r\n      setTimeout(()=>setLoading(false), 600);\r\n      getAccessRuleInfo(accessRuleID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n        setInitialGates(data.message.gates);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Access Rule, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    setState((prevState)=>({\r\n        ...prevState,\r\n        gates: (Object.keys(curGates)).filter((gate)=>curGates[gate])\r\n      }));\r\n  },[curGates]);\r\n\r\n  useEffect(()=>{\r\n    loadGates();\r\n  },[initialGates]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (['isChargeable'].includes(id)) {\r\n      let boolean = e.target.checked;\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: boolean\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleGateChange = (e) =>{\r\n    let id = e.target.id;\r\n    setCurGates((prevState) => ({\r\n      ...prevState,\r\n      [id]: !prevState[id]\r\n    }));\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(accessRuleID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateAccessRuleInfo(accessRuleID, {\r\n      ...state,\r\n      gates: state.gates.map((gate)=>(parseInt(gate)))\r\n    })\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Access Rule, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createAccessRule({\r\n      ...state,\r\n      gates: state.gates.map((gate)=>(parseInt(gate)))\r\n    })\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Access Rule, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n      {loading?\r\n      <Row className=\"d-flex justify-content-center\" style={{margin:\"200px\"}}>\r\n      <Spinner size=\"lg\" animation=\"border\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n    </Row>:\r\n        <div>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{accessRuleID===null?\"Add Rule\":\"Edit Rule\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id =\"ruleModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Project Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={projectName} readOnly />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Access Rule Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"accessRuleName\"\r\n                        name=\"accessRuleName\"\r\n                        value={state.accessRuleName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Rule Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Gates\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <CheckPicker\r\n                          sticky\r\n                          searchable={false}\r\n                          data={gates}\r\n                          defaultValue={[]}\r\n                          style={{ width: \"100%\" }}\r\n                          value={state.gates}\r\n                          onChange={(value)=>{\r\n                            handleChange({\r\n                              target:{\r\n                                id: \"gates\",\r\n                                value\r\n                              }\r\n                            });\r\n                          }}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Is Chargeable\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n          setValidated(false);\r\n          toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"ruleModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n        </div>\r\n      }\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { RulesModal };\r\n","import { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, createUnit, getUnitInfo, updateUnitInfo, getGate } from '../services/index.js';\r\n\r\nimport { CheckPicker } from 'rsuite';\r\n\r\nexport function UnitsModal(props) {\r\n    let {hide, unitID, projectID, success, projectName, toggleModal } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [entryGates, setEntryGates] = useState([]);\r\n    const [exitGates, setExitGates] = useState([]);\r\n    const [curEntryGates, setCurEntryGates] = useState({});\r\n    const [curExitGates, setCurExitGates] = useState({});\r\n\r\n    const [initEntryGates, setInitEntryGates] = useState([]);\r\n    const [initExitGates, setInitExitGates] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const funcEntry = async (val) =>{\r\n        let temp = {};\r\n        val.forEach(async (element)=>{\r\n            temp[element[\"gateID\"]] = false;\r\n        });\r\n        initEntryGates.forEach(async (element)=>{\r\n            temp[element] = true;\r\n        });\r\n        return await temp;\r\n    };\r\n    const funcExit = async (val) =>{\r\n        let temp = {};\r\n        val.forEach(async (element)=>{\r\n            temp[element[\"gateID\"]] = false;\r\n        });\r\n        initExitGates.forEach(async (element)=>{\r\n            temp[element] = true;\r\n        });\r\n        return await temp;\r\n    };\r\n    const loadGates = () =>{\r\n        getGate(projectID, [\"gateID\", \"gateName\", \"gateType\"])\r\n        .then(async (data) => {\r\n            let filterEntry = data.content.filter((gate) => gate.gateType == 'entry');\r\n            let filterExit = data.content.filter((gate) => gate.gateType == 'exit');\r\n            setEntryGates(filterEntry.map((gate) => ({\r\n              value: String(gate.gateID),\r\n              label: gate.gateName\r\n            })));\r\n            setExitGates(filterExit.map((gate) => ({\r\n              value: String(gate.gateID),\r\n              label: gate.gateName\r\n            })));\r\n            funcEntry(filterEntry)\r\n            .then(async (list) => {\r\n              setCurEntryGates(await list);\r\n            });\r\n            funcExit(filterExit)\r\n            .then(async (list) => {\r\n              setCurExitGates(await list);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            alertService.error(\"There was an error!\");\r\n            console.error(\"Get Unit Gates, There was an error!\", error);\r\n        });\r\n    }\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    if(unitID===null){\r\n      setLoading(false);\r\n      setState({\r\n        projectID,\r\n        unitName: \"\",\r\n        entryGates: [],\r\n        exitGates: [],\r\n        maxPlates: 0,\r\n      });\r\n      setInitEntryGates([]);\r\n      setInitExitGates([]);\r\n    }else{\r\n      setTimeout(()=>setLoading(false), 600);\r\n      getUnitInfo(unitID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n        setInitEntryGates(data.message.entryGates);\r\n        setInitExitGates(data.message.exitGates);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Unit, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    setState((prevState)=>({\r\n        ...prevState,\r\n        entryGates: (Object.keys(curEntryGates)).filter((gate)=>curEntryGates[gate]),\r\n        exitGates: (Object.keys(curExitGates)).filter((gate)=>curExitGates[gate]),\r\n      }));\r\n  }, [curEntryGates, curExitGates]);\r\n\r\n  useEffect(()=>{\r\n    loadGates();\r\n  }, [initEntryGates, initExitGates]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (['isChargeable'].includes(id)) {\r\n      let boolean = e.target.checked;\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: boolean\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(unitID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateUnitInfo(unitID, {\r\n      ...state,\r\n      entryGates: state.entryGates.map((gate)=>(parseInt(gate))),\r\n      exitGates: state.exitGates.map((gate)=>(parseInt(gate))),\r\n    })\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Unit, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createUnit({\r\n      ...state,\r\n      entryGates: state.entryGates.map((gate)=>(parseInt(gate))),\r\n      exitGates: state.exitGates.map((gate)=>(parseInt(gate))),\r\n    })\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Unit, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n      {loading?\r\n      <Row className=\"d-flex justify-content-center\" style={{margin:\"200px\"}}>\r\n      <Spinner size=\"lg\" animation=\"border\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n    </Row>:\r\n        <div>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{unitID===null?\"Add Unit\":\"Edit Unit\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id =\"unitModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Project Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={projectName} readOnly />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Unit Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"unitName\"\r\n                        name=\"unitName\"\r\n                        value={state.unitName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Unit Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Entry Gates\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <CheckPicker\r\n                          sticky\r\n                          searchable={false}\r\n                          data={entryGates}\r\n                          defaultValue={[]}\r\n                          style={{ width: \"100%\" }}\r\n                          value={state.entryGates}\r\n                          onChange={(value)=>{\r\n                            handleChange({\r\n                              target:{\r\n                                id: \"entryGates\",\r\n                                value\r\n                              }\r\n                            });\r\n                          }}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Exit Gates\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <CheckPicker\r\n                          sticky\r\n                          searchable={false}\r\n                          data={exitGates}\r\n                          defaultValue={[]}\r\n                          style={{ width: \"100%\" }}\r\n                          value={state.exitGates}\r\n                          onChange={(value)=>{\r\n                            handleChange({\r\n                              target:{\r\n                                id: \"exitGates\",\r\n                                value\r\n                              }\r\n                            });\r\n                          }}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Maximum Vehicles\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Number of vehicles\"\r\n                        id=\"maxPlates\"\r\n                        name=\"maxPlates\"\r\n                        type=\"number\"\r\n                        value={state.maxPlates}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Maximum Vehicles is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n          setValidated(false);\r\n          toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"unitModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n        </div>\r\n      }\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { UnitsModal };\r\n","import {Modal} from 'react-bootstrap';\r\n\r\nexport function ImageModal (props){\r\n    let {toggleModal, src} = props;\r\n    return(\r\n    <Modal size=\"lg\" centered show={src===null?false:true} onHide={toggleModal}>\r\n        <img src={src}/>\r\n    </Modal>\r\n    );\r\n}\r\n\r\nexport default {ImageModal};","import { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, getWhitelistEntryInfo, updateWhitelistEntryInfo, createWhitelistEntry, getWhitelistTags, getPlates } from '../services/index.js';\r\nimport {DatePicker, SelectPicker} from 'rsuite';\r\n\r\nfunction pad2(n) { return n < 10 ? '0' + n : n }\r\nfunction dateToString(date){\r\n  if(date===null)return \"\";\r\n  else return date.getFullYear().toString() +'-'+ pad2(date.getMonth() + 1) +'-'+ pad2( date.getDate()) +' '+ pad2( date.getHours() ) +':'+ pad2( date.getMinutes() ) +':'+ pad2( date.getSeconds() );\r\n}\r\n\r\nfunction minStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 > str2)return str2;\r\n  else return str1;\r\n}\r\nfunction maxStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 < str2)return str2;\r\n  else return str1;\r\n}\r\n\r\nexport function WhitelistModal(props) {\r\n    let {hide, ID, success, projectName, accessRules, units, toggleModal } = props;\r\n    let cnt = 0;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [whitelistTags, setWhitelistTags] = useState([]);\r\n    const [plates,setPlates] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const reloadTags = ()=>{\r\n    getWhitelistTags()\r\n    .then(async (data) => {\r\n      setWhitelistTags(data.message.whitelistTags);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get WhiteList Tags, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  const reloadPlate = ()=>{\r\n    getPlates([\"plateNumber\"])\r\n    .then(async (data) => {\r\n      setPlates(data.content.map((plate)=>plate.plateNumber));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Plate Number, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    reloadTags();\r\n    reloadPlate();\r\n    if(ID===null){\r\n      setState({\r\n        plateNumber: \"\",\r\n        unitID: \"\",\r\n        accessRuleID: \"\",\r\n        tag: \"\",\r\n        startDateTime: \"\",\r\n        endDateTime: \"\"\r\n      });\r\n    }else{\r\n      setLoading(true);\r\n      getWhitelistEntryInfo(ID)\r\n      .then(async (data) => {\r\n          console.log(data.message);\r\n        setState(data.message);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Whitelist entry info, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(ID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    setLoading(true);\r\n    console.log(state);\r\n    updateWhitelistEntryInfo(state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        setLoading(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      setLoading(false);\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Whitelist Entry, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    setLoading(true);\r\n    createWhitelistEntry(state)\r\n    .then(async (data) => {\r\n      setLoading(false);\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      setLoading(false);\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Whitelist Entry, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n        <Modal.Header\r\n            closeButton>\r\n            <Modal.Title>{ID===null?\"Add Entry\":\"Edit Entry\"}</Modal.Title>\r\n        </Modal.Header>\r\n          <div className={\"loadingModal\"+(loading?\"\":\" invisible\")}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n        <Modal.Body>\r\n        <Form id =\"whitelistModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <div>\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Project Name\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                    className=\"align-items-center d-flex justify-content-center\"\r\n                >\r\n                    <Form.Control type=\"text\" placeholder={projectName} readOnly />\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Plate Number\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >  \r\n                {ID===null?\r\n                    <div>\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Plate Number\"\r\n                        id=\"plateNumber\"\r\n                        name=\"plateNumber\"\r\n                        value={state.plateNumber}\r\n                        onChange={handleChange}\r\n                        isValid={plates.includes(state.plateNumber)}\r\n                        isInvalid={!plates.includes(state.plateNumber)&&validated}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Please enter a registered plate no.\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    :<Form.Control type=\"text\" placeholder={state.plateNumber} readOnly />\r\n                }\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Unit\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <Form.Control\r\n                        custom\r\n                        as=\"select\"\r\n                        id=\"unitID\"\r\n                        name=\"unitID\"\r\n                        value={state.unitID===null?\"\":state.unitID}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>None</option>\r\n                        {units.map((unit)=>(\r\n                            <option value={unit.unitID}>{unit.unitName}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Access Rule\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"accessRuleID\"\r\n                        name=\"accessRuleID\"\r\n                        value={state.accessRuleID===null?\"\":state.accessRuleID}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Access Rule--</option>\r\n                        {accessRules.map((rule)=>(\r\n                            <option value={rule.accessRuleID}>{rule.accessRuleName}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                    Access Rule is a required field.\r\n                    </Form.Control.Feedback>\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4} align=\"right\">\r\n                    Tag\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <Form.Control\r\n                        custom\r\n                        as=\"select\"\r\n                        id=\"tag\"\r\n                        name=\"tag\"\r\n                        value={state.tag===null?\"\":state.tag}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>None</option>\r\n                        {whitelistTags.map((whitelistTag)=>(\r\n                            <option value={whitelistTag}>{whitelistTag}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Start Date Time\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <DatePicker\r\n                className=\"width-100\"\r\n                    value={state.startDateTime}\r\n                    onChange={(val)=>{\r\n                      handleChange({\r\n                        target:{\r\n                          id: \"startDateTime\",\r\n                          value: dateToString(val)\r\n                        }\r\n                      });\r\n                      handleChange({\r\n                        target:{\r\n                          id: \"endDateTime\",\r\n                          value: maxStr(dateToString(val),state.endDateTime)\r\n                        }\r\n                      });\r\n                    }}\r\n                      format=\"YYYY-MM-DD HH:mm:ss\"\r\n                      ranges={[\r\n                        {\r\n                          label: 'Now',\r\n                          value: new Date()\r\n                        }\r\n                      ]}\r\n                      placeholder=\"Start DateTime\"\r\n                    />\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    End Date Time\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                <DatePicker\r\n                className=\"width-100\"\r\n                    value={state.endDateTime}\r\n                    onChange={(val)=>{\r\n                      handleChange({\r\n                        target:{\r\n                          id: \"endDateTime\",\r\n                          value: dateToString(val)\r\n                        }\r\n                      });\r\n                      handleChange({\r\n                        target:{\r\n                          id: \"startDateTime\",\r\n                          value: minStr(dateToString(val),state.startDateTime)\r\n                        }\r\n                      });\r\n                    }}\r\n                  format=\"YYYY-MM-DD HH:mm:ss\"\r\n                  ranges={[\r\n                    {\r\n                      label: 'Now',\r\n                      value: new Date()\r\n                    }\r\n                  ]}\r\n                  placeholder=\"End DateTime\"\r\n                />\r\n                </Col>\r\n                </Form.Group>\r\n            </div>\r\n        </Form>\r\n        </Modal.Body>\r\n    <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n        Cancel\r\n        </Button>\r\n        <Button form =\"whitelistModal\" variant=\"primary\" type=\"submit\">\r\n        Confirm\r\n        </Button>\r\n    </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { WhitelistModal };\r\n","import React from 'react'\r\nimport { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, getAccessRule,  getWhitelistEntry } from '../services/index.js';\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\nconst fileExtension = \".xlsx\";\r\nconst exportToCSV = (apiData, fileName) => {\r\n    console.log(apiData);\r\n    const headers = [\r\n        \"Record ID\",\r\n        \"Plate Number\",\r\n        \"Project\",\r\n        \"Access Rule\",\r\n        \"Tag\",\r\n        \"Start DateTime\",\r\n        \"End DateTime\"\r\n    ];\r\n    const ws = XLSX.utils.aoa_to_sheet([headers]);\r\n    XLSX.utils.sheet_add_json(ws, apiData, {skipHeader: true,origin:1});\r\n    const wscols = [\r\n        {wch:10},  // recordID\r\n        {wch:15},  //plateNumber\r\n        {wch:15}, //project\r\n        {wch:15}, //accessRule\r\n        {wch:10}, //tag\r\n        {wch:20}, //startDateTime\r\n        {wch:20}  //endDateTime\r\n    ];\r\n    ws['!cols'] = wscols;\r\n    let wb = XLSX.utils.book_new()\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Whitelist\");\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n};\r\n\r\nexport function ExportWhitelistModal(props) {\r\n    let {hide, projects, toggleModal, projectNames } = props;\r\n    const [project, setProject] = useState(null);\r\n    const [dummy, setDummy] = useState(false);\r\n    const [accessRules, setAccessRules] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const func = async (val) =>{\r\n        let temp = {};\r\n        val.forEach(async (element)=>{\r\n            temp[element[\"accessRuleID\"]] = {\r\n                accessRuleName: element[\"accessRuleName\"],\r\n                projectID: element[\"projectID\"]\r\n            };\r\n        });\r\n        return await temp;\r\n    };\r\n\r\n    const reloadAccessRules = () =>{\r\n      getAccessRule(project,[\"accessRuleID\",\"accessRuleName\",\"projectID\"])\r\n      .then(async (data) => {\r\n        func(data.content).then(async(list)=>{\r\n            setAccessRules(await list);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Access Rule, there was an error!\", error);\r\n      });\r\n    }\r\n\r\n    useEffect(()=>{\r\n        reloadAccessRules();\r\n    },[project]);\r\n\r\n    const fetchData = () =>{\r\n        setLoading(true);\r\n        getWhitelistEntry([\"recordID\",\"plateNumber\", \"accessRuleID\", \"tag\", \"startDateTime\",\"endDateTime\"])\r\n        .then(async (data) => {\r\n            exportToCSV(\r\n                data.content.filter((entry)=>\r\n                    entry.accessRuleID !== null &&\r\n                    accessRules[entry.accessRuleID] !== undefined\r\n                ).map((entry)=>({\r\n                    recordID: entry.recordID,\r\n                    plateNumber: entry.plateNumber,\r\n                    project: projectNames[accessRules[entry.accessRuleID].projectID],\r\n                    accessRule: accessRules[entry.accessRuleID].accessRuleName,\r\n                    tag: entry.tag,\r\n                    startDateTime: entry.startDateTime,\r\n                    endDateTime: entry.endDateTime\r\n                }))\r\n            ,\"Whitelist\");\r\n            setLoading(false);\r\n            toggleModal();\r\n        })\r\n        .catch((error) => {\r\n        console.error(\"Get entry, there was an error!\", error);\r\n        });\r\n      }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    toggleModal();}}>\r\n        <Modal.Header\r\n            closeButton>\r\n            <Modal.Title>Export Whitelist Entries</Modal.Title>\r\n        </Modal.Header>\r\n          <div className={\"loadingModal\"+(loading?\"\":\" invisible\")}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n        <Modal.Body>\r\n        <Form>\r\n            <div>\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Project Name\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                    className=\"align-items-center d-flex justify-content-center\"\r\n                >\r\n                    <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"project\"\r\n                        name=\"project\"\r\n                        value={project}\r\n                        onChange={(e)=>{\r\n                            setProject(e.target.value);\r\n                        }}\r\n                        >\r\n                        <option value={null}>All Projects</option>\r\n                        {projects.map((row)=>(\r\n                            <option value={row.projectID}>{row.projectName}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Col>\r\n                </Form.Group>\r\n            </div>\r\n        </Form>\r\n        </Modal.Body>\r\n    <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={()=>{\r\n    toggleModal();}}>\r\n        Cancel\r\n        </Button>\r\n        <Button \r\n        onClick={()=>{\r\n            fetchData();\r\n        }} \r\n        variant=\"primary\">\r\n        Download\r\n        </Button>\r\n    </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { ExportWhitelistModal };\r\n","import React from 'react'\r\nimport { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService,  getMovementLogs,getProjects } from '../services/index.js';\r\n\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nimport { InputGroup, DatePicker } from 'rsuite';\r\n\r\nfunction pad2(n) { return n < 10 ? '0' + n : n }\r\nfunction dateToString(date){\r\n  if(date===null)return \"\";\r\n  else return date.getFullYear().toString() +'-'+ pad2(date.getMonth() + 1) +'-'+ pad2( date.getDate()) +' '+ pad2( date.getHours() ) +':'+ pad2( date.getMinutes() ) +':'+ pad2( date.getSeconds() );\r\n}\r\n\r\nfunction minStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 > str2)return str2;\r\n  else return str1;\r\n}\r\nfunction maxStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 < str2)return str2;\r\n  else return str1;\r\n}\r\n\r\nconst fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\nconst fileExtension = \".xlsx\";\r\nconst exportToCSV = (apiData, fileName) => {\r\n    console.log(apiData);\r\n    const headers = [\r\n        \"Project\",\r\n        \"Vehicle Type\",\r\n        \"Open\",\r\n        \"Gate Name\",\r\n        \"Gate Type\",\r\n        \"Detection Time\",\r\n        \"Confirmed Time\",\r\n        \"Original Plate\",\r\n        \"Actual Plate\",\r\n        \"Image\",\r\n        \"Plate Image\"\r\n    ];\r\n    const ws = XLSX.utils.aoa_to_sheet([headers]);\r\n    XLSX.utils.sheet_add_json(ws, apiData, {skipHeader: true,origin:1});\r\n    const wscols = [\r\n        {wch:15},  // Project\r\n        {wch:15},  //Vehicle Type\r\n        {wch:10}, //Open\r\n        {wch:15}, //Gate Name\r\n        {wch:10}, //Gate Type\r\n        {wch:20}, //Detection Time\r\n        {wch:20}, //Confirmed Time\r\n        {wch:15}, //Original Plate\r\n        {wch:15}, //Actual Plate\r\n        {wch:15}, //Image\r\n        {wch:15} //Plate Image\r\n    ];\r\n    ws['!cols'] = wscols;\r\n    let wb = XLSX.utils.book_new()\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Records\");\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n};\r\n\r\nexport function ExportRecordModal(props) {\r\n    let {hide, toggleModal } = props;\r\n    const [project, setProject] = useState(null);\r\n    const [dummy, setDummy] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [timeState, setTimeState] = useState({\r\n      startTime: \"\",\r\n      endTime: \"\"\r\n    });\r\n    const [projects,setProjects] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        getProjects([\"projectName\"])\r\n        .then(async (data) => {\r\n            setProjects(data.content);\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"There was an error!\", error);\r\n        });\r\n    });\r\n    \r\n    const fields = [\r\n        \"projectName\",\r\n        \"vehicleType\",\r\n        \"isOpened\",\r\n        \"gateName\",\r\n        \"gateType\",\r\n        \"detectionTime\",\r\n        \"confirmedTime\",\r\n        \"originalPlate\",\r\n        \"confirmedPlate\",\r\n        \"image1\",\r\n        \"plateImage\"\r\n    ];\r\n\r\n    const func = async (val) =>{\r\n        let temp = {};\r\n        val.forEach(async (element)=>{\r\n            temp[element[\"accessRuleID\"]] = {\r\n                accessRuleName: element[\"accessRuleName\"],\r\n                projectID: element[\"projectID\"]\r\n            };\r\n        });\r\n        return await temp;\r\n    };\r\n\r\n    const fetchData = () =>{\r\n        setLoading(true);\r\n        let filters = (timeState.startTime===\"\"&&timeState.endTime===\"\")?\r\n        {}:{\r\n            detectionTime : timeState.startTime+'|'+timeState.endTime\r\n        };\r\n        if (project!==null)filters[\"projectName\"] = project;\r\n        getMovementLogs(fields, filters)\r\n        .then(async (data) => {\r\n            setLoading(false);\r\n            exportToCSV(data.content,\"Records\");\r\n            toggleModal();\r\n        })\r\n        .catch((error) => {\r\n            alertService.error(\"There was an error!\");\r\n            console.error(\"There was an error!\", error);\r\n        });\r\n    }\r\n      \r\n  const handleTimeChange = (value, id) => {\r\n    setTimeState((prevState)=>({\r\n      ...prevState,\r\n      [id]:value\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Modal show={hide} size=\"lg\" onHide={()=>{\r\n    toggleModal();}}>\r\n        <Modal.Header\r\n            closeButton>\r\n            <Modal.Title>Export Whitelist Entries</Modal.Title>\r\n        </Modal.Header>\r\n          <div className={\"loadingModal\"+(loading?\"\":\" invisible\")}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n        <Modal.Body>\r\n        <Form>\r\n            <div>\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={3}  align=\"right\">\r\n                    Project Name\r\n                </Form.Label>\r\n                <Col\r\n                    sm={8}\r\n                    className=\"align-items-center d-flex justify-content-center\"\r\n                >\r\n                    <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"project\"\r\n                        name=\"project\"\r\n                        value={project}\r\n                        onChange={(e)=>{\r\n                            setProject(e.target.value);\r\n                        }}\r\n                        >\r\n                        <option value={null}>All Projects</option>\r\n                        {projects.map((row)=>(\r\n                            <option value={row.projectName}>{row.projectName}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={3}  align=\"right\">\r\n                    Detection Time\r\n                </Form.Label>\r\n                <Col sm={8}\r\n                    className=\"align-items-center d-flex justify-content-center\">\r\n                    <InputGroup style={{\"background-color\":\"white\"}}>\r\n                    <InputGroup.Addon>From</InputGroup.Addon>\r\n                    <DatePicker \r\n                    format=\"YYYY-MM-DD HH:mm:ss\" \r\n                    block appearance=\"subtle\"\r\n                    value={timeState.startTime}\r\n                    onChange={(val)=>{\r\n                        handleTimeChange(dateToString(val), \"startTime\");\r\n                        handleTimeChange(maxStr(dateToString(val),timeState.endTime), \"endTime\");\r\n                    }}\r\n                    ranges={[\r\n                        {\r\n                        label: 'Now',\r\n                        value: new Date()\r\n                        }\r\n                    ]}\r\n                    placeholder=\"YYYY-MM-DD HH:MM:SS\"/>\r\n                    <InputGroup.Addon>To</InputGroup.Addon>\r\n                    <DatePicker \r\n                    format=\"YYYY-MM-DD HH:mm:ss\" \r\n                    block appearance=\"subtle\"\r\n                    value={timeState.endTime}\r\n                    onChange={(val)=>{\r\n                        handleTimeChange(dateToString(val), \"endTime\");\r\n                        handleTimeChange(minStr(dateToString(val),timeState.startTime), \"startTime\");\r\n                    }} \r\n                    ranges={[\r\n                        {\r\n                        label: 'Now',\r\n                        value: new Date()\r\n                        }\r\n                    ]}\r\n                    placeholder=\"YYYY-MM-DD HH:MM:SS\"/>\r\n                    </InputGroup>\r\n                </Col>\r\n                </Form.Group>\r\n            </div>\r\n        </Form>\r\n        </Modal.Body>\r\n    <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={()=>{\r\n    toggleModal();}}>\r\n        Cancel\r\n        </Button>\r\n        <Button \r\n        onClick={()=>{\r\n            fetchData();\r\n        }} \r\n        variant=\"primary\">\r\n        Download\r\n        </Button>\r\n    </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { ExportRecordModal };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {Jumbotron, Row, Col, Card } from 'react-bootstrap';\r\nimport {delDevice, getAllDevice, getObjectTypes, alertService, getGateInfo, getNewDevices} from '../services/index.js';\r\nimport {IconButton, Typography  , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, TableHead, TableRow, Paper, CardActions } from '@material-ui/core';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { TablePaginationActions , DeviceModal, ConfirmModal} from \"../components/index.js\";\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\n\r\nexport function Home() {\r\n  const [rows, setRows] = useState([]);\r\n  const [dummy, setDummy] = useState(null);\r\n  const [devices, setDevices] = useState([]);\r\n  const [newDevices, setNewDevices] = useState([]);\r\n  const [deviceTypes, setDeviceTypes] = useState([]);\r\n  const [deviceTypeNames, setDeviceTypeNames] = useState({});\r\n  const [curID, setCurID] = useState(null);\r\n  const [toggle, setToggle] = useState({\r\n    edit: false,\r\n    delete: false\r\n  });\r\n  let history = useHistory();\r\n\r\n  const reload = () =>{\r\n    getAllDevice([\"deviceID\", \"deviceName\", \"deviceType\",\"deviceStatus\", \"gateID\",\"deviceIP\"])\r\n    .then(async (data) => {\r\n      setDevices(data.content.filter((device)=>device.deviceStatus!==\"online\"&&device.gateID !== null));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get All Device, there was an error!\", error);\r\n    });\r\n    getNewDevices()\r\n    .then(async (data) => {\r\n      setNewDevices(data.message);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get All Device, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n    getObjectTypes(\"device\")\r\n    .then(async (data) => {\r\n      setDeviceTypeNames(data.message);\r\n      setDeviceTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Device Types!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  const direct = (gateID) =>{\r\n    getGateInfo(gateID)\r\n    .then(async (data) => {\r\n      let projectID = data.message.projectID;\r\n      history.push('/project/'+String(projectID)+'/gate/'+String(gateID));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate Info, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (deviceID) => {\r\n    delDevice(deviceID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Device Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  return (\r\n  <div>\r\n    <Helmet>\r\n      <meta charSet=\"utf-8\" />\r\n      <title>Home</title>\r\n    </Helmet>\r\n    <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this device?\"\r\n      />\r\n    <DeviceModal\r\n      deviceTypes = {deviceTypes}\r\n      hide={toggle.edit}\r\n      gateID = {null}\r\n      deviceID = {curID}\r\n      success={() => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n      }}\r\n      toggleModal={() => {\r\n        toggleModal(\"edit\");\r\n      }}\r\n    />\r\n    <Jumbotron className=\"dashboard\">\r\n      <Row>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv success\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Sample\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#66bb6a\"}}>\r\n                ~\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv warning\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Sample\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#ffa726\"}} >\r\n              ~\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv info\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              New Devices\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#26c6da\"}}>\r\n              {newDevices.length}\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv danger\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Disconnected Devices\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#ef5350\"}}>\r\n                {devices.length}\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Jumbotron>\r\n    <div className=\"content\">\r\n    <Row>\r\n    <Col sm={4}>\r\n          <Card style={{height:\"465px\"}}>\r\n          <Typography className=\"cardTitle\" variant=\"h6\" component=\"h2\">\r\n            New Devices\r\n          </Typography>\r\n          <TableContainer component={Paper} className=\"scrollbar-grey\" style={{\"box-shadow\":\"none\"}}>\r\n            <Table stickyHeader aria-label=\"simple table\">\r\n              <TableHead >\r\n                <TableRow>\r\n                  <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                  <TableCell align=\"left\"><b>IP</b></TableCell>\r\n                  <TableCell align=\"left\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {newDevices.length > 0?\r\n                newDevices.map((row, index) => (\r\n                  <TableRow key={row.deviceID}>\r\n                  <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                  <TableCell align=\"left\">{(row.deviceIP==\"\"||row.deviceIP==null)?\"-\":row.deviceIP}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                      <IconButton style={{padding:0}}\r\n                      onClick={() => {\r\n                          setCurID(row.deviceID);\r\n                          toggleModal(\"edit\");\r\n                      }}>\r\n                        <BuildIcon\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n                :\r\n                <TableRow>\r\n                  <TableCell align=\"center\" colSpan={3}>\r\n                    No New Devices\r\n                  </TableCell>\r\n                </TableRow>\r\n                }\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={8}>\r\n          <Card style={{height:\"465px\"}} >\r\n          <Typography className=\"cardTitle\" variant=\"h6\" component=\"h2\">\r\n             Disconnected Devices\r\n          </Typography>\r\n          <TableContainer component={Paper} className=\"scrollbar-grey\" style={{\"box-shadow\":\"none\"}}>\r\n            <Table stickyHeader aria-label=\"simple table\">\r\n              <TableHead >\r\n                <TableRow>\r\n                  <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                  <TableCell align=\"left\"><b>Name</b></TableCell>\r\n                  <TableCell align=\"left\"><b>Type</b></TableCell>\r\n                  <TableCell align=\"left\"><b>IP</b></TableCell>\r\n                  <TableCell align=\"left\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {devices.length > 0?\r\n                devices.map((row, index) => (\r\n                  <TableRow key={row.deviceID}>\r\n                  <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                    <TableCell align=\"left\">{row.deviceName}</TableCell>\r\n                    <TableCell align=\"left\">{row.deviceType===null?null:(deviceTypeNames[row.deviceType]===undefined ? row.deviceType : deviceTypeNames[row.deviceType].name)}</TableCell>\r\n                  <TableCell align=\"left\">{(row.deviceIP==\"\"||row.deviceIP==null)?\"-\":row.deviceIP}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <IconButton style={{padding:5}}\r\n                      onClick={() => {\r\n                          direct(row.gateID);\r\n                      }}>\r\n                        <OpenInNewIcon\r\n                        />\r\n                      </IconButton>\r\n                      <IconButton style={{padding:5}}\r\n                      onClick={() => {\r\n                          setCurID(row.deviceID);\r\n                          toggleModal(\"delete\");\r\n                      }}>\r\n                        <DeleteOutlineIcon\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n                :\r\n                <TableRow>\r\n                  <TableCell align=\"center\" colSpan={5}>\r\n                    No Disconnected Devices\r\n                  </TableCell>\r\n                </TableRow>}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default { Home };\r\n","import React, { useState, useContext } from \"react\";\r\nimport { store } from \"../store.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {Helmet} from \"react-helmet\";\r\nexport function Login() {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  const { dispatch } = storeContext;\r\n  let history = useHistory();\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n  const reqLogin = (e) => {\r\n    e.preventDefault();\r\n    let { username, password } = state;\r\n    /*\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    };\r\n    \r\n    fetch(server_URL + \"/login\", requestOptions)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n  \r\n      // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      }\r\n  \r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      return(\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/home\"\r\n          }}\r\n        />\r\n      );\r\n    })\r\n    .catch((error) => {\r\n      this.setState({ errorMessage: error.toString() });\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    if (username === \"huajun\" && password === \"huajun\") {\r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      dispatch({\r\n        type: \"setUser\",\r\n        value: username\r\n      });\r\n      history.push(\"/home\");\r\n    } else if (username.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Username cannot be blank\";\r\n    } else if (password.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Password cannot be blank\";\r\n    } else {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Invalid Username or Password\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"maincontainer h-100\">\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Login</title>\r\n      </Helmet>\r\n      <div className=\"container-fluid bg-light h-100\">\r\n        <div className=\"login d-flex align-items-center py-5\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-10 col-sm-6 col-md-5 col-xl-4 mx-auto \">\r\n                <h3 className=\"display-4\">Login</h3>\r\n                <p className=\"text-muted mb-4\">\r\n                  Enter your credentials to login.\r\n                </p>\r\n                <form>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"username\"\r\n                      type=\"username\"\r\n                      placeholder=\"Username\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4\"\r\n                      onChange={handleChange}\r\n                      value={state.username}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\r\n                      onChange={handleChange}\r\n                      value={state.password}\r\n                    />\r\n                  </div>\r\n                  <p id=\"login-error\" className=\"text-danger\"></p>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block text-uppercase mb-2 rounded-pill shadow-sm\"\r\n                    onClick={reqLogin}\r\n                  >\r\n                    Sign in\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Login };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Spinner } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, SignpostSplitFill } from \"react-bootstrap-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, addProject, delProject, alertService } from '../services/index.js';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nexport function Projects({ match }) {\r\n  let history = useHistory();\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [loading,setLoading] = useState(false);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false\r\n  });\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n    setCurState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n  }\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    setLoading(true);\r\n    getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n      setPage(0);\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (projectID) => {\r\n    setCurID(projectID);\r\n    toggleModal(\"delete\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectName, location, projectType } = curState;\r\n    let curRows = initialRows;\r\n    console.log(curRows);\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[\"projectName\"].toLowerCase().indexOf(projectName.toLowerCase()) >= 0 &&\r\n          row[\"location\"].toLowerCase().indexOf(location.toLowerCase()) >= 0 &&\r\n          row[\"projectType\"].toLowerCase().indexOf(projectType.toLowerCase()) >= 0\r\n      )\r\n    );\r\n    setPage(0);\r\n  };\r\n\r\n  const insert = (e) => {\r\n    addProject()\r\n      .then(async (data) => {\r\n        let ID = data.message.projectID;\r\n        history.push(\"/project/\" + ID);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  const edit = (projectID) => {\r\n    history.push(\"/project/\" + projectID);\r\n  };\r\n\r\n  const gate = (projectID) =>{\r\n    history.push(\"/project/\" + projectID + \"/gate\");\r\n  };\r\n\r\n  const del = async (projectID) => {\r\n    delProject(projectID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Project Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows = (rows.length > 0&& !loading? rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage) : rowsPerPage - 1);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Projects</title>\r\n      </Helmet>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this project?\"\r\n      />\r\n      <ConfirmModal\r\n        hide={toggle.add}\r\n        success={() => {\r\n          insert();\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"add\");\r\n        }}\r\n        title=\"Confirm Addition\"\r\n        body=\"Add a new project?\"\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Projects</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Row className=\"d-flex\" style={{padding:\"10px 0px\"}}>\r\n          <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-info align-items-center d-flex\"\r\n                type=\"button\"\r\n                onClick={reload}\r\n              >\r\n              <RefreshIcon/>\r\n                &nbsp; Refresh \r\n              </Button>\r\n          </Col>\r\n          <div style={{\"flex-grow\":\"1\"}}></div>\r\n          <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n          </Col>\r\n        </Row>\r\n        <Form onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row className=\"d-flex\">\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectName\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectName}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"location\"\r\n                placeholder=\"Location\"\r\n                onChange={handleChange}\r\n                value={state.location}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectType\"\r\n                placeholder=\"Type\"\r\n                onChange={handleChange}\r\n                value={state.projectType}\r\n              />\r\n            </Col>\r\n            \r\n            <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell><b>Project</b></TableCell>\r\n                <TableCell align=\"left\"><b>Location</b></TableCell>\r\n                <TableCell align=\"left\"><b>Type</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading?\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={4}>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n                </TableCell>\r\n              </TableRow>:\r\n              rows.length > 0?\r\n              (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.projectName}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.location}</TableCell>\r\n                  <TableCell align=\"left\">{row.projectType}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <IconButton onClick={() => gate(row.projectID)}>\r\n                      <SignpostSplitFill\r\n                        data-value={row.projectID}\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => edit(row.projectID)}>\r\n                      <PencilSquare\r\n                        data-value={row.projectID}\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => activateModal(row.projectID)}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={4}>\r\n                  No Projects Found\r\n                </TableCell>\r\n              </TableRow>\r\n            }\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Projects };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport { CheckPicker } from 'rsuite';\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { alertService, getProjectInfo, updateProjectInfo , getObjectTypes, getCheckConditions} from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function ProjectForm() {\r\n  let { projectID }= useParams();\r\n  const [validated, setValidated] = useState(false);\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    projectType: \"\",\r\n    location: \"\",\r\n    contactNumber: \"\",\r\n    maCompany: \"\",\r\n    equipManu: \"\",\r\n    checkConditions: [],\r\n    levDistance: \"\",\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectTypes, setProjectTypes] = useState([]);\r\n  const [checkConditions, setCheckConditions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n      .then(async (data) => {\r\n        alertService.info(String(data.message.levDistance));\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Project Info!\", error);\r\n      });\r\n    getObjectTypes(\"project\")\r\n      .then(async (data) => {\r\n        setProjectTypes(Object.entries(data.message).map((type)=>({\r\n          id: type[0],\r\n          name: type[1].name\r\n        })));\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Project Types!\", error);\r\n      });\r\n    getCheckConditions()\r\n      .then(async (data) => {\r\n        setCheckConditions(Object.entries(data.message).map((cond)=>({\r\n          value: cond[0],\r\n          label: cond[1].desc\r\n        })));\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Check Conditions!\", error);\r\n      });\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()) update();\r\n  };\r\n\r\n  const update = () => {\r\n    updateProjectInfo(projectID, state)\r\n      .then(async (data) => {\r\n        alertService.success('Update Successful!');\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Project Info</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Project ID\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control type=\"text\" placeholder={projectID} readOnly />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Project Name\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              placeholder=\"Name\"\r\n              id=\"projectName\"\r\n              name=\"projectName\"\r\n              value={state.projectName}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Name is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Project Type\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              custom\r\n              required\r\n              as=\"select\"\r\n              id=\"projectType\"\r\n              name=\"projectType\"\r\n              value={state.projectType===null? '':state.projectType}\r\n              onChange={handleChange}\r\n            >\r\n              <option value={''}>--Select Type--</option>\r\n              {\r\n                projectTypes.map((type)=>(\r\n                  <option value={type.id}>{type.name}</option>\r\n                ))\r\n              }\r\n            </Form.Control>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Type is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Location\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"location\"\r\n              name=\"location\"\r\n              value={state.location}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Location is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Equipment Manufacturer\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"equipManu\"\r\n              name=\"equipManu\"\r\n              value={state.equipManu}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Equipment Manufacturer is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            MA Company\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"maCompany\"\r\n              name=\"maCompany\"\r\n              value={state.maCompany}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              MA Company is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Contact No.\r\n          </Form.Label>\r\n          <Form.Label\r\n            column\r\n            sm={4}\r\n          >\r\n            <PhoneInput\r\n              inputProps={{\r\n                required: true\r\n              }}\r\n              placeholder=\"+XX-XXXX-XXXX\"\r\n              id=\"contactNumber\"\r\n              name=\"contactNumber\"\r\n              country={\"sg\"}\r\n              value={String(state.contactNumber)}\r\n              onChange={(e)=>{\r\n                setState((prevState) => ({\r\n                  ...prevState,\r\n                  [\"contactNumber\"]: parseInt(e)\r\n                }));\r\n              }}\r\n              isValid={(value, country) => {\r\n                if (value.length === 0) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              }}\r\n            />\r\n          </Form.Label>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3}  align=\"right\">\r\n              Plate Check Conditions\r\n          </Form.Label>\r\n          <Col\r\n              sm={4}\r\n          >\r\n            <CheckPicker\r\n              sticky\r\n              searchable={false}\r\n              data={checkConditions}\r\n              defaultValue={[]}\r\n              style={{ width: \"100%\" }}\r\n              value={state.checkConditions}\r\n              onChange={(value)=>{\r\n                handleChange({\r\n                  target:{\r\n                    id: \"checkConditions\",\r\n                    value\r\n                  }\r\n                });\r\n              }}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n        <Form.Label column sm={3}  align=\"right\">\r\n            Maximum Levenshtein Distance\r\n        </Form.Label>\r\n        <Col\r\n            sm={4}\r\n        >\r\n            <Form.Control\r\n            required\r\n            id=\"levDistance\"\r\n            name=\"levDistance\"\r\n            type=\"number\"\r\n            value={state.levDistance}\r\n            onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n            Maximum Levenshtein Distance is a required field.\r\n            </Form.Control.Feedback>\r\n        </Col>\r\n        </Form.Group>\r\n\r\n        \r\n        <Form.Group as={Row}>\r\n          <Col sm={8}\r\n           className=\"d-flex justify-content-end\">\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ProjectForm };\r\n","import { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, InputGroup, Breadcrumb } from \"react-bootstrap\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport { alertService, getBusinessInfo, updateBusinessInfo, getProjectInfo } from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function BusinessDetails(props) {\r\n  let {projectID} = useParams();\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    barrierDelay: 5,\r\n    networkWarningDuration: 5,\r\n    instantImgUpload: false,\r\n    vehicleColorDetect: false,\r\n    localImgStore: false\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    /*   \r\n    getBusinessInfo(projectID)\r\n    .then(async (data) => {\r\n      setState(data.message)\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    let res = {\r\n      barrierDelay: 5,\r\n      networkWarningDuration: 5,\r\n      instantImgUpload: false,\r\n      vehicleColorDetect: false,\r\n      localImgStore: false\r\n    };\r\n    setState(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    update();\r\n  };\r\n\r\n  const update = () => {\r\n    /* Pending API for project details update*/\r\n  };\r\n\r\n  function myFormat(num) {\r\n    return num + \" mins\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Business Details</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Breadcrumb>\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      </Breadcrumb>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Barrier Opening Delay\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"barrierDelay\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.barrierDelay}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Duration before issuing network down warning\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"networkWarningDuration\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.networkWarningDuration}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Instant Image Upload to Server\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.instantImgUpload}\r\n              type=\"switch\"\r\n              id=\"instantImgUpload\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Local Storage of images after uploading\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.localImgStore}\r\n              type=\"switch\"\r\n              id=\"localImgStore\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Vehicle Colour Detection\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.vehicleColorDetect}\r\n              type=\"switch\"\r\n              id=\"vehicleColorDetect\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col sm={8}\r\n           className=\"d-flex justify-content-end\">\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { BusinessDetails };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Spinner } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, DeviceModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getDevice, alertService, delDevice, getObjectTypes, getProjectInfo, getGateInfo} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport SignalCellularConnectedNoInternet0BarIcon from '@material-ui/icons/SignalCellularConnectedNoInternet0Bar';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nexport function Devices (){\r\n    let { projectID, gateID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [loading,setLoading] = useState(false);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [gateName, setGateName] = useState(\"\");\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(null);\r\n  const [dummy, setDummy] = useState(false);\r\n  const [deviceTypes, setDeviceTypes] = useState([]);\r\n  const [deviceTypeNames, setDeviceTypeNames] = useState([]);\r\n  const reload = () =>{\r\n    setLoading(true);\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    getGateInfo(gateID)\r\n    .then(async (data) => {\r\n      setGateName(data.message.gateName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate Info, there was an error!\", error);\r\n    });\r\n    getDevice(gateID, [\"deviceID\", \"deviceName\", \"deviceType\", \"deviceStatus\",\"deviceIP\"])\r\n      .then(async (data) => {\r\n        setLoading(false);\r\n        console.log(data.content);\r\n        setRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Device, there was an error!\", error);\r\n      });\r\n      getObjectTypes(\"device\")\r\n    .then(async (data) => {\r\n      setDeviceTypeNames(data.message);\r\n      setDeviceTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Device Types!\", error);\r\n    });\r\n    setPage(0);\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (deviceID) => {\r\n    delDevice(deviceID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Device Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Delete Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows = (rows.length > 0 && !loading? rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage) : rowsPerPage - 1);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this device?\"\r\n      />\r\n      <DeviceModal\r\n        deviceTypes = {deviceTypes}\r\n        hide={toggle.edit}\r\n        deviceID = {curID}\r\n        gateID = {gateID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item href={\"/project/\"+projectID+\"/gate\"}>Gates</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Devices</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"d-flex align-items-center\">\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName} / {gateName}</h5>\r\n      <div style={{\"flex-grow\":\"1\"}}></div>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n          <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-info align-items-center d-flex\"\r\n                type=\"button\"\r\n                onClick={reload}\r\n              >\r\n              <RefreshIcon/>\r\n                &nbsp; Refresh \r\n              </Button>\r\n          </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"center\"><b>IP</b></TableCell>\r\n                <TableCell align=\"center\"><b>Status</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading?\r\n              <TableRow>\r\n              <TableCell align=\"center\" colSpan={6}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n              </TableCell>\r\n            </TableRow>:\r\n            rows.length > 0?\r\n              (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceName}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                  {row.deviceType===null?null: (deviceTypeNames[row.deviceType]===undefined? null: deviceTypeNames[row.deviceType].name)}\r\n                   </TableCell>\r\n                  <TableCell align=\"center\">{(row.deviceIP==\"\"||row.deviceIP==null)?\"-\":row.deviceIP}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceStatus==='online'?\r\n                  <Tooltip title=\"Online\">\r\n                  <SignalCellularAltIcon style={{ color: \"#4caf50\" }}/>\r\n                  </Tooltip>\r\n                  :\r\n                  <Tooltip title=\"Offline\">\r\n                  <SignalCellularConnectedNoInternet0BarIcon style={{ color: \"#f44336\" }}/>\r\n                  </Tooltip>\r\n                  }</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={6}>\r\n                  No Devices Found\r\n                </TableCell>\r\n              </TableRow>}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={6}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Devices };","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Spinner } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu, Unlock } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, GateModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getGate, alertService, delGate, getObjectTypes, openGate, getProjectInfo, getProjects} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nexport function Gates (){\r\n    let { projectID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [loading,setLoading] = useState(false);\r\n  const [gateTypes, setGateTypes] = useState([]);\r\n  const [gateTypeNames, setGateTypeNames] = useState([]);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    setLoading(true);\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    getGate(projectID, [\"gateID\", \"gateName\", \"gateType\"])\r\n    .then(async (data) => {\r\n      setLoading(false);\r\n      console.log(data.content);\r\n      setRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate, there was an error!\", error);\r\n    });\r\n    getObjectTypes(\"gate\")\r\n    .then(async (data) => {\r\n      setGateTypeNames(data.message);\r\n      setGateTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Gate Types!\", error);\r\n    });\r\n    setPage(0);\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const openGateFunc = (gateID, gateName) =>{\r\n    openGate(gateID)\r\n    .then(async (data) => {\r\n      alertService.success(\"Opened Gate \"+gateName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Open Gate!\", error);\r\n    });\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const devices = (gateID) => {\r\n    history.push(pathname +\"/\"+ String(gateID));\r\n  };\r\n\r\n  const del = async (gateID) => {\r\n    delGate(gateID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Gate Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Delete Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows = (rows.length > 0 && !loading? rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage) : rowsPerPage - 1);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this gate?\"\r\n      />\r\n      <GateModal\r\n        gateTypes = {gateTypes}\r\n        hide={toggle.edit}\r\n        gateID = {curID}\r\n        newState = {modal}\r\n        projectID = {projectID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Gates</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"d-flex align-items-center\">\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      <div style={{\"flex-grow\":\"1\"}}></div>\r\n        <Form inline onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n          <Col sm=\"auto\">\r\n            <Button\r\n              className=\"btn btn-info align-items-center d-flex\"\r\n              type=\"button\"\r\n              onClick={reload}\r\n            >\r\n            <RefreshIcon/>\r\n              &nbsp; Refresh \r\n            </Button>\r\n          </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    setModal(true);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading?\r\n              <TableRow>\r\n              <TableCell align=\"center\" colSpan={4}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n              </TableCell>\r\n            </TableRow>:\r\n              rows.length > 0 ?              \r\n              (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.gateID}</TableCell>\r\n                  <TableCell align=\"center\">{row.gateName}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                  {row.gateType===null?null: (gateTypeNames[row.gateType]===undefined? null: gateTypeNames[row.gateType].name)}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Devices\">\r\n                    <IconButton \r\n                    style={{padding:\"5px 10px\"}}\r\n                    onClick={() => {\r\n                        devices(row.gateID);\r\n                    }}>\r\n                      <Cpu\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton\r\n                    style={{padding:\"5px 10px\"}}\r\n                     onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        setModal(false);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Open Gate\">\r\n                    <IconButton\r\n                    style={{padding:\"5px 10px\"}}\r\n                     onClick={() => {\r\n                        openGateFunc(row.gateID, row.gateName);\r\n                    }}>\r\n                      <Unlock\r\n                        size={21}\r\n                        color=\"green\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton\r\n                    style={{padding:\"5px 10px\"}}\r\n                     onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={6}>\r\n                  No Gates Found\r\n                </TableCell>\r\n              </TableRow>}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Gates };","import React, { useState, useEffect } from \"react\";\r\nimport { Breadcrumb } from \"react-bootstrap\";\r\nimport {Input , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { TablePaginationActions } from \"../../components/index.js\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getProjectInfo, alertService} from '../../services/index.js';\r\n\r\nimport { PencilSquare } from \"react-bootstrap-icons\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport function LedConfig(props) {\r\n  let {projectID} = useParams();\r\n  const [rows, setRows] = useState([]);\r\n  const [curID, setCurID] = useState(null);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    trigger: \"\",\r\n    voiceMsg: \"\",\r\n    textMsg: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    /*getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setInitialRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n    let res = [\r\n        {\r\n            id: 1,\r\n            trigger: \"Trigger 1\",\r\n            voiceMsg: \"Sample 1\",\r\n            textMsg: \"Sample 01\"\r\n        },\r\n        {\r\n            id: 2,\r\n            trigger: \"Trigger 2\",\r\n            voiceMsg: \"Sample 2\",\r\n            textMsg: \"Sample 02\"\r\n        },\r\n        {\r\n            id: 3,\r\n            trigger: \"Trigger 3\",\r\n            voiceMsg: \"Sample 3\",\r\n            textMsg: \"Sample 03\"\r\n        },\r\n        {\r\n            id: 4,\r\n            trigger: \"Trigger 4\",\r\n            voiceMsg: \"Sample 4\",\r\n            textMsg: \"Sample 04\"\r\n        },\r\n        {\r\n            id: 5,\r\n            trigger: \"Trigger 5\",\r\n            voiceMsg: \"Sample 5\",\r\n            textMsg: \"Sample 05\"\r\n        },\r\n        {\r\n            id: 6,\r\n            trigger: \"Trigger 6\",\r\n            voiceMsg: \"Sample 6\",\r\n            textMsg: \"Sample 06\"\r\n        }\r\n    ];\r\n    setRows(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const save = () =>{\r\n    // API\r\n    //reload();\r\n  }\r\n\r\n  const edit = (vals) =>{\r\n    const {id, trigger, voiceMsg, textMsg} = vals;\r\n    setState({\r\n        trigger, \r\n        voiceMsg, \r\n        textMsg});\r\n    setCurID(id);\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setCurID(null);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>LED Configuration</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Breadcrumb>\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      </Breadcrumb>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Trigger</TableCell>\r\n                <TableCell align=\"center\">Voice Message</TableCell>\r\n                <TableCell align=\"center\">Text Message</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.trigger}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"voiceMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.voiceMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.voiceMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"textMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.textMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.textMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"right\"  style={{padding:0}}>\r\n                    {curID === null?\r\n                        (<IconButton onClick={() => edit(row)}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            color=\"royalblue\"\r\n                            />\r\n                        </IconButton>)\r\n                        :(\r\n                        curID === row.id?\r\n                        <div>\r\n                            <IconButton onClick={() => save()}>\r\n                                <SaveIcon\r\n                                size={21}\r\n                                color=\"primary\"\r\n                                />\r\n                            </IconButton>\r\n                            <IconButton onClick={() => setCurID(null)}>\r\n                                <CloseIcon\r\n                                size={21}\r\n                                color=\"error\"\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                        :\r\n                        (<IconButton disabled = {true}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            />\r\n                        </IconButton>)\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { LedConfig };\r\n","import {\r\n  ProjectForm,\r\n  BusinessDetails,\r\n  Devices,\r\n  LedConfig,\r\n  Gates\r\n} from \"./projectSubPages/index.js\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport {Nav, Tab} from \"react-bootstrap\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\nexport function EditProject(props) {\r\n  let history = useHistory();\r\n  let { path, url } = useRouteMatch();\r\n  let {pathname} = useLocation();\r\n  let page = pathname.split('/')[3];\r\n  const direct = (path) =>{\r\n    history.push(url+path);\r\n  }\r\n  return (\r\n    <div className=\"tabModal\" style={{background:\"transparent\"}}>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Projects</title>\r\n      </Helmet>\r\n      <Tab.Container id=\"left-tabs-example\" >\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/info\")}} active = {page===\"info\"}>Infomation</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/business\")}} active = {page===\"business\"}>Business</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/gate\")}} active = {page===\"gate\"}>Gates</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/ledconfig\")}} active = {page===\"ledconfig\"}>LED Config</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n          <Switch>\r\n            <Route exact path={`${path}/info`}>\r\n              <ProjectForm />\r\n            </Route>\r\n            <Route exact path={`${path}/business`}>\r\n              <BusinessDetails />\r\n            </Route>\r\n            <Route exact path={`${path}/gate/:gateID`}>\r\n              <Devices />\r\n            </Route>\r\n            <Route exact path={`${path}/gate`}>\r\n              <Gates />\r\n            </Route>\r\n            <Route exact path={`${path}/ledconfig`}>\r\n              <LedConfig />\r\n            </Route>\r\n            <Route path={path}>\r\n              <Redirect to={`${url}/info`} />\r\n            </Route>\r\n          </Switch>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { EditProject };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Modal,Spinner } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport {getProjects, \r\n  getSpecialPlate,\r\n  delSpecialPlate,\r\n  updateSpecialPlate,\r\n  addSpecialPlate } from '../services/index.js';\r\n  import {Helmet} from \"react-helmet\";\r\n\r\nexport function SpecialPlates({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false,\r\n    edit: false\r\n  });\r\n  const [state, setState] = useState({\r\n    projectID: NaN,\r\n    actualPlate: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectID: NaN,\r\n    actualPlate: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectID: NaN,\r\n      actualPlate: \"\"\r\n    });\r\n    setCurState({\r\n      projectID: NaN,\r\n      actualPlate: \"\"\r\n    });\r\n  }\r\n  const [val, setVal] = useState({\r\n    projectID: NaN,\r\n    matchPlate: \"\",\r\n    actualPlate: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const [loading,setLoading] = useState(false);\r\n  const reload = () =>{\r\n    setLoading(true);\r\n    getSpecialPlate([\"projectID\", \"matchPlate\", \"actualPlate\"])\r\n      .then(async (data) => {\r\n        setLoading(false);\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n      setPage(0);\r\n  }\r\n  const func = async (val) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element.projectID] = element.projectName;\r\n    });\r\n    return await temp;\r\n  };\r\n  useEffect(() => {\r\n    getProjects([\"projectID\", \"projectName\"])\r\n    .then(async (data) => {\r\n      setProjects(data.content);\r\n      func(data.content).then(async(list)=>{\r\n        setProjectNames(await list);\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },projectNames);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleChangeVal = (e) =>{\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setVal((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (values) => {\r\n    let {projectID, matchPlate, actualPlate} = values;\r\n    setValidated(false);\r\n    setVal({\r\n        projectID,\r\n        matchPlate,\r\n        actualPlate\r\n      });\r\n    toggleModal(\"edit\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectID, actualPlate } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          (Number.isNaN(projectID) || row[\"projectID\"] === projectID) &&\r\n          String(row[\"actualPlate\"]).toLowerCase().indexOf(actualPlate.toLowerCase()) >= 0\r\n      )\r\n    );\r\n    setPage(0);\r\n  };\r\n\r\n  const insert = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n      addSpecialPlate(val)\r\n      .then(async (data) => {\r\n        reload();\r\n        toggleModal(\"add\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const edit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n        updateSpecialPlate(val)\r\n        .then(async (data) => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const del = (id) => {\r\n    delSpecialPlate(id)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Special Plates</title>\r\n      </Helmet>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this special plate?\"\r\n      />\r\n      <Modal show={toggle.add} onHide={()=>toggleModal(\"add\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Special Plate</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={insert}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4} align=\"right\">\r\n            Project Name\r\n          </Form.Label>\r\n          <Col sm={6}>\r\n              <Form.Control\r\n                custom\r\n                required\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChangeVal}\r\n                value={val.projectID}\r\n              >\r\n                  <option value={null}>--Select a Project--</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Project Name is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n        </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={4} align=\"right\">\r\n                Plate Pattern\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Pattern\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Plate Pattern is a required field.\r\n                </Form.Control.Feedback>\r\n                <Form.Text muted>\r\n                '%' matches a single character\r\n                </Form.Text>\r\n                <Form.Text muted>\r\n                '@' matches multiple characters\r\n                </Form.Text>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={4} align=\"right\">\r\n                Corrected Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Plate Number\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Corrected Plate is a required field.\r\n                </Form.Control.Feedback>\r\n                <Form.Text muted>\r\n                The plate number to correct to\r\n                </Form.Text>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"add\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    <Modal show={toggle.edit} onHide={()=>toggleModal(\"edit\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Special Plate</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={edit}>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={4} align=\"right\">\r\n                Plate Pattern\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                disabled\r\n                required\r\n                placeholder=\"Pattern\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Plate Pattern is a required field.\r\n                </Form.Control.Feedback>\r\n                <Form.Text muted>\r\n                '%' matches a single character\r\n                </Form.Text>\r\n                <Form.Text muted>\r\n                '@' matches multiple characters\r\n                </Form.Text>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={4} align=\"right\">\r\n                Corrected Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Plate Number\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Corrected Plate is a required field.\r\n                </Form.Control.Feedback>\r\n                <Form.Text muted>\r\n                The plate number to correct to\r\n                </Form.Text>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"edit\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Special Plate Correction</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row className = \"d-flex\">\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-info align-items-center d-flex\"\r\n                type=\"button\"\r\n                onClick={reload}\r\n              >\r\n              <RefreshIcon/>\r\n                &nbsp; Refresh \r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                setVal({\r\n                    projectID: \"\",\r\n                    matchPlate: \"\",\r\n                    actualPlate: \"\"\r\n                    });\r\n                  setValidated(false);\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n            <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectID}\r\n              >\r\n                  <option value={null}>All Projects</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"actualPlate\"\r\n                placeholder=\"Corrected Plate\"\r\n                onChange={handleChange}\r\n                value={state.actualPlate}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>Project</b></TableCell>\r\n                <TableCell align=\"center\"><b>Plate Pattern</b></TableCell>\r\n                <TableCell align=\"center\"><b>Corrected Plate</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading?\r\n              <TableRow>\r\n              <TableCell align=\"center\" colSpan={6}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n              </TableCell>\r\n            </TableRow>:\r\n            rows.length > 0?\r\n            (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.matchPlate}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"left\">\r\n                    {projectNames[row.projectID]}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.matchPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.actualPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {activateModal(row)}}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.matchPlate);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={4}>\r\n                  No Special Plates Found\r\n                </TableCell>\r\n              </TableRow>}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { SpecialPlates };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Modal,Spinner } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport { getObjectTypes,\r\n  getRegexPlate,\r\n  delRegexPlate,\r\n  updateRegexPlate,\r\n  addRegexPlate, } from '../services/index.js';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nexport function RegexPlates({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false,\r\n    edit: false\r\n  });\r\n  const [state, setState] = useState({\r\n    matchType: \"\",\r\n    matchName: \"\",\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    matchType: \"\",\r\n    matchName: \"\",\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      matchType: \"\",\r\n      matchName: \"\",\r\n    });\r\n    setCurState({\r\n      matchType: \"\",\r\n      matchName: \"\",\r\n    });\r\n  }\r\n  const [val, setVal] = useState({\r\n    matchName: \"\",\r\n    matchPlate: \"\",\r\n    matchType: \"\",\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [matchTypes, setMatchTypes] = useState([]);\r\n  const [loading,setLoading] = useState(false);\r\n  const reload = () =>{\r\n    setLoading(true);\r\n    getRegexPlate([\"matchPlate\", \"matchName\", \"matchType\"])\r\n      .then(async (data) => {\r\n        setLoading(false);\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n      setPage(0);\r\n  }\r\n  useEffect(() => {\r\n    getObjectTypes('regexPlate')\r\n    .then(async (data) => {\r\n      setMatchTypes(data.message);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  }, [matchTypes]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    let { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleChangeVal = (e) =>{\r\n    let { id, value } = e.target;\r\n    setVal((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (values) => {\r\n    let {matchName, matchPlate, matchType} = values;\r\n    setValidated(false);\r\n    setVal({\r\n        matchName,\r\n        matchPlate,\r\n        matchType\r\n      });\r\n    toggleModal(\"edit\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { matchType, matchName } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          (!matchType || row[\"matchType\"] === matchType) &&\r\n          String(row[\"matchName\"]).toLowerCase().includes(matchName.toLowerCase())\r\n      )\r\n    );\r\n    setPage(0);\r\n  };\r\n\r\n  const insert = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n      addRegexPlate(val)\r\n      .then(async (data) => {\r\n        reload();\r\n        toggleModal(\"add\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const edit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n        updateRegexPlate(val)\r\n        .then(async (data) => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const del = (id) => {\r\n    delRegexPlate(id)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Standard Plates</title>\r\n      </Helmet>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this special plate?\"\r\n      />\r\n      <Modal show={toggle.add} onHide={()=>toggleModal(\"add\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Standard Plate</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={insert}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4} align=\"right\">\r\n              Pattern Name\r\n          </Form.Label>\r\n          <Col\r\n              sm={6}\r\n          >\r\n            <Form.Control\r\n            required\r\n            placeholder=\"Name\"\r\n            id=\"matchName\"\r\n            name=\"matchName\"\r\n            value={val.matchName}\r\n            onChange={handleChangeVal}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n            Pattern Name is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4} align=\"right\">\r\n              Plate Pattern\r\n          </Form.Label>\r\n          <Col\r\n              sm={6}\r\n          >\r\n            <Form.Control\r\n            required\r\n            placeholder=\"Pattern\"\r\n            id=\"matchPlate\"\r\n            name=\"matchPlate\"\r\n            value={val.matchPlate}\r\n            onChange={handleChangeVal}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n            Plate Pattern is a required field.\r\n            </Form.Control.Feedback>\r\n            <Form.Text muted>\r\n            '%' matches a single character\r\n            </Form.Text>\r\n            <Form.Text muted>\r\n            '@' matches multiple characters\r\n            </Form.Text>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4} align=\"right\">\r\n            Plate Type\r\n          </Form.Label>\r\n          <Col sm={6}>\r\n              <Form.Control\r\n                custom\r\n                required\r\n                as = \"select\"\r\n                id=\"matchType\"\r\n                placeholder=\"Type\"\r\n                onChange={handleChangeVal}\r\n                value={val.matchType}\r\n              >\r\n                  <option value={''}>--Select a Plate Type--</option>\r\n                  {Object.entries(matchTypes).map(([matchTypeID, matchType])=>(\r\n                      <option value={matchTypeID}>{matchType.name}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n            Plate Type is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n        <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={()=>toggleModal(\"add\")}>\r\n            Cancel\r\n            </Button>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n            </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n      </Modal.Body>\r\n      </Modal>\r\n    <Modal show={toggle.edit} onHide={()=>toggleModal(\"edit\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Special Plate</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={edit}>\r\n          <Form.Group as={Row}>\r\n            <Form.Label column sm={4} align=\"right\">\r\n                Pattern Name\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n              <Form.Control\r\n              required\r\n              placeholder=\"Name\"\r\n              id=\"matchName\"\r\n              name=\"matchName\"\r\n              value={val.matchName}\r\n              onChange={handleChangeVal}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n              Pattern Name is a required field.\r\n              </Form.Control.Feedback>\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row}>\r\n            <Form.Label column sm={4} align=\"right\">\r\n                Plate Pattern\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n              <Form.Control\r\n              disabled\r\n              required\r\n              placeholder=\"Pattern\"\r\n              id=\"matchPlate\"\r\n              name=\"matchPlate\"\r\n              value={val.matchPlate}\r\n              onChange={handleChangeVal}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n              Plate Pattern is a required field.\r\n              </Form.Control.Feedback>\r\n              <Form.Text muted>\r\n              '%' matches a single character\r\n              </Form.Text>\r\n              <Form.Text muted>\r\n              '@' matches multiple characters\r\n              </Form.Text>\r\n            </Col>\r\n          </Form.Group>\r\n          <Form.Group as={Row}>\r\n            <Form.Label column sm={4} align=\"right\">\r\n              Plate Type\r\n            </Form.Label>\r\n            <Col sm={6}>\r\n                <Form.Control\r\n                  custom\r\n                  required\r\n                  as = \"select\"\r\n                  id=\"matchType\"\r\n                  placeholder=\"Type\"\r\n                  onChange={handleChangeVal}\r\n                  value={val.matchType}\r\n                >\r\n                    <option value={''}>--Select a Plate Type--</option>\r\n                    {Object.entries(matchTypes).map(([matchTypeID, matchType])=>(\r\n                        <option value={matchTypeID}>{matchType.name}</option>\r\n                    ))}\r\n                </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n              Plate Type is a required field.\r\n              </Form.Control.Feedback>\r\n            </Col>\r\n          </Form.Group>\r\n          <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={()=>toggleModal(\"edit\")}>\r\n              Cancel\r\n              </Button>\r\n              <Button variant=\"primary\" type=\"submit\">\r\n              Confirm\r\n              </Button>\r\n          </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Standard Plate Matching</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row className = \"d-flex\">\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-info align-items-center d-flex\"\r\n                type=\"button\"\r\n                onClick={reload}\r\n              >\r\n              <RefreshIcon/>\r\n                &nbsp; Refresh \r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setVal({\r\n                    matchName: \"\",  \r\n                    matchPlate: \"\",\r\n                    matchType: \"\",\r\n                  });\r\n                  setValidated(false);\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n            <div style={{\"flex-grow\":\"1\"}}/>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"matchType\"\r\n                placeholder=\"Plate Type\"\r\n                onChange={handleChange}\r\n                value={state.matchType}\r\n              >\r\n                  <option value={''}>All Plate Types</option>\r\n                  {Object.entries(matchTypes).map(([matchTypeID, matchType])=>(\r\n                      <option value={matchTypeID}>{matchType.name}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"matchName\"\r\n                placeholder=\"Pattern Name\"\r\n                onChange={handleChange}\r\n                value={state.matchName}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>Pattern Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Plate Pattern</b></TableCell>\r\n                <TableCell align=\"center\"><b>Plate Type</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading?\r\n              <TableRow>\r\n              <TableCell align=\"center\" colSpan={6}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n              </TableCell>\r\n            </TableRow>:\r\n            rows.length > 0?\r\n            (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.matchPlate}>\r\n                  <TableCell align=\"left\">\r\n                    {row.matchName}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.matchPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {matchTypes[row.matchType].name}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {activateModal(row)}}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.matchPlate);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={4}>\r\n                  No Special Plates Found\r\n                </TableCell>\r\n              </TableRow>}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { RegexPlates };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Spinner } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { ImageModal, TablePaginationActions, ExportRecordModal } from \"../components/index.js\";\r\nimport {getMovementLogs, getObjectTypes, alertService } from '../services/index.js';\r\nimport { LockFill, UnlockFill } from \"react-bootstrap-icons\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nimport { InputGroup, DatePicker } from 'rsuite';\r\n\r\nfunction pad2(n) { return n < 10 ? '0' + n : n }\r\nfunction dateToString(date){\r\n  if(date===null)return \"\";\r\n  else return date.getFullYear().toString() +'-'+ pad2(date.getMonth() + 1) +'-'+ pad2( date.getDate()) +' '+ pad2( date.getHours() ) +':'+ pad2( date.getMinutes() ) +':'+ pad2( date.getSeconds() );\r\n}\r\n\r\nfunction minStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 > str2)return str2;\r\n  else return str1;\r\n}\r\nfunction maxStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 < str2)return str2;\r\n  else return str1;\r\n}\r\n\r\nexport function Records({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n  const [gateTypes, setGateTypes] = useState({});\r\n  const [toggle, setToggle] = useState(false);\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadImage, setLoadImage] = useState({});\r\n  const  queryFields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\"\r\n  ];\r\n  const fieldPlaceholder = {\r\n    projectName: \"Project\",\r\n    vehicleType: \"Vehicle Type\",\r\n    isOpened: \"Opened?\",\r\n    gateName: \"Gate Name\",\r\n    gateType: \"Gate Type\",\r\n    originalPlate: \"Original Plate\",\r\n    confirmedPlate: \"Actual Plate\",\r\n    detectionTime: \"Detection Time\",\r\n    confirmedTime: \"Confirmed Time\",\r\n    image1: \"Image\",\r\n    plateImage: \"Plate Image\"\r\n  };\r\n  const fields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"isOpened\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"detectionTime\",\r\n    \"confirmedTime\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\"\r\n  ];\r\n  const fieldLength = {\r\n    projectName: \"120px\",\r\n    vehicleType: \"120px\",\r\n    isOpened: \"0px\",\r\n    gateName: \"120px\",\r\n    gateType: \"100px\",\r\n    originalPlate: \"140px\",\r\n    confirmedPlate: \"140px\",\r\n    detectionTime: \"160px\",\r\n    confirmedTime: \"160px\",\r\n    image1: \"90px\",\r\n    plateImage: \"90px\"\r\n  };\r\n  const fieldHeight = {\r\n    image1: \"50px\",\r\n    plateImage: \"50px\",\r\n    isOpened: \"30px\"\r\n  }\r\n  const [state, setState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\",\r\n    curField2: \"gateName\",\r\n    val2: \"\"\r\n  });\r\n  const [timeState, setTimeState] = useState({\r\n    startTime: \"\",\r\n    endTime: \"\"\r\n  })\r\n  const [curTimeState, setCurTimeState] = useState({\r\n    startTime: \"\",\r\n    endTime: \"\"\r\n  })\r\n  const [curState, setCurState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\",\r\n    curField2: \"gateName\",\r\n    val2: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const reload = () =>{\r\n    let filters = (timeState.startTime===\"\"&&timeState.endTime===\"\")?{}:{\r\n      detectionTime : timeState.startTime+'|'+timeState.endTime,\r\n    };\r\n    if (state.val.length) filters[state.curField] = state.val;\r\n    if (state.val2.length) filters[state.curField2] = state.val2;\r\n    setLoading(true);\r\n    getMovementLogs(fields.concat(\"logID\"), filters, 0, true)\r\n      .then(async (data) => {\r\n        setLoading(false);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n      setPage(0);\r\n  };\r\n  useEffect(() => {\r\n    reload();\r\n    getObjectTypes(\"gate\")\r\n    .then(async (data) => {\r\n      setGateTypes(data.message);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Gate Types!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows]);\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },[curTimeState, curState]);\r\n\r\n  useEffect(() => {\r\n    !loading && rows?.length && alertService.info(`${rows.length} entries loaded`);\r\n  }, [rows]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    if(id===\"curField\"){\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        curField: value,\r\n        val: \"\"\r\n      }));\r\n    }else if(id===\"curField2\"){\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        curField2: value,\r\n        val2: \"\"\r\n      }));\r\n    }else{\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (value, id) => {\r\n    setTimeState((prevState)=>({\r\n      ...prevState,\r\n      [id]:value\r\n    }));\r\n  };\r\n\r\n  const filter = (e) => {\r\n    // let { curField, val,curField2, val2  } = curState;\r\n    // let curRows = initialRows;\r\n    // setRows(\r\n    //   curRows.filter(\r\n    //     (row) =>\r\n    //       row[curField].toLowerCase().indexOf(val.toLowerCase()) >= 0 &&\r\n    //       row[curField2].toLowerCase().indexOf(val2.toLowerCase()) >= 0 \r\n    //   ).sort(\r\n    //     (a,b)=> (a.detectionTime < b.detectionTime) ? 1 : -1\r\n    //   )\r\n    // );\r\n    let curRows = initialRows;\r\n    setRows(curRows.sort((a, b) => (a.detectionTime < b.detectionTime) ? 1 : -1));\r\n    setPage(0);\r\n  };\r\n  \r\n  const reset = async (e) =>{\r\n    setState((prevState)=>({\r\n      ...prevState,\r\n      val: \"\",\r\n      val2:\"\"\r\n    }));\r\n    setCurState((prevState)=>({\r\n      ...prevState,\r\n      val: \"\",\r\n      val2:\"\"\r\n    }));\r\n    setCurTimeState({\r\n      startTime: \"\",\r\n      endTime: \"\"\r\n    });\r\n    setTimeState({\r\n      startTime: \"\",\r\n      endTime: \"\"\r\n    });\r\n  }\r\n  \r\n  const addImages = (logID) =>{\r\n    getMovementLogs([\"image1\",\"plateImage\"], {logID})\r\n      .then(async (data) => {\r\n        setLoadImage((prevState)=>({\r\n          ...prevState,\r\n          [logID]: data.content[0]\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n      console.log(loadImage);\r\n  }\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const emptyRows = (rows.length > 0 && !loading? rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage) : rowsPerPage - 1);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (rows.length / rowsPerPage - 1 == page) {\r\n      let filters = (timeState.startTime===\"\"&&timeState.endTime===\"\")?{}:{\r\n        detectionTime : timeState.startTime+'|'+timeState.endTime,\r\n      };\r\n      if (state.val.length) filters[state.curField] = state.val;\r\n      if (state.val2.length) filters[state.curField2] = state.val2;\r\n      setLoading(true);\r\n      getMovementLogs(fields.concat(\"logID\"), filters, rows.length, true)\r\n      .then(async (data) => {\r\n        setLoading(false);\r\n        setRows(rows.concat(data.content.sort((a, b) => (a.detectionTime < b.detectionTime) ? 1 : -1)));\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });  \r\n    }\r\n  }, [page]);\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Records</title>\r\n      </Helmet>\r\n      <ImageModal\r\n      src = {imageSrc}\r\n      toggleModal={()=>{\r\n        setImageSrc(null);\r\n      }}\r\n      />\r\n      {toggle?\r\n      <ExportRecordModal\r\n        hide={toggle}\r\n        toggleModal={() => {\r\n          setToggle(false);\r\n        }}\r\n      />:null}\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Entry Exit Records</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Row className=\"d-flex\" style={{padding:\"10px 0px\"}}>\r\n          <Col sm=\"auto\">\r\n            <InputGroup style={{\"background-color\":\"white\"}}>\r\n              <InputGroup.Addon>From</InputGroup.Addon>\r\n              <DatePicker \r\n              format=\"YYYY-MM-DD HH:mm:ss\" \r\n              block appearance=\"subtle\"\r\n              value={timeState.startTime}\r\n              onChange={(val)=>{\r\n                handleTimeChange(dateToString(val), \"startTime\");\r\n                handleTimeChange(maxStr(dateToString(val),timeState.endTime), \"endTime\");\r\n              }}\r\n              ranges={[\r\n                {\r\n                  label: 'Now',\r\n                  value: new Date()\r\n                }\r\n              ]}\r\n              placeholder=\"YYYY-MM-DD HH:MM:SS\"/>\r\n              <InputGroup.Addon>To</InputGroup.Addon>\r\n              <DatePicker \r\n              format=\"YYYY-MM-DD HH:mm:ss\" \r\n              block appearance=\"subtle\"\r\n              value={timeState.endTime}\r\n              onChange={(val)=>{\r\n                handleTimeChange(dateToString(val), \"endTime\");\r\n                handleTimeChange(minStr(dateToString(val),timeState.startTime), \"startTime\");\r\n              }} \r\n              ranges={[\r\n                {\r\n                  label: 'Now',\r\n                  value: new Date()\r\n                }\r\n              ]}\r\n              placeholder=\"YYYY-MM-DD HH:MM:SS\"/>\r\n            </InputGroup>\r\n          </Col>\r\n          <div style={{\"flex-grow\":\"1\"}}></div>\r\n          <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-info align-items-center d-flex\"\r\n                type=\"button\"\r\n                onClick={()=>{\r\n                  setLoading(true);\r\n                  reload();\r\n                }}\r\n              >\r\n              <RefreshIcon/>\r\n                &nbsp; Refresh \r\n              </Button>\r\n          </Col>\r\n          <Col sm=\"auto\">\r\n            <Button\r\n              className=\"btn btn-success align-items-center d-flex\"\r\n              type=\"button\"\r\n              onClick={()=>setToggle(true)}\r\n            >\r\n            <GetAppIcon/>\r\n              &nbsp; Export \r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Form onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row className=\"d-flex\">\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"curField\"\r\n                onChange={handleChange}\r\n                value={state.curField}\r\n              >\r\n                  {queryFields.map((queryField)=>(\r\n                      <option value={queryField}>{fieldPlaceholder[queryField]}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"val\"\r\n                placeholder={fieldPlaceholder[state.curField]}\r\n                onChange={handleChange}\r\n                value={state.val}\r\n              />  \r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"curField2\"\r\n                onChange={handleChange}\r\n                value={state.curField2}\r\n              >\r\n                  {queryFields.map((queryField)=>(\r\n                      <option value={queryField}>{fieldPlaceholder[queryField]}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"val2\"\r\n                placeholder={fieldPlaceholder[state.curField2]}\r\n                onChange={handleChange}\r\n                value={state.val2}\r\n              />  \r\n            </Col>\r\n            <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{\r\n                setCurState(state);\r\n                setCurTimeState(timeState);\r\n              }}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper} className=\"overflowTable scrollbar-grey\">\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {fields.map((field) =>(\r\n                  <TableCell align=\"center\" style={{\"min-width\":fieldLength[field]}}><b>{fieldPlaceholder[field]}</b></TableCell>\r\n                ))}\r\n                <TableCell align=\"center\" style={{\"min-width\":fieldLength[\"image1\"]}}><b>{fieldPlaceholder[\"image1\"]}</b></TableCell>\r\n                <TableCell align=\"center\" style={{\"min-width\":fieldLength[\"plateImage\"]}}><b>{fieldPlaceholder[\"plateImage\"]}</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            {loading? \r\n            <TableBody>\r\n            <div className = \"loadingTable\" style={{ height: 53 * rowsPerPage }}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n              <TableRow style={{ height: 53 * rowsPerPage }}>\r\n                  <TableCell colSpan={13} />\r\n                </TableRow>\r\n            </TableBody>\r\n            :\r\n            <TableBody>\r\n              {rows.length>0?\r\n              (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.logID}>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.vehicleType}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.isOpened === true?\r\n                    <UnlockFill color=\"#64D381\" size={25} />:\r\n                    <LockFill color=\"red\" size={25} />}\r\n            </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.gateName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.gateType===null?null: (gateTypes[row.gateType]===undefined? null: gateTypes[row.gateType].name)}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.detectionTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.confirmedTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.originalPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {(row.confirmedPlate===null||row.confirmedPlate==\"\")?null:\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.confirmedPlate}</u>\r\n                      </div>\r\n                    </div>}\r\n                  </TableCell>\r\n                  <TableCell style={{padding:\"0 10px\"}} align=\"center\">\r\n                    {\r\n                      loadImage[row.logID] === undefined?\r\n                      <IconButton onClick={() => addImages(row.logID)}>\r\n                        <GetAppIcon/>\r\n                      </IconButton>:\r\n                      <img \r\n                      className=\"imageClick\"\r\n                      onClick = {()=>setImageSrc(loadImage[row.logID].image1)} \r\n                      style={{\"height\":fieldHeight.image1}} \r\n                      src={loadImage[row.logID].image1}/>\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell style={{padding:\"0 10px\"}} align=\"center\">\r\n                  {\r\n                      loadImage[row.logID] === undefined?\r\n                      <IconButton onClick={() => addImages(row.logID)}>\r\n                        <GetAppIcon/>\r\n                      </IconButton>:\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(loadImage[row.logID].plateImage)} \r\n                    style={{\"height\":fieldHeight.plateImage}} \r\n                    src={loadImage[row.logID].plateImage} />\r\n                  }\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={11}>\r\n                  No Records Found\r\n                </TableCell>\r\n              </TableRow>\r\n            }\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 50 * emptyRows }}>\r\n                  <TableCell colSpan={11} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          }\r\n          </Table>\r\n        </TableContainer>\r\n        <TableRow className=\"d-flex justify-content-center\">\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 50]}\r\n              colSpan={11}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n        </TableRow>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Records };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport function ParkRecords({ match }) {\r\n  return (<div className=\"d-flex justify-content-center\"><h1>Pending API</h1></div>);\r\n}\r\n\r\nexport default { ParkRecords };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Spinner } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, RulesModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getGate, alertService, delGate, getProjects, getAccessRule, delAccessRule} from '../services/index.js';\r\nimport { Directions, MonetizationOn } from \"@material-ui/icons\";\r\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nexport function ParkingRules (){\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [project,setProject] = useState(\"\");\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const [gateNames, setGateNames] = useState({});\r\n  const [loading,setLoading] = useState(false);\r\n  const [projects,setProjects] = useState([]);\r\n  const func = async (val, inputField, outputField) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element[inputField]] = element[outputField];\r\n    });\r\n    return await temp;\r\n  };\r\n  const reloadProjects = () =>{\r\n    getProjects([\"projectID\", \"projectName\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setProjects(data.content);\r\n        func(data.content, \"projectID\", \"projectName\").then(async(list)=>{\r\n          setProjectNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reloadProjects();\r\n  }, [dummy]);\r\n\r\n  const reload = () =>{\r\n    if(project===\"\"){\r\n      setRows([]);\r\n    }else{\r\n      setLoading(true);\r\n      getAccessRule(project, [\"accessRuleID\", \"accessRuleName\", \"isChargeable\", \"gates\"])\r\n      .then(async (data) => {\r\n        setLoading(false);\r\n        console.log(data.content);\r\n        setRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n    }\r\n    setPage(0);\r\n  }\r\n\r\n  const reloadGates = () =>{\r\n    getGate(project,[\"gateID\",\"gateName\"])\r\n      .then(async (data) => {\r\n        func(data.content, \"gateID\", \"gateName\").then(async(list)=>{\r\n          setGateNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n    reloadGates();\r\n  },[project]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (accessRuleID) => {\r\n    delAccessRule(accessRuleID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Rule Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Delete Rule, There was an error!\", error);\r\n    });\r\n  };\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows = (rows.length > 0? rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage) : rowsPerPage - 1);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Rules</title>\r\n      </Helmet>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this rule?\"\r\n      />\r\n      {toggle.edit?\r\n      <RulesModal\r\n        hide={toggle.edit}\r\n        projectID = {project}\r\n        projectName = {projectNames[project]}\r\n        accessRuleID = {curID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />:null}\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Access Rules</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row className = \"d-flex\">\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                onChange={(e)=>{\r\n                  setProject(e.target.value);\r\n                }}\r\n                value={project}\r\n              >\r\n                <option value=\"\">--Select a Project--</option>\r\n                  {projects.map((val)=>(\r\n                      <option value={val.projectID}>{val.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n              disabled={project===\"\"}\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n            <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-info align-items-center d-flex\"\r\n                type=\"button\"\r\n                onClick={reload}\r\n              >\r\n              <RefreshIcon/>\r\n                &nbsp; Refresh \r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>Project</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Gates</b></TableCell>\r\n                <TableCell align=\"center\"><b>Chargeable</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading?\r\n              <TableRow>\r\n              <TableCell align=\"center\" colSpan={5}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n              </TableCell>\r\n            </TableRow>:\r\n            rows.length > 0 ?\r\n            (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{projectNames[project]}</TableCell>\r\n                  <TableCell align=\"center\">{row.accessRuleName}</TableCell>\r\n                  <TableCell align=\"center\">{row.gates===null?null:((row.gates).map((gate)=>(\r\n                    <div>{gate===null?null:gateNames[gate]} <br/></div> \r\n                  )))}</TableCell>\r\n                  <TableCell align=\"center\">{row.isChargeable?\r\n                  <AttachMoneyIcon style={{color:\"#66bb6a\"}}/>\r\n                  :<MoneyOffIcon style={{color:\"red\"}}/>\r\n                  }</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.accessRuleID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.accessRuleID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={5}>\r\n                  No Rules Found\r\n                </TableCell>\r\n              </TableRow>}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={5} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={5}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ParkingRules };","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Spinner } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, WhitelistModal, TablePaginationActions, ExportWhitelistModal } from \"../components/index.js\";\r\nimport {alertService, getProjects, getAccessRule, \r\n    getWhitelistEntry,\r\n    delWhitelistEntryInfo,\r\n    getUnit} from '../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nimport { InputGroup, DatePicker } from 'rsuite';\r\n\r\nfunction pad2(n) { return n < 10 ? '0' + n : n }\r\nfunction dateToString(date){\r\n  if(date===null)return \"\";\r\n  else return date.getFullYear().toString() +'-'+ pad2(date.getMonth() + 1) +'-'+ pad2( date.getDate()) +' '+ pad2( date.getHours() ) +':'+ pad2( date.getMinutes() ) +':'+ pad2( date.getSeconds() );\r\n}\r\n\r\nfunction minStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 > str2)return str2;\r\n  else return str1;\r\n}\r\nfunction maxStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 < str2)return str2;\r\n  else return str1;\r\n}\r\n\r\nexport function Whitelist (){\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [loading,setLoading] = useState(false);\r\n  const [state, setState] = useState({\r\n    plateNumber: \"\",\r\n    tag: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    plateNumber: \"\",\r\n    tag: \"\"\r\n  });\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false,\r\n    export: false\r\n  });\r\n  const [project,setProject] = useState(\"\");\r\n  const [curID, setCurID] = useState(null);\r\n  const [dummy, setDummy] = useState(false);\r\n  const [accessRules, setAccessRules] = useState([]);\r\n  const [accessRuleVals, setAccessRuleVals] = useState({});\r\n  const [units, setUnits] = useState([]);\r\n  const [unitNames, setUnitNames] = useState({});\r\n  const [timeVar, setTimeVar] = useState(\"startDateTime\");\r\n  const [curTimeVar, setCurTimeVar] = useState(\"startDateTime\");\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const [projects,setProjects] = useState([]);\r\n  const func = async (val, inputField, outputField) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element[inputField]] = element[outputField];\r\n    });\r\n    return await temp;\r\n  };\r\n  const [timeState, setTimeState] = useState({\r\n    startTime: \"\",\r\n    endTime: \"\"\r\n  });\r\n  const [curTimeState, setCurTimeState] = useState({\r\n    startTime: \"\",\r\n    endTime: \"\"\r\n  });\r\n\r\n  const reset = () =>{\r\n    console.log(\"reseting\");\r\n    setTimeState({\r\n      startTime: \"\",\r\n      endTime: \"\"\r\n    });\r\n    setCurTimeState({\r\n      startTime: \"\",\r\n      endTime: \"\"\r\n    });\r\n    setState({\r\n      plateNumber: \"\",\r\n      tag: \"\"\r\n    });\r\n    setCurState({\r\n      plateNumber: \"\",\r\n      tag: \"\"\r\n    });\r\n  }\r\n\r\n  const reloadProjects = () =>{\r\n    getProjects([\"projectID\", \"projectName\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setProjects(data.content);\r\n        func(data.content, \"projectID\", \"projectName\").then(async(list)=>{\r\n          setProjectNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Project, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    reloadProjects();\r\n  }, [dummy]);\r\n\r\n  \r\n  const reloadAccessRules = () =>{\r\n    getAccessRule(project,[\"accessRuleID\",\"accessRuleName\",\"projectID\"])\r\n      .then(async (data) => {\r\n        setAccessRules(data.content);\r\n        /*setAccessRules(data.content.map((rule)=>({\r\n          value: rule.accessRuleID,\r\n          label: rule.accessRuleName\r\n        })));*/\r\n        func(data.content,\"accessRuleID\", \"accessRuleName\").then(async(list)=>{\r\n          setAccessRuleVals(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Access Rule, there was an error!\", error);\r\n      });\r\n  }\r\n \r\n  const reloadUnits = () =>{\r\n    getUnit(project, [\"unitID\", \"unitName\"])\r\n      .then(async (data) => {\r\n        setUnits(data.content);\r\n        func(data.content,\"unitID\", \"unitName\").then(async(list)=>{\r\n          setUnitNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Unit, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reloadAccessRules();\r\n    reloadUnits();\r\n    reset();\r\n  },[project]);\r\n\r\n\r\n  const reload = () =>{\r\n    if(project===\"\"){\r\n      setInitialRows([]);\r\n    }else{\r\n      setLoading(true);\r\n      let filters = (timeState.startTime===\"\"&&timeState.endTime===\"\")?{}:{\r\n        [curTimeVar] : timeState.startTime+'|'+timeState.endTime\r\n      };\r\n      getWhitelistEntry([\"recordID\",\"plateNumber\",\"accessRuleID\",\"tag\",\"startDateTime\",\"endDateTime\",\"unitID\"],filters)\r\n      .then(async (data) => {\r\n          setInitialRows(\r\n              data.content.filter((entry)=>\r\n                  entry.accessRuleID !== null &&\r\n                  accessRuleVals[entry.accessRuleID] !== undefined\r\n              )\r\n          );\r\n          setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get entry, there was an error!\", error);\r\n      });\r\n    }\r\n    setPage(0);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },[accessRuleVals, unitNames, curTimeState, curTimeVar]);\r\n\r\n  const filter = () => {\r\n    let curRows = initialRows;\r\n    let {plateNumber, tag} = curState;\r\n    console.log(curRows);\r\n    console.log(plateNumber,tag);\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[\"plateNumber\"].toLowerCase().indexOf(plateNumber.toLowerCase()) >= 0 &&\r\n          row[\"tag\"].toLowerCase().indexOf(tag.toLowerCase()) >=0\r\n      )\r\n    );\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    filter();\r\n  },[initialRows, curState]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n  };\r\n  const handleTimeChange = (value, id) => {\r\n    setTimeState((prevState)=>({\r\n      ...prevState,\r\n      [id]:value\r\n    }));\r\n  };\r\n\r\n  const del = async (recordID) => {\r\n    delWhitelistEntryInfo(recordID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Entry Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Entry, There was an error!\", error);\r\n    });\r\n  };\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Whitelists</title>\r\n      </Helmet>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this entry?\"\r\n      />\r\n      {toggle.edit?\r\n      <WhitelistModal\r\n        hide={toggle.edit}\r\n        projectName = {projectNames[project]}\r\n        ID = {curID}\r\n        accessRules = {accessRules}\r\n        units = {units}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />:null}\r\n\r\n      {toggle.export?\r\n      <ExportWhitelistModal\r\n        hide={toggle.export}\r\n        projects={projects}\r\n        projectNames = {projectNames}\r\n        toggleModal={() => {\r\n          toggleModal(\"export\");\r\n        }}\r\n      />:null}\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Whitelist Entries</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row className=\"d-flex\" style={{padding:\"10px 0px\"}}>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                onChange={(e)=>{\r\n                  setProject(e.target.value);\r\n                }}\r\n                value={project}\r\n              >\r\n                <option value=\"\">--Select a Project--</option>\r\n                  {projects.map((val)=>(\r\n                      <option value={val.projectID}>{val.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n              disabled={project===\"\"}\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"d-flex\" style={{padding:\"10px 0px\"}}>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                placeholder=\"Plate No.\"\r\n                id=\"plateNumber\"\r\n                onChange={handleChange}\r\n                value={state.plateNumber}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                placeholder=\"Tag\"\r\n                id=\"tag\"\r\n                onChange={handleChange}\r\n                value={state.tag}\r\n              />\r\n            </Col>\r\n          <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n            <Button\r\n              className=\"btn btn-info align-items-center d-flex\"\r\n              type=\"button\"\r\n              onClick={reload}\r\n            >\r\n            <RefreshIcon/>\r\n              &nbsp; Refresh \r\n            </Button>\r\n          </Col>\r\n          <Col sm=\"auto\">\r\n            <Button\r\n              className=\"btn btn-success align-items-center d-flex\"\r\n              type=\"button\"\r\n              onClick={()=>toggleModal(\"export\")}\r\n            >\r\n            <GetAppIcon/>\r\n              &nbsp; Export \r\n            </Button>\r\n          </Col>\r\n          </Row>\r\n          <Row className=\"d-flex\" style={{padding:\"10px 0px\"}}>\r\n          <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                onChange={(e)=>{\r\n                  setTimeVar(e.target.value);\r\n                }}\r\n                value={timeVar}\r\n              >\r\n                <option value=\"startDateTime\">Start Date</option>\r\n                <option value=\"endDateTime\">End Date</option>\r\n              </Form.Control>\r\n            </Col>\r\n          <Col sm=\"auto\">\r\n            <InputGroup style={{\"background-color\":\"white\"}}>\r\n              <InputGroup.Addon>From</InputGroup.Addon>\r\n              <DatePicker \r\n              format=\"YYYY-MM-DD HH:mm:ss\" \r\n              block appearance=\"subtle\"\r\n              value={timeState.startTime}\r\n              onChange={(val)=>{\r\n                handleTimeChange(dateToString(val), \"startTime\");\r\n                handleTimeChange(maxStr(dateToString(val),timeState.endTime), \"endTime\");\r\n              }}\r\n              ranges={[\r\n                {\r\n                  label: 'Now',\r\n                  value: new Date()\r\n                }\r\n              ]}\r\n              placeholder=\"YYYY-MM-DD HH:MM:SS\"/>\r\n              <InputGroup.Addon>To</InputGroup.Addon>\r\n              <DatePicker \r\n              format=\"YYYY-MM-DD HH:mm:ss\" \r\n              block appearance=\"subtle\"\r\n              value={timeState.endTime}\r\n              onChange={(val)=>{\r\n                handleTimeChange(dateToString(val), \"endTime\");\r\n                handleTimeChange(minStr(dateToString(val),timeState.startTime), \"startTime\");\r\n              }} \r\n              ranges={[\r\n                {\r\n                  label: 'Now',\r\n                  value: new Date()\r\n                }\r\n              ]}\r\n              placeholder=\"YYYY-MM-DD HH:MM:SS\"/>\r\n            </InputGroup>\r\n          </Col>\r\n          <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-primary\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurTimeState(timeState);\r\n                  setCurState(state);\r\n                  setCurTimeVar(timeVar);\r\n                }}\r\n              >\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n            <Button type=\"button\" variant=\"secondary\" onClick={()=>reset()}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"center\"><b>Plate Number</b></TableCell>\r\n                <TableCell align=\"center\"><b>Project</b></TableCell>\r\n                <TableCell align=\"center\"><b>Unit Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Access Rule</b></TableCell>\r\n                <TableCell align=\"center\"><b>Tag</b></TableCell>\r\n                <TableCell align=\"center\"><b>Start Date</b></TableCell>\r\n                <TableCell align=\"center\"><b>End Date</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading?\r\n              <TableRow>\r\n              <TableCell align=\"center\" colSpan={8}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n              </TableCell>\r\n            </TableRow>:\r\n            rows.length > 0 ?(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.plateNumber}</u>\r\n                      </div>\r\n                    </div>\r\n                </TableCell>\r\n                  <TableCell align=\"center\">{projectNames[project]}</TableCell>\r\n                  <TableCell align=\"center\">{Number.isInteger(row.unitID)? unitNames[String(row.unitID)] : '-'}</TableCell>\r\n                  <TableCell align=\"center\">{row.accessRuleID === null? null: accessRuleVals[row.accessRuleID]}</TableCell>\r\n                  <TableCell align=\"center\">{row.tag}</TableCell>\r\n                  <TableCell align=\"center\">{row.startDateTime}</TableCell>\r\n                  <TableCell align=\"center\">{row.endDateTime}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <IconButton onClick={() => {\r\n                        setCurID(row.recordID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.recordID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={8}>\r\n                  No Entries Found\r\n                </TableCell>\r\n              </TableRow>}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={8} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={8}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Whitelist };","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Spinner } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu, ClipboardX } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, UnitsModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getGate, alertService, delGate, getProjects, getUnit, delUnit, updateUnitInfo} from '../services/index.js';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nexport function Units (){\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [project,setProject] = useState(\"\");\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const [gateNames, setGateNames] = useState({});\r\n  const [loading,setLoading] = useState(false);\r\n  const [projects,setProjects] = useState([]);\r\n  const func = async (val, inputField, outputField) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element[inputField]] = element[outputField];\r\n    });\r\n    return await temp;\r\n  };\r\n  const reloadProjects = () =>{\r\n    getProjects([\"projectID\", \"projectName\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setProjects(data.content);\r\n        func(data.content, \"projectID\", \"projectName\").then(async(list)=>{\r\n          setProjectNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Project, there was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reloadProjects();\r\n  }, [dummy]);\r\n\r\n  const reload = () =>{\r\n    if(project===\"\"){\r\n      setRows([]);\r\n    }else{\r\n      setLoading(true);\r\n      getUnit(project, [\"unitID\", \"unitName\", \"entryGates\", \"exitGates\", \"maxPlates\", \"currentPlates\"])\r\n      .then(async (data) => {\r\n          setLoading(false);\r\n          setRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n          console.error(\"Get Unit, there was an error!\", error);\r\n      });\r\n    }\r\n    setPage(0);\r\n  }\r\n\r\n  const reloadGates = () =>{\r\n    getGate(project,[\"gateID\",\"gateName\"])\r\n      .then(async (data) => {\r\n        func(data.content, \"gateID\", \"gateName\").then(async(list)=>{\r\n          setGateNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n    reloadGates();\r\n  },[project]);\r\n\r\n  const resetCurrentPlates = (unitID) => {\r\n    updateUnitInfo(unitID, {currentPlates: []})\r\n    .then(async (data) => {\r\n      alertService.success(\"Current Vehicles Reset Successful!\");\r\n      reload();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Reset Current Plate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (unitID) => {\r\n    delUnit(unitID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Unit Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Delete Unit, There was an error!\", error);\r\n    });\r\n  };\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows = (rows.length > 0? rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage) : rowsPerPage - 1);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Units</title>\r\n      </Helmet>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this unit?\"\r\n      />\r\n      {toggle.edit?\r\n      <UnitsModal\r\n        hide={toggle.edit}\r\n        projectID={project}\r\n        projectName={projectNames[project]}\r\n        unitID={curID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n            toggleModal(\"edit\");\r\n        }}\r\n      /> : null}\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Units</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row className = \"d-flex\">\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                onChange={(e)=>{\r\n                  setProject(e.target.value);\r\n                }}\r\n                value={project}\r\n              >\r\n                <option value=\"\">--Select a Project--</option>\r\n                  {projects.map((val)=>(\r\n                      <option value={val.projectID}>{val.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n              disabled={project===\"\"}\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n            <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-info align-items-center d-flex\"\r\n                type=\"button\"\r\n                onClick={reload}\r\n              >\r\n              <RefreshIcon/>\r\n                &nbsp; Refresh \r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>Project</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Entry Gates</b></TableCell>\r\n                <TableCell align=\"center\"><b>Exit Gates</b></TableCell>\r\n                <TableCell align=\"center\"><b>Maximum Vehicles</b></TableCell>\r\n                <TableCell align=\"center\"><b>Current Vehicles</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading?\r\n              <TableRow>\r\n              <TableCell align=\"center\" colSpan={5}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n              </TableCell>\r\n            </TableRow>:\r\n            rows.length > 0 ?\r\n            (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.unitID}>\r\n                  <TableCell align=\"left\">{projectNames[project]}</TableCell>\r\n                  <TableCell align=\"center\">{row.unitName}</TableCell>\r\n                  <TableCell align=\"center\">{row.entryGates===null?null:((row.entryGates).map((gate)=>(\r\n                      <div>{gate===null?null:gateNames[gate]} <br/></div> \r\n                      )))}</TableCell>\r\n                  <TableCell align=\"center\">{row.exitGates===null?null:((row.exitGates).map((gate)=>(\r\n                      <div>{gate===null?null:gateNames[gate]} <br/></div> \r\n                      )))}</TableCell>\r\n                  <TableCell align=\"center\">{row.maxPlates}</TableCell>\r\n                  <TableCell align=\"center\">{!Array.isArray(row.currentPlates)?null:((row.currentPlates).map((plateNumber)=>(\r\n                      <div>{plateNumber} <br/></div> \r\n                      )))}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {\r\n                        resetCurrentPlates(row.unitID);\r\n                    }}>\r\n                      <ClipboardX\r\n                        size={21}\r\n                        color=\"grey\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.unitID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.unitID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={7}>\r\n                  No Units Found\r\n                </TableCell>\r\n              </TableRow>}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={7} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={7}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Units };","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Spinner } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { ImageModal, TablePaginationActions, ExportRecordModal } from \"../components/index.js\";\r\nimport { getDeviceHistory, getObjectTypes, alertService } from '../services/index.js';\r\nimport { LockFill, UnlockFill } from \"react-bootstrap-icons\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nimport { InputGroup, DatePicker } from 'rsuite';\r\n\r\nfunction pad2(n) { return n < 10 ? '0' + n : n }\r\nfunction dateToString(date){\r\n  if(date===null)return \"\";\r\n  else return date.getFullYear().toString() +'-'+ pad2(date.getMonth() + 1) +'-'+ pad2( date.getDate()) +' '+ pad2( date.getHours() ) +':'+ pad2( date.getMinutes() ) +':'+ pad2( date.getSeconds() );\r\n}\r\n\r\nfunction minStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 > str2)return str2;\r\n  else return str1;\r\n}\r\nfunction maxStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 < str2)return str2;\r\n  else return str1;\r\n}\r\n\r\nexport function DeviceHistory ({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n  const [gateTypes, setGateTypes] = useState({});\r\n  const [deviceTypes, setDeviceTypes] = useState({});\r\n  const [toggle, setToggle] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const  queryFields = [\r\n    \"deviceID\",\r\n    \"deviceName\",\r\n    \"deviceType\",\r\n    \"deviceStatus\",\r\n    \"projectName\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n  ];\r\n  const fieldPlaceholder = {\r\n    logDateTime: \"Timestamp\",\r\n    deviceID: \"Device ID\",\r\n    deviceName: \"Device Name\",\r\n    deviceType: \"Device Type\",\r\n    deviceStatus: \"Device Status\",\r\n    projectName: \"Project\",\r\n    gateName: \"Gate Name\",\r\n    gateType: \"Gate Type\",\r\n  };\r\n  const fields = [\r\n    \"logDateTime\",\r\n    \"deviceID\",\r\n    \"deviceName\",\r\n    \"deviceType\",\r\n    \"deviceStatus\",\r\n    \"projectName\",\r\n    \"gateName\",\r\n    \"gateType\"\r\n  ];\r\n  // const fieldLength = {\r\n  //   logDateTime: \"120px\",\r\n  //   deviceID: \"90px\",\r\n  //   deviceName: \"140px\",\r\n  //   deviceType: \"140px\",\r\n  //   projectName: \"120px\",\r\n  //   gateName: \"120px\",\r\n  //   gateType: \"100px\",\r\n  //   // actions: \"90px\",\r\n  // };\r\n  const [state, setState] = useState({\r\n    curField: \"deviceID\",\r\n    val: \"\",\r\n    curField2: \"projectName\",\r\n    val2: \"\"\r\n  });\r\n  const [timeState, setTimeState] = useState({\r\n    startTime: \"\",\r\n    endTime: \"\"\r\n  })\r\n  const [curTimeState, setCurTimeState] = useState({\r\n    startTime: \"\",\r\n    endTime: \"\"\r\n  })\r\n  const [curState, setCurState] = useState({\r\n    curField: \"deviceID\",\r\n    val: \"\",\r\n    curField2: \"projectName\",\r\n    val2: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    let filters = (timeState.startTime===\"\"&&timeState.endTime===\"\")?{}:{\r\n      logDateTime : timeState.startTime+'|'+timeState.endTime,\r\n    };\r\n    if (state.val.length) filters[state.curField] = state.val;\r\n    if (state.val2.length) filters[state.curField2] = state.val2;\r\n    setLoading(true);\r\n    getDeviceHistory(fields.concat(\"logID\"), filters, 0, true)\r\n    .then(async (data) => {\r\n      setLoading(false);\r\n      setInitialRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n    });\r\n    setPage(0);\r\n    // getMovementLogs(fields.concat(\"logID\"), filters, 0, true)\r\n    //   .then(async (data) => {\r\n    //     setLoading(false);\r\n    //     setInitialRows(data.content);\r\n    //   })\r\n    //   .catch((error) => {\r\n    //     alertService.error(\"There was an error!\");\r\n    //     console.error(\"There was an error!\", error);\r\n    //   });\r\n    //   setPage(0);\r\n  };\r\n  useEffect(() => {\r\n    reload();\r\n    getObjectTypes(\"gate\")\r\n    .then(async (data) => {\r\n      setGateTypes(data.message);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Gate Types!\", error);\r\n    });\r\n    getObjectTypes(\"device\")\r\n    .then(async (data) => {\r\n      setDeviceTypes(data.message);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Device Types!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows]);\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },[curTimeState, curState]);\r\n\r\n  useEffect(() => {\r\n    !loading && rows?.length && alertService.info(`${rows.length} entries loaded`);\r\n  }, [rows]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    if(id===\"curField\"){\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        curField: value,\r\n        val: \"\"\r\n      }));\r\n    }else if(id===\"curField2\"){\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        curField2: value,\r\n        val2: \"\"\r\n      }));\r\n    }else{\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (value, id) => {\r\n    setTimeState((prevState)=>({\r\n      ...prevState,\r\n      [id]:value\r\n    }));\r\n  };\r\n\r\n  const filter = (e) => {\r\n    // let { curField, val,curField2, val2  } = curState;\r\n    // let curRows = initialRows;\r\n    // setRows(\r\n    //   curRows.filter(\r\n    //     (row) =>\r\n    //       row[curField].toLowerCase().indexOf(val.toLowerCase()) >= 0 &&\r\n    //       row[curField2].toLowerCase().indexOf(val2.toLowerCase()) >= 0 \r\n    //   ).sort(\r\n    //     (a,b)=> (a.logDateTime < b.logDateTime) ? 1 : -1\r\n    //   )\r\n    // );\r\n    let curRows = initialRows;\r\n    setRows(curRows.sort((a, b) => (a.logDateTime < b.logDateTime) ? 1 : -1));\r\n    setPage(0);\r\n  };\r\n  \r\n  const reset = async (e) =>{\r\n    setState((prevState)=>({\r\n      ...prevState,\r\n      val: \"\",\r\n      val2:\"\"\r\n    }));\r\n    setCurState((prevState)=>({\r\n      ...prevState,\r\n      val: \"\",\r\n      val2:\"\"\r\n    }));\r\n    setCurTimeState({\r\n      startTime: \"\",\r\n      endTime: \"\"\r\n    });\r\n    setTimeState({\r\n      startTime: \"\",\r\n      endTime: \"\"\r\n    });\r\n  }\r\n  \r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const emptyRows = (rows.length > 0 && !loading? rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage) : rowsPerPage - 1);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (rows.length / rowsPerPage - 1 == page) {\r\n      let filters = (timeState.startTime===\"\"&&timeState.endTime===\"\")?{}:{\r\n        logDateTime : timeState.startTime+'|'+timeState.endTime,\r\n      };\r\n      if (state.val.length) filters[state.curField] = state.val;\r\n      if (state.val2.length) filters[state.curField2] = state.val2;\r\n      setLoading(true);\r\n      getDeviceHistory(fields.concat(\"logID\"), filters, rows.length, true)\r\n      .then(async (data) => {\r\n        setLoading(false);\r\n        setRows(rows.concat(data.content.sort((a, b) => (a.logDateTime < b.logDateTime) ? 1 : -1)));\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });  \r\n    }\r\n  }, [page]);\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Device History</title>\r\n      </Helmet>\r\n      {toggle?\r\n      <ExportRecordModal\r\n        hide={toggle}\r\n        toggleModal={() => {\r\n          setToggle(false);\r\n        }}\r\n      />:null}\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Device History</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Row className=\"d-flex\" style={{padding:\"10px 0px\"}}>\r\n          <Col sm=\"auto\">\r\n            <InputGroup style={{\"background-color\":\"white\"}}>\r\n              <InputGroup.Addon>From</InputGroup.Addon>\r\n              <DatePicker \r\n              format=\"YYYY-MM-DD HH:mm:ss\" \r\n              block appearance=\"subtle\"\r\n              value={timeState.startTime}\r\n              onChange={(val)=>{\r\n                handleTimeChange(dateToString(val), \"startTime\");\r\n                handleTimeChange(maxStr(dateToString(val),timeState.endTime), \"endTime\");\r\n              }}\r\n              ranges={[\r\n                {\r\n                  label: 'Now',\r\n                  value: new Date()\r\n                }\r\n              ]}\r\n              placeholder=\"YYYY-MM-DD HH:MM:SS\"/>\r\n              <InputGroup.Addon>To</InputGroup.Addon>\r\n              <DatePicker \r\n              format=\"YYYY-MM-DD HH:mm:ss\" \r\n              block appearance=\"subtle\"\r\n              value={timeState.endTime}\r\n              onChange={(val)=>{\r\n                handleTimeChange(dateToString(val), \"endTime\");\r\n                handleTimeChange(minStr(dateToString(val),timeState.startTime), \"startTime\");\r\n              }} \r\n              ranges={[\r\n                {\r\n                  label: 'Now',\r\n                  value: new Date()\r\n                }\r\n              ]}\r\n              placeholder=\"YYYY-MM-DD HH:MM:SS\"/>\r\n            </InputGroup>\r\n          </Col>\r\n          <div style={{\"flex-grow\":\"1\"}}></div>\r\n          <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-info align-items-center d-flex\"\r\n                type=\"button\"\r\n                onClick={()=>{\r\n                  setLoading(true);\r\n                  reload();\r\n                }}\r\n              >\r\n              <RefreshIcon/>\r\n                &nbsp; Refresh \r\n              </Button>\r\n          </Col>\r\n          <Col sm=\"auto\">\r\n            <Button\r\n              className=\"btn btn-success align-items-center d-flex\"\r\n              type=\"button\"\r\n              onClick={()=>setToggle(true)}\r\n            >\r\n            <GetAppIcon/>\r\n              &nbsp; Export \r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Form onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row className=\"d-flex\">\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"curField\"\r\n                onChange={handleChange}\r\n                value={state.curField}\r\n              >\r\n                  {queryFields.map((queryField)=>(\r\n                      <option value={queryField}>{fieldPlaceholder[queryField]}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"val\"\r\n                placeholder={fieldPlaceholder[state.curField]}\r\n                onChange={handleChange}\r\n                value={state.val}\r\n              />  \r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"curField2\"\r\n                onChange={handleChange}\r\n                value={state.curField2}\r\n              >\r\n                  {queryFields.map((queryField)=>(\r\n                      <option value={queryField}>{fieldPlaceholder[queryField]}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"val2\"\r\n                placeholder={fieldPlaceholder[state.curField2]}\r\n                onChange={handleChange}\r\n                value={state.val2}\r\n              />  \r\n            </Col>\r\n            <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{\r\n                setCurState(state);\r\n                setCurTimeState(timeState);\r\n              }}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper} className=\"overflowTable scrollbar-grey\">\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {fields.map((field) =>(\r\n                  <TableCell align=\"center\">\r\n                    <b>{fieldPlaceholder[field]}</b>\r\n                  </TableCell>\r\n                ))}\r\n                {/* <TableCell align=\"right\" style={{\"min-width\":fieldLength[\"actions\"]}}><b>Actions</b></TableCell> */}\r\n              </TableRow>\r\n            </TableHead>\r\n            {loading? \r\n            <TableBody>\r\n            <div className = \"loadingTable\" style={{ height: 53 * rowsPerPage }}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n              <TableRow style={{ height: 53 * rowsPerPage }}>\r\n                  <TableCell colSpan={13} />\r\n                </TableRow>\r\n            </TableBody>\r\n            :\r\n            <TableBody>\r\n              {rows.length>0?\r\n              (rowsPerPage > 0\r\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              : rows).map((row) => (\r\n                <TableRow key={row.logID}>\r\n                  <TableCell align=\"center\">\r\n                    {row.logDateTime}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.deviceID}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.deviceName}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.deviceType===null?null:(deviceTypes[row.deviceType]===undefined?row.deviceType:deviceTypes[row.deviceType].name)}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.deviceStatus}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.gateName}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.gateType===null?null: (gateTypes[row.gateType]===undefined? row.gateType: gateTypes[row.gateType].name)}\r\n                  </TableCell>\r\n                  {/* <TableCell className=\"padding-0\" align=\"right\">\r\n                    <IconButton onClick={() => {\r\n                        // setCurID(row.recordID);\r\n                        // toggleModal(\"edit\");\r\n                    }}>\r\n                      <OpenInNewIcon\r\n                        size={21}\r\n                        color=\"grey\"\r\n                      />\r\n                    </IconButton>\r\n                  </TableCell> */}\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={11}>\r\n                  No Records Found\r\n                </TableCell>\r\n              </TableRow>\r\n            }\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 50 * emptyRows }}>\r\n                  <TableCell colSpan={11} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          }\r\n          </Table>\r\n        </TableContainer>\r\n        <TableRow className=\"d-flex justify-content-center\">\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 50]}\r\n              colSpan={11}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n        </TableRow>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { DeviceHistory  };\r\n","import React, { useContext } from \"react\";\r\nimport { store } from \"./store.js\";\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport \"./styles.css\";\r\nimport \"./assets/scrollbar.css\";\r\nimport { NavBar, AlertGroup } from \"./components/index.js\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { Home, Login, Projects, EditProject, SpecialPlates, RegexPlates, Records, ParkRecords, ParkingRules, Whitelist, Units, DeviceHistory } from \"./pages/index.js\";\r\n\r\nclass DebugRouter extends Router {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"initial history is: \", JSON.stringify(this.history, null, 2));\r\n    this.history.listen((location, action) => {\r\n      console.log(\r\n        `The current URL is ${location.pathname}${location.search}${location.hash}`\r\n      );\r\n      console.log(\r\n        `The last navigation action was ${action}`,\r\n        JSON.stringify(this.history, null, 2)\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nexport function App() {\r\n  return (\r\n    // <DebugRouter>\r\n    <Router>\r\n      <Switch>\r\n        <PrivateRoute path=\"/home\">\r\n          <Home />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/project/:projectID\">\r\n          <EditProject />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/project\">\r\n          <Projects />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/specialPlates\">\r\n          <SpecialPlates />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/regexPlates\">\r\n          <RegexPlates />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/records\">\r\n          <Records />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/parking\">\r\n          <ParkRecords />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/accessRules\">\r\n          <ParkingRules />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/whitelist\">\r\n          <Whitelist />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/units\">\r\n          <Units />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/deviceHistory\">\r\n          <DeviceHistory />\r\n        </PrivateRoute>\r\n        <PublicRoute path=\"/\">\r\n          <Login />\r\n        </PublicRoute>\r\n      </Switch>\r\n    </Router>\r\n    // </DebugRouter>\r\n  );\r\n}\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  let auth = globalState.auth;\r\n  let toggled = globalState.toggled;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        auth ? (\r\n          <div className=\"h-100\">\r\n              <AlertGroup />\r\n            <NavBar />\r\n            <div id=\"content-body\" className={toggled?\"content-body-collapsed\":\"content-body-expand\"}>\r\n              {React.cloneElement(children, { params: props.match.params })}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction PublicRoute({ children, ...rest }) {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  let auth = globalState.auth;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        auth ? (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/home\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        ) : \r\n        <div className=\"h-100\">\r\n        <AlertGroup />\r\n          {children}\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { StateProvider } from \"./store.js\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StateProvider>\r\n    <StrictMode>\r\n      <App />\r\n    </StrictMode>\r\n  </StateProvider>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}