{"version":3,"sources":["store.js","components/NavBar.js","components/ConfirmModal.js","components/QueryModal.js","services/alertService.js","services/api.js","components/DeviceModal.js","components/GateModal.js","components/AlertGroup.js","components/TablePaginationActions.js","pages/Home.js","pages/Login.js","pages/Projects.js","pages/projectSubPages/ProjectForm.js","pages/projectSubPages/BusinessDetails.js","pages/projectSubPages/Devices.js","pages/projectSubPages/Gates.js","pages/projectSubPages/LedConfig.js","pages/EditProject.js","pages/PlateRegex.js","assets/closeGate.png","assets/openGate.jpg","pages/Records.js","pages/ParkRecords.js","pages/ParkingRules.js","App.js","index.js"],"names":["initialState","auth","user","server_URL","store","createContext","Provider","StateProvider","children","useReducer","state","action","type","value","Error","dispatch","NavBar","storeContext","useContext","useState","toggled","setToggled","history","useHistory","direct","path","console","log","push","className","Navbar","bg","variant","expand","Brand","onClick","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","data-value","href","Divider","Text","collapsed","iconShape","icon","ConfirmModal","props","toggleModal","success","hide","body","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","alertSubject","Subject","defaultId","alertService","onAlert","asObservable","pipe","filter","x","message","options","alert","alertType","error","info","warn","clear","next","returnFunc","response","a","json","data","ok","content","status","Promise","reject","getProjects","columns","requestOptions","method","headers","JSON","stringify","authID","serviceName","objName","fetch","then","getSpecialPlate","filters","addSpecialPlate","delSpecialPlate","matchPlate","updateSpecialPlate","modifyParams","delProject","ID","projectID","delGate","gateID","delDevice","deviceID","DeviceModal","newState","validated","setValidated","setState","dummy","useEffect","deviceName","deviceType","deviceCarpark","manufacturer","manufacturerCode","direction","isPrimaryDevice","getDeviceInfo","catch","handleChange","e","filler","e2","undefined","target","prevState","update","updateDeviceInfo","create","values","newDeviceReq","createDevice","Form","noValidate","onSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","Group","as","Row","Label","column","sm","Col","Control","placeholder","readOnly","required","name","onChange","Feedback","deviceStatus","Check","checked","GateModal","gateName","gateType","isChargeable","ledOnTime","ledOffTime","getGateInfo","updateGateInfo","newGateReq","createGate","custom","showSeconds","input","AlertGroup","alerts","this","subscription","subscribe","setTimeout","removeAlert","unsubscribe","length","map","idx","Alert","dismissible","onClose","React","Component","TablePaginationActions","count","page","rowsPerPage","onChangePage","style","flexShrink","right","IconButton","event","disabled","aria-label","Math","ceil","max","Home","Login","username","password","document","getElementById","innerText","Projects","match","initialRows","setInitialRows","rows","setRows","delete","add","toggle","setToggle","curID","setCurID","projectName","location","projectType","curState","setCurState","reload","modal","prevVal","curRows","row","toLowerCase","indexOf","insert","contactNumber","maCompany","equipManu","addProject","del","setPage","setRowsPerPage","emptyRows","min","Breadcrumb","active","inline","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","slice","scope","padding","size","color","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","label","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","ProjectForm","useParams","getProjectInfo","updateProjectInfo","country","isValid","span","offset","BusinessDetails","barrierDelay","networkWarningDuration","instantImgUpload","vehicleColorDetect","localImgStore","myFormat","num","InputGroup","strict","format","Devices","useLocation","pathname","edit","setModal","getDevice","index","Tooltip","Gates","getGate","String","LedConfig","trigger","voiceMsg","textMsg","Input","vals","EditProject","useRouteMatch","url","split","Tab","Container","xs","exact","to","PlateRegex","actualPlate","val","setVal","projects","setProjects","projectNames","setProjectNames","func","temp","forEach","element","list","handleChangeVal","centered","project","activateModal","Records","fieldPlaceholder","vehicleType","isOpened","originalPlate","confirmedPlate","detectionTime","confirmedTime","image1","image2","image3","plateImage","fields","fieldLength","fieldHeight","curField","startTime","endTime","getMovementLogs","concat","reset","queryField","field","src","openGate","closeGate","logID","ParkRecords","ParkingRules","Router","PrivateRoute","rest","render","cloneElement","params","from","PublicRoute","App","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.5b1e3595.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  auth: true,\r\n  user: \"\",\r\n  server_URL: \"http://34.87.50.188:8000/api/router\"\r\n};\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"setAuth\":\r\n        return {\r\n          ...state,\r\n          auth: action.value\r\n        };\r\n      case \"setUser\":\r\n        return {\r\n          ...state,\r\n          user: action.value\r\n        };\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { store, StateProvider };\r\n","import {\r\n  SidebarContent,\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SubMenu\r\n} from \"react-pro-sidebar\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport { List } from \"react-bootstrap-icons\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { store } from \"../store.js\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalParkingIcon from '@material-ui/icons/LocalParking';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\n\r\nexport function NavBar() {\r\n  const storeContext = useContext(store);\r\n  const [toggled, setToggled] = useState(true);\r\n  const { dispatch } = storeContext;\r\n  let history = useHistory();\r\n  const logout = () => {\r\n    dispatch({\r\n      type: \"setAuth\",\r\n      value: false\r\n    });\r\n    dispatch({\r\n      type: \"setUser\",\r\n      value: \"\"\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n  const direct = (path) => {\r\n    console.log(\"clicked\", path);\r\n    setToggled(true);\r\n    history.push(path);\r\n  };\r\n  const toggleSideBar = () => {\r\n    setToggled(!toggled);\r\n  };\r\n  return (\r\n    <div className=\"h-100 fixed-top clickThrough\">\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"clickAble\">\r\n        <Navbar.Brand className=\"d-none d-sm-block\" onClick={toggleSideBar}>\r\n          <List />\r\n        </Navbar.Brand>\r\n        <Navbar.Brand>Admin</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto d-sm-block d-md-none\">\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/project\")}>\r\n                Project\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n                Log Records\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </Nav.Link>\r\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item data-value=\"/home\" onClick={direct}>\r\n                Action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Navbar.Text>\r\n            <Nav.Link onClick={logout}>Signout</Nav.Link>\r\n          </Navbar.Text>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <ProSidebar\r\n        className=\"clickAble d-none d-sm-block navbar-default navbar-static-top\"\r\n        collapsed={toggled}\r\n        //collapsedWidth=\"px\"\r\n      >\r\n        <SidebarContent>\r\n          <Menu iconShape=\"circle\">\r\n            <MenuItem icon={<HomeIcon onClick={()=>direct(\"/home\")}/>}>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<InfoIcon onClick={()=>direct(\"/project\")} />}>\r\n              <div onClick={()=>direct(\"/projet\")}>\r\n                Project\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<CodeIcon onClick={()=>direct(\"/regex\")} />}>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<StorageIcon onClick={()=>direct(\"/records\")} />}>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n                Exit/Entry Records\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<LocalParkingIcon onClick={()=>direct(\"/parking\")} />}>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </MenuItem>\r\n            <SubMenu title=\"Access\" icon={<PaymentIcon/>}>\r\n              <MenuItem  onClick={()=>direct(\"/accessRules\")} >Access Rules</MenuItem>\r\n              <MenuItem>Tracking</MenuItem>\r\n            </SubMenu>\r\n          </Menu>\r\n        </SidebarContent>\r\n      </ProSidebar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { NavBar };\r\n","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nexport function ConfirmModal(props) {\r\n  let toggleModal = props.toggleModal;\r\n  let success = props.success;\r\n  let hide = props.hide;\r\n  let body = props.body;\r\n  let title = props.title;\r\n  return (\r\n    <Modal show={hide} onHide={toggleModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{body}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={toggleModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={()=>{\r\n          success();\r\n        }}>\r\n          Confirm\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { ConfirmModal};\r\n","import { Button, Modal, Form } from \"react-bootstrap\";\r\nimport {useState} from 'react';\r\n\r\nexport function QueryModal(props) {\r\n    let toggleModal = props.toggleModal;\r\n    let success = props.success;\r\n    let hide = props.hide;\r\n    let body = props.body;\r\n    let title = props.title;\r\n    const [value,setValue] = useState(\"\");\r\n    const handleChange = (e) =>{\r\n      setValue(e.target.value);\r\n    }\r\n    const exit = () =>{\r\n      setValue(\"\");\r\n      toggleModal();\r\n    }\r\n    return (\r\n      <Modal show={hide} onHide={exit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Label>{body}</Form.Label>\r\n            <Form.Control \r\n            value={value}\r\n            onChange={handleChange}\r\n            />\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={exit}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>{\r\n              success(value);\r\n              exit();\r\n              }}>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default {QueryModal};","import { Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nconst alertSubject = new Subject();\r\nconst defaultId = 'default-alert';\r\n\r\nexport const alertService = {\r\n    onAlert,\r\n    success,\r\n    error,\r\n    info,\r\n    warn,\r\n    alert,\r\n    clear\r\n};\r\n\r\nexport const alertType = {\r\n    success: 'success',\r\n    error: 'danger',\r\n    info: 'info',\r\n    warning: 'warning'\r\n}\r\n\r\n// enable subscribing to alerts observable\r\nfunction onAlert(id = defaultId) {\r\n    return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\r\n}\r\n\r\n// convenience methods\r\nfunction success(message, options) {\r\n    alert({ ...options, type: alertType.success, message });\r\n}\r\n\r\nfunction error(message, options) {\r\n    alert({ ...options, type: alertType.error, message });\r\n}\r\n\r\nfunction info(message, options) {\r\n    alert({ ...options, type: alertType.info, message });\r\n}\r\n\r\nfunction warn(message, options) {\r\n    alert({ ...options, type: alertType.warning, message });\r\n}\r\n\r\n// core alert method\r\nfunction alert(alert) {\r\n    alert.id = alert.id || defaultId;\r\n    alertSubject.next(alert);\r\n}\r\n\r\n// clear alerts\r\nfunction clear(id = defaultId) {\r\n    alertSubject.next({ id });\r\n}","import { alertService } from './index.js';\r\n\r\nconst server_URL = \"http://34.87.50.188:8000/api/router\";\r\n\r\nconst returnFunc = async (response) => {\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.content) || response.status;\r\n        return Promise.reject(error);\r\n    }\r\n    return data;\r\n}\r\n\r\nconst getProjects = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"project\",\r\n            columns\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getMovementLogs = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"movementLog\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getSpecialPlate = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"specialPlate\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createSpecialPlate\",\r\n          content: state\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delSpecialPlate = (matchPlate) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteSpecialPlate\",\r\n            content: {\r\n                matchPlate\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifySpecialPlate\",\r\n            content: {\r\n            matchPlate: state.matchPlate,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addProject = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createProject\",\r\n          content: {\r\n            projectName: \"\",\r\n            projectType: \"\",\r\n            location: \"\",\r\n            contactNumber: \"\",\r\n            maCompany: \"\",\r\n            equipManu: \"\"\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGate = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getTable\",\r\n            content: {\r\n            objName: \"gate\",\r\n            columns,\r\n            filters:{\r\n                projectID: ID\r\n            }\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDevice = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"device\",\r\n            columns,\r\n            filters:{\r\n              gateID: ID\r\n            }\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createGate = (projectID,values) =>{\r\n    const newGateReq = {\r\n        ...values,\r\n        projectID\r\n    };\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createGate\",\r\n            content: newGateReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createDevice = (gateID, values) =>{\r\n    const newDeviceReq = {\r\n        ...values,\r\n        gateID\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createDevice\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getProjectInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getProject\",\r\n            content: {\r\n            projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delProject = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteProject\",\r\n            content: {\r\n                projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateProjectInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyProject\",\r\n            content: {\r\n            projectID: ID,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getBusinessInfo = (ID) =>{\r\n    //Pending Function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateBusinessInfo = (ID, state) =>{\r\n    //Pending function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGateInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delGate = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateGateInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyGate\",\r\n            content: {\r\n                gateID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDeviceInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delDevice = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateDeviceInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyDevice\",\r\n            content: {\r\n                deviceID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nexport {\r\n    getGate,\r\n    getDevice,\r\n    createGate,\r\n    createDevice,\r\n    getProjectInfo,\r\n    updateProjectInfo,\r\n    getBusinessInfo,\r\n    updateBusinessInfo,\r\n    getGateInfo,\r\n    updateGateInfo,\r\n    getDeviceInfo,\r\n    updateDeviceInfo,\r\n    getProjects,\r\n    addProject,\r\n    delProject,\r\n    delGate,\r\n    delDevice,\r\n    getMovementLogs,\r\n    getSpecialPlate,\r\n    delSpecialPlate,\r\n    updateSpecialPlate,\r\n    addSpecialPlate\r\n};","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport { alertService, createDevice, getDeviceInfo, updateDeviceInfo } from '../services/index.js';\r\n\r\nexport function DeviceModal(props) {\r\n    let {hide, gateID, toggleModal, success, newState, deviceID } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    if(newState){\r\n      setState({\r\n        gateID,\r\n        deviceID: \"\",\r\n        deviceName: \"\",\r\n        deviceType: \"\",\r\n        deviceCarpark: \"\",\r\n        manufacturer: \"\",\r\n        manufacturerCode: \"\",\r\n        direction: \"\",\r\n        isPrimaryDevice: false\r\n      });\r\n    }else{\r\n      getDeviceInfo(deviceID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gate, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy,newState,gateID]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(newState) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateDeviceInfo(deviceID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createDevice(gateID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Device, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{newState?\"Add Device\":\"Edit Device\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id =\"deviceModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate ID\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={state.gateID} readOnly />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device ID\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >{newState?\r\n                        <div><Form.Control\r\n                        required\r\n                        placeholder=\"ID\"\r\n                        id=\"deviceID\"\r\n                        name=\"deviceID\"\r\n                        value={state.deviceID}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device ID is a required field.\r\n                        </Form.Control.Feedback></div>:<Form.Control type=\"text\" placeholder={state.deviceID} readOnly />}\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"deviceName\"\r\n                        name=\"deviceName\"\r\n                        value={state.deviceName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Type\"\r\n                        id=\"deviceType\"\r\n                        name=\"deviceType\"\r\n                        value={state.deviceType}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Carpark which the device belongs to\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Carpark\"\r\n                        id=\"deviceCarpark\"\r\n                        name=\"deviceCarpark\"\r\n                        value={state.deviceCarpark}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Capark is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n                    {newState?null:\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Status\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={state.deviceStatus} readOnly />\r\n                    </Col>\r\n                    </Form.Group>}\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Manufacturer\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer\"\r\n                        id=\"manufacturer\"\r\n                        name=\"manufacturer\"\r\n                        value={state.manufacturer}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Manufacturer Code\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer Code\"\r\n                        id=\"manufacturerCode\"\r\n                        name=\"manufacturerCode\"\r\n                        value={state.manufacturerCode}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer Code is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Direction\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Direction\"\r\n                        id=\"direction\"\r\n                        name=\"direction\"\r\n                        value={state.direction}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Direction is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Is Primary Device\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isPrimaryDevice}\r\n                        type=\"switch\"\r\n                        id=\"isPrimaryDevice\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"deviceModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { DeviceModal };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport TimeField from 'react-simple-timefield';\r\nimport { alertService, createGate, getGateInfo, updateGateInfo } from '../services/index.js';\r\n\r\nexport function GateModal(props) {\r\n    let {hide, gateID, toggleModal, success, newState, projectID } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    console.log(\"gateModal\", gateID, projectID, newState);\r\n    if(newState){\r\n      setState({\r\n        gateName: \"\",\r\n        gateType: \"\",\r\n  //      isOpenForInvalid: false,\r\n  //      isOpenForTemp: false,\r\n        isChargeable: false,\r\n        ledOnTime: \"00:00:00\",\r\n        ledOffTime: \"00:00:00\"\r\n      });\r\n    }else{\r\n      getGateInfo(gateID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gate, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy,newState,gateID]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(newState) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateGateInfo(gateID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createGate(projectID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Gate, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n      setValidated(false);\r\n      toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{newState?\"Add Gate\":\"Edit Gate\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id='gateModal' noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"gateName\"\r\n                        name=\"gateName\"\r\n                        value={state.gateName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"gateType\"\r\n                        name=\"gateType\"\r\n                        value={state.gateType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        <option>entry</option>\r\n                        <option>exit</option>\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n{/*\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Open Gate for invalid/expired season pass holders\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isOpenForInvalid}\r\n                        type=\"switch\"\r\n                        id=\"isOpenForInvalid\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Open Gate for temporary vehicles\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isOpenForTemp}\r\n                        type=\"switch\"\r\n                        id=\"isOpenForTemp\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n*/}\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Charge fee for entry\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                    Time to turn on the LPR camera’s LED\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex\"\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOnTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOnTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOnTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Time to turn off the LPR\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        className=\"align-items-center d-flex\"\r\n                        sm={6}\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOffTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOffTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOffTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"gateModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { GateModal };\r\n","import React from 'react';\r\n\r\nimport { alertService, alertType } from '../services/index.js';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nexport class AlertGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            alerts: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // subscribe to new alert notifications\r\n        this.subscription = alertService.onAlert(this.props.id)\r\n            .subscribe(alert => {\r\n                // add alert to array\r\n                this.setState({ alerts: [...this.state.alerts, alert] });\r\n\r\n                // auto close alert if required\r\n                setTimeout(() => this.removeAlert(alert), 3000);\r\n            });\r\n\r\n        // clear alerts on location change\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // unsubscribe & unlisten to avoid memory leaks\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert) {\r\n        this.setState({ alerts: this.state.alerts.filter(x => x !== alert) })\r\n    }\r\n\r\n    render() {\r\n        const { alerts } = this.state;\r\n        if (!alerts.length) return null;\r\n        return (\r\n            <div className=\"alertGrp\">\r\n                {console.log(alerts),\r\n                alerts.map((alert,idx) =>\r\n                    <Alert \r\n                    key = {idx} \r\n                    variant={alert.type}\r\n                    dismissible = {true}\r\n                    onClose={()=>{this.removeAlert(alert)}}>\r\n                        {alert.message}\r\n                    </Alert>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default {AlertGroup} ;","import {IconButton} from '@material-ui/core';\r\n\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nexport function TablePaginationActions(props) {\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div style={{flexShrink:0, right:0}}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        <FirstPageIcon />\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n         <KeyboardArrowLeft />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        <KeyboardArrowRight />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        <LastPageIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default {TablePaginationActions};","import React, { useState, useContext } from \"react\";\r\nimport { store } from \"../store.js\";\r\nexport function Home() {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  const { dispatch } = storeContext;\r\n  return <div>Home</div>;\r\n}\r\n\r\nexport default { Home };\r\n","import React, { useState, useContext } from \"react\";\r\nimport { store } from \"../store.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport function Login() {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  const { dispatch } = storeContext;\r\n  let history = useHistory();\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n  const reqLogin = (e) => {\r\n    e.preventDefault();\r\n    let { username, password } = state;\r\n    /*\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    };\r\n    \r\n    fetch(server_URL + \"/login\", requestOptions)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n  \r\n      // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      }\r\n  \r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      return(\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/home\"\r\n          }}\r\n        />\r\n      );\r\n    })\r\n    .catch((error) => {\r\n      this.setState({ errorMessage: error.toString() });\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    if (username === \"huajun\" && password === \"huajun\") {\r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      dispatch({\r\n        type: \"setUser\",\r\n        value: username\r\n      });\r\n      history.push(\"/home\");\r\n    } else if (username.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Username cannot be blank\";\r\n    } else if (password.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Password cannot be blank\";\r\n    } else {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Invalid Username or Password\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"maincontainer h-100\">\r\n      <div className=\"container-fluid bg-light h-100\">\r\n        <div className=\"login d-flex align-items-center py-5\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-10 col-sm-6 col-md-5 col-xl-4 mx-auto \">\r\n                <h3 className=\"display-4\">Login</h3>\r\n                <p className=\"text-muted mb-4\">\r\n                  Enter your credentials to login.\r\n                </p>\r\n                <form>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"username\"\r\n                      type=\"username\"\r\n                      placeholder=\"Username\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4\"\r\n                      onChange={handleChange}\r\n                      value={state.username}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\r\n                      onChange={handleChange}\r\n                      value={state.password}\r\n                    />\r\n                  </div>\r\n                  <p id=\"login-error\" className=\"text-danger\"></p>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block text-uppercase mb-2 rounded-pill shadow-sm\"\r\n                    onClick={reqLogin}\r\n                  >\r\n                    Sign in\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Login };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, addProject, delProject, alertService } from '../services/index.js';\r\n\r\nexport function Projects({ match }) {\r\n  let history = useHistory();\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false\r\n  });\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n    setCurState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n  }\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (projectID) => {\r\n    setCurID(projectID);\r\n    toggleModal(\"delete\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectName, location, projectType } = curState;\r\n    let curRows = initialRows;\r\n    console.log(curRows);\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[\"projectName\"].toLowerCase().indexOf(projectName.toLowerCase()) >= 0 &&\r\n          row[\"location\"].toLowerCase().indexOf(location.toLowerCase()) >= 0 &&\r\n          row[\"projectType\"].toLowerCase().indexOf(projectType.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const insert = (e) => {\r\n    addProject()\r\n      .then(async (data) => {\r\n        let ID = data.message.projectID;\r\n        history.push(\"/project/\" + ID);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  const edit = (projectID) => {\r\n    history.push(\"/project/\" + projectID);\r\n  };\r\n\r\n  const del = async (projectID) => {\r\n    delProject(projectID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Project Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this project?\"\r\n      />\r\n      <ConfirmModal\r\n        hide={toggle.add}\r\n        success={() => {\r\n          insert();\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"add\");\r\n        }}\r\n        title=\"Confirm Addition\"\r\n        body=\"Add a new project?\"\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Projects</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectName\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectName}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"location\"\r\n                placeholder=\"Location\"\r\n                onChange={handleChange}\r\n                value={state.location}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectType\"\r\n                placeholder=\"Type\"\r\n                onChange={handleChange}\r\n                value={state.projectType}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content greyBackground\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Project</TableCell>\r\n                <TableCell align=\"left\">Location</TableCell>\r\n                <TableCell align=\"left\">Type</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.projectName}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.location}</TableCell>\r\n                  <TableCell align=\"left\">{row.projectType}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => edit(row.projectID)}>\r\n                      <PencilSquare\r\n                        data-value={row.projectID}\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => activateModal(row.projectID)}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Projects };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { alertService, getProjectInfo, updateProjectInfo } from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function ProjectForm() {\r\n  let { projectID }= useParams();\r\n  const [validated, setValidated] = useState(false);\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    projectType: \"\",\r\n    location: \"\",\r\n    contactNumber: \"\",\r\n    maCompany: \"\",\r\n    equipManu: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()) update();\r\n  };\r\n\r\n  const update = () => {\r\n    updateProjectInfo(projectID, state)\r\n      .then(async (data) => {\r\n        alertService.success('Update Successful!');\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Project Info</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project ID\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control type=\"text\" placeholder={projectID} readOnly />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project Name\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              placeholder=\"Name\"\r\n              id=\"projectName\"\r\n              name=\"projectName\"\r\n              value={state.projectName}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Name is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project Type\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              custom\r\n              required\r\n              as=\"select\"\r\n              id=\"projectType\"\r\n              name=\"projectType\"\r\n              value={state.projectType}\r\n              onChange={handleChange}\r\n            >\r\n              <option value={\"\"}>--Select Type--</option>\r\n              <option>condo</option>\r\n              <option>hdb</option>\r\n            </Form.Control>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Type is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Location\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"location\"\r\n              name=\"location\"\r\n              value={state.location}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Location is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Equipment Manufacturer\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"equipManu\"\r\n              name=\"equipManu\"\r\n              value={state.equipManu}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Equipment Manufacturer is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            MA Company\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"maCompany\"\r\n              name=\"maCompany\"\r\n              value={state.maCompany}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              MA Company is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Contact No.\r\n          </Form.Label>\r\n          <Form.Label\r\n            column\r\n            sm={4}\r\n          >\r\n            <PhoneInput\r\n              inputProps={{\r\n                required: true\r\n              }}\r\n              placeholder=\"+XX-XXXX-XXXX\"\r\n              id=\"contactNumber\"\r\n              name=\"contactNumber\"\r\n              country={\"sg\"}\r\n              value={state.contactNumber}\r\n              onChange={(e)=>{\r\n                setState((prevState) => ({\r\n                  ...prevState,\r\n                  [\"contactNumber\"]: e\r\n                }));\r\n              }}\r\n              isValid={(value, country) => {\r\n                if (value.length === 0) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              }}\r\n            />\r\n          </Form.Label>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col sm={{ span: 8, offset: 7 }}>\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ProjectForm };\r\n","import { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, InputGroup, Breadcrumb } from \"react-bootstrap\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport { alertService, getBusinessInfo, updateBusinessInfo } from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function BusinessDetails(props) {\r\n  let {projectID} = useParams();\r\n  const [state, setState] = useState({\r\n    barrierDelay: 5,\r\n    networkWarningDuration: 5,\r\n    instantImgUpload: false,\r\n    vehicleColorDetect: false,\r\n    localImgStore: false\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    /*   \r\n    getBusinessInfo(projectID)\r\n    .then(async (data) => {\r\n      setState(data.message)\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    let res = {\r\n      barrierDelay: 5,\r\n      networkWarningDuration: 5,\r\n      instantImgUpload: false,\r\n      vehicleColorDetect: false,\r\n      localImgStore: false\r\n    };\r\n    setState(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    update();\r\n  };\r\n\r\n  const update = () => {\r\n    /* Pending API for project details update*/\r\n  };\r\n\r\n  function myFormat(num) {\r\n    return num + \" mins\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Business Details</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Barrier Opening Delay\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"barrierDelay\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.barrierDelay}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Duration before issuing network down warning\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"networkWarningDuration\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.networkWarningDuration}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Instant Image Upload to Server\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.instantImgUpload}\r\n              type=\"switch\"\r\n              id=\"instantImgUpload\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Local Storage of images after uploading\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.localImgStore}\r\n              type=\"switch\"\r\n              id=\"localImgStore\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Vehicle Colour Detection\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.vehicleColorDetect}\r\n              type=\"switch\"\r\n              id=\"vehicleColorDetect\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col sm={{ span: 8, offset: 7 }}>\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { BusinessDetails };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, DeviceModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getDevice, alertService, delDevice} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport SignalCellularConnectedNoInternet0BarIcon from '@material-ui/icons/SignalCellularConnectedNoInternet0Bar';\r\n\r\nexport function Devices (){\r\n    let { projectID, gateID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getDevice(gateID, [\"deviceID\", \"deviceName\", \"deviceType\", \"deviceStatus\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Device, there was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (deviceID) => {\r\n    delDevice(deviceID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Device Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this device?\"\r\n      />\r\n      <DeviceModal\r\n        hide={toggle.edit}\r\n        deviceID = {curID}\r\n        newState = {modal}\r\n        gateID = {gateID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item href={\"/project/\"+projectID+\"/gate\"}>Gates</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Devices</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    setModal(true);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"center\"><b>Status</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceName}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceType}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceStatus?\r\n                  <SignalCellularAltIcon style={{ color: \"#4caf50\" }}/>:<SignalCellularConnectedNoInternet0BarIcon style={{ color: \"#f44336\" }}/>\r\n                  }</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        setModal(false);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"gold\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Devices };","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, GateModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getGate, alertService, delGate} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\n\r\nexport function Gates (){\r\n    let { projectID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getGate(projectID, [\"gateID\", \"gateName\", \"gateType\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const devices = (gateID) => {\r\n    history.push(pathname +\"/\"+ String(gateID));\r\n  };\r\n\r\n  const del = async (gateID) => {\r\n    delGate(gateID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Gate Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this gate?\"\r\n      />\r\n      <GateModal\r\n        hide={toggle.edit}\r\n        gateID = {curID}\r\n        newState = {modal}\r\n        projectID = {projectID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Gates</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    setModal(true);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.gateID}</TableCell>\r\n                  <TableCell align=\"center\">{row.gateName}</TableCell>\r\n                  <TableCell align=\"center\">{row.gateType}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Devices\">\r\n                    <IconButton onClick={() => {\r\n                        devices(row.gateID);\r\n                    }}>\r\n                      <Cpu\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        setModal(false);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"gold\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Gates };","import React, { useState, useEffect } from \"react\";\r\nimport { Breadcrumb } from \"react-bootstrap\";\r\nimport {Input , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { TablePaginationActions } from \"../../components/index.js\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport { PencilSquare } from \"react-bootstrap-icons\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport function LedConfig(props) {\r\n  let {projectID} = useParams();\r\n  const [rows, setRows] = useState([]);\r\n  const [curID, setCurID] = useState(null);\r\n  const [state, setState] = useState({\r\n    trigger: \"\",\r\n    voiceMsg: \"\",\r\n    textMsg: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    /*getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setInitialRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n  }\r\n  useEffect(() => {\r\n    //reload();\r\n    let res = [\r\n        {\r\n            id: 1,\r\n            trigger: \"Trigger 1\",\r\n            voiceMsg: \"Sample 1\",\r\n            textMsg: \"Sample 01\"\r\n        },\r\n        {\r\n            id: 2,\r\n            trigger: \"Trigger 2\",\r\n            voiceMsg: \"Sample 2\",\r\n            textMsg: \"Sample 02\"\r\n        },\r\n        {\r\n            id: 3,\r\n            trigger: \"Trigger 3\",\r\n            voiceMsg: \"Sample 3\",\r\n            textMsg: \"Sample 03\"\r\n        },\r\n        {\r\n            id: 4,\r\n            trigger: \"Trigger 4\",\r\n            voiceMsg: \"Sample 4\",\r\n            textMsg: \"Sample 04\"\r\n        },\r\n        {\r\n            id: 5,\r\n            trigger: \"Trigger 5\",\r\n            voiceMsg: \"Sample 5\",\r\n            textMsg: \"Sample 05\"\r\n        },\r\n        {\r\n            id: 6,\r\n            trigger: \"Trigger 6\",\r\n            voiceMsg: \"Sample 6\",\r\n            textMsg: \"Sample 06\"\r\n        }\r\n    ];\r\n    setRows(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const save = () =>{\r\n    // API\r\n    //reload();\r\n  }\r\n\r\n  const edit = (vals) =>{\r\n    const {id, trigger, voiceMsg, textMsg} = vals;\r\n    setState({\r\n        trigger, \r\n        voiceMsg, \r\n        textMsg});\r\n    setCurID(id);\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setCurID(null);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>LED Configuration</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Trigger</TableCell>\r\n                <TableCell align=\"center\">Voice Message</TableCell>\r\n                <TableCell align=\"center\">Text Message</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.trigger}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"voiceMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.voiceMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.voiceMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"textMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.textMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.textMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"right\"  style={{padding:0}}>\r\n                    {curID === null?\r\n                        (<IconButton onClick={() => edit(row)}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            color=\"royalblue\"\r\n                            />\r\n                        </IconButton>)\r\n                        :(\r\n                        curID === row.id?\r\n                        <div>\r\n                            <IconButton onClick={() => save()}>\r\n                                <SaveIcon\r\n                                size={21}\r\n                                color=\"primary\"\r\n                                />\r\n                            </IconButton>\r\n                            <IconButton onClick={() => setCurID(null)}>\r\n                                <CloseIcon\r\n                                size={21}\r\n                                color=\"error\"\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                        :\r\n                        (<IconButton disabled = {true}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            />\r\n                        </IconButton>)\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { LedConfig };\r\n","import {\r\n  ProjectForm,\r\n  BusinessDetails,\r\n  Devices,\r\n  LedConfig,\r\n  Gates\r\n} from \"./projectSubPages/index.js\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport {Nav, Tab} from \"react-bootstrap\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nexport function EditProject(props) {\r\n  let history = useHistory();\r\n  let { path, url } = useRouteMatch();\r\n  let {pathname} = useLocation();\r\n  let page = pathname.split('/')[3];\r\n  const direct = (path) =>{\r\n    history.push(url+path);\r\n  }\r\n  return (\r\n    <div className=\"tabModal\">\r\n      <Tab.Container id=\"left-tabs-example\">\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/info\")}} active = {page===\"info\"}>Infomation</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/business\")}} active = {page===\"business\"}>Business</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/gate\")}} active = {page===\"gate\"}>Gates</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/ledconfig\")}} active = {page===\"ledconfig\"}>LED Config</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n          <Switch>\r\n            <Route exact path={`${path}/info`}>\r\n              <ProjectForm />\r\n            </Route>\r\n            <Route exact path={`${path}/business`}>\r\n              <BusinessDetails />\r\n            </Route>\r\n            <Route exact path={`${path}/gate/:gateID`}>\r\n              <Devices />\r\n            </Route>\r\n            <Route exact path={`${path}/gate`}>\r\n              <Gates />\r\n            </Route>\r\n            <Route exact path={`${path}/ledconfig`}>\r\n              <LedConfig />\r\n            </Route>\r\n            <Route path={path}>\r\n              <Redirect to={`${url}/info`} />\r\n            </Route>\r\n          </Switch>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { EditProject };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Modal } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, \r\n  getSpecialPlate,\r\n  delSpecialPlate,\r\n  updateSpecialPlate,\r\n  addSpecialPlate } from '../services/index.js';\r\n\r\nexport function PlateRegex({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false,\r\n    edit: false\r\n  });\r\n  const [state, setState] = useState({\r\n    projectID: null,\r\n    actualPlate: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectID: null,\r\n    actualPlate: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectID: null,\r\n      actualPlate: \"\"\r\n    });\r\n    setCurState({\r\n      projectID: null,\r\n      actualPlate: \"\"\r\n    });\r\n  }\r\n  const [val, setVal] = useState({\r\n    projectID: null,\r\n    matchPlate: \"\",\r\n    actualPlate: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const reload = () =>{\r\n    getSpecialPlate([\"projectID\", \"matchPlate\", \"actualPlate\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  const func = async (val) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element.projectID] = element.projectName;\r\n    });\r\n    return await temp;\r\n  };\r\n  useEffect(() => {\r\n    getProjects([\"projectID\", \"projectName\"])\r\n    .then(async (data) => {\r\n      setProjects(data.content);\r\n      func(data.content).then(async(list)=>{\r\n        setProjectNames(await list);\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },projectNames);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleChangeVal = (e) =>{\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setVal((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (values) => {\r\n    let {projectID, matchPlate, actualPlate} = values;\r\n    setValidated(false);\r\n    setVal({\r\n        projectID,\r\n        matchPlate,\r\n        actualPlate\r\n      });\r\n    toggleModal(\"edit\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectID, actualPlate } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          (projectID === null || row[\"projectID\"] === projectID) &&\r\n          row[\"actualPlate\"].toLowerCase().indexOf(actualPlate.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const insert = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n      addSpecialPlate(val)\r\n      .then(async (data) => {\r\n        reload();\r\n        toggleModal(\"add\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const edit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n        updateSpecialPlate(val)\r\n        .then(async (data) => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const del = (id) => {\r\n    delSpecialPlate(id)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this regex?\"\r\n      />\r\n      <Modal show={toggle.add} onHide={()=>toggleModal(\"add\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={insert}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={5}>\r\n            Project Name\r\n          </Form.Label>\r\n          <Col sm={6}>\r\n              <Form.Control\r\n                custom\r\n                required\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChangeVal}\r\n                value={val.projectID}\r\n              >\r\n                  <option value={null}>--Select a Project--</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Project Name is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n        </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"add\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    <Modal show={toggle.edit} onHide={()=>toggleModal(\"edit\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={edit}>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"edit\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Plate Regex</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectID}\r\n              >\r\n                  <option value={null}>All Projects</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"actualPlate\"\r\n                placeholder=\"Actual Plate\"\r\n                onChange={handleChange}\r\n                value={state.actualPlate}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                setVal({\r\n                    projectID: \"\",\r\n                    matchPlate: \"\",\r\n                    actualPlate: \"\"\r\n                    });\r\n                  setValidated(false);\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content greyBackground\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Project</TableCell>\r\n                <TableCell align=\"center\">Regex of Plate</TableCell>\r\n                <TableCell align=\"center\">Actual Plate</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.matchPlate}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {projectNames[row.projectID]}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.matchPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.actualPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {activateModal(row)}}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.matchPlate);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { PlateRegex };\r\n","export default __webpack_public_path__ + \"static/media/closeGate.4cf57ce2.png\";","export default __webpack_public_path__ + \"static/media/openGate.46e4da23.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { TablePaginationActions } from \"../components/index.js\";\r\nimport {getMovementLogs } from '../services/index.js';\r\nimport closeGate from '../assets/closeGate.png';\r\nimport openGate from '../assets/openGate.jpg';\r\n\r\nexport function Records({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n  const  queryFields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\"\r\n  ];\r\n  const fieldPlaceholder = {\r\n    projectName: \"Project Name\",\r\n    vehicleType: \"Vehicle Type\",\r\n    isOpened: \"Is Opened\",\r\n    gateName: \"Gate Name\",\r\n    gateType: \"Gate Type\",\r\n    originalPlate: \"Original Plate\",\r\n    confirmedPlate: \"Actual Plate\",\r\n    detectionTime: \"Detection Time\",\r\n    confirmedTime: \"Confirmed Time\",\r\n    image1: \"Image 1\",\r\n    image2: \"Image 2\",\r\n    image3: \"Image 3\",\r\n    plateImage: \"Plate Image\"\r\n  };\r\n  const fields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"isOpened\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"detectionTime\",\r\n    \"confirmedTime\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\",\r\n    \"image1\",\r\n    \"image2\",\r\n    \"image3\",\r\n    \"plateImage\"\r\n  ];\r\n  const fieldLength = {\r\n    projectName: \"120px\",\r\n    vehicleType: \"120px\",\r\n    isOpened: \"120px\",\r\n    gateName: \"120px\",\r\n    gateType: \"120px\",\r\n    originalPlate: \"120px\",\r\n    confirmedPlate: \"120px\",\r\n    detectionTime: \"230px\",\r\n    confirmedTime: \"230px\",\r\n    image1: \"90px\",\r\n    image2: \"90px\",\r\n    image3: \"90px\",\r\n    plateImage: \"90px\"\r\n  };\r\n  const fieldHeight = {\r\n    image1: \"50px\",\r\n    image2: \"50px\",\r\n    image3: \"50px\",\r\n    plateImage: \"50px\",\r\n    isOpened: \"30px\"\r\n  }\r\n  const [state, setState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\",\r\n    startTime: \"\",\r\n    endTime: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\",\r\n    startTime: \"\",\r\n    endTime: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const reload = () =>{\r\n    getMovementLogs(fields.concat(\"logID\"), [])\r\n      .then(async (data) => {\r\n        console.log(data.content.slice(0,6));\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    if(id===\"curField\"){\r\n      setState({\r\n        curField: value,\r\n        val: \"\"\r\n      });\r\n    }else{\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { curField, val } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[curField].toLowerCase().indexOf(val.toLowerCase()) >= 0 \r\n      )\r\n    );\r\n  };\r\n  \r\n  const reset = async (e) =>{\r\n    setState({\r\n      curField: \"projectName\",\r\n      val: \"\"\r\n    });\r\n    setCurState({\r\n      curField: \"projectName\",\r\n      val: \"\"\r\n    });\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Entry Exit Records</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"curField\"\r\n                onChange={handleChange}\r\n                value={state.curField}\r\n              >\r\n                  {queryFields.map((queryField)=>(\r\n                      <option value={queryField}>{fieldPlaceholder[queryField]}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"val\"\r\n                placeholder={fieldPlaceholder[state.curField]}\r\n                onChange={handleChange}\r\n                value={state.val}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content greyBackground\">\r\n        <TableContainer component={Paper} className=\"overflowTable\">\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {fields.map((field) =>(\r\n                  <TableCell align=\"center\" style={{\"min-width\":fieldLength[field]}}>{fieldPlaceholder[field]}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.logID}>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.vehicleType}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.isOpened === true?\r\n                    <img style={{\"height\":fieldHeight.isOpened}} src={openGate} className=\"success-transform\"/>:\r\n                    <img style={{\"height\":fieldHeight.isOpened}} src={closeGate} className=\"danger-transform\"/>}\r\n            </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.gateName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.gateType}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.detectionTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.confirmedTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.originalPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.confirmedPlate===null?null:\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.confirmedPlate}</u>\r\n                      </div>\r\n                    </div>}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img style={{\"height\":fieldHeight.image1}} src={row.image1}/>\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img style={{\"height\":fieldHeight.image2}} src={row.image2} />\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img style={{\"height\":fieldHeight.image3}} src={row.image3} />\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img style={{\"height\":fieldHeight.plateImage}} src={row.plateImage} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TableRow className=\"d-flex justify-content-center\">\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 50]}\r\n              colSpan={13}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n        </TableRow>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Records };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport function ParkRecords({ match }) {\r\n  return (<div className=\"d-flex justify-content-center\"><h1>Pending API</h1></div>);\r\n}\r\n\r\nexport default { ParkRecords };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Modal } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, \r\n  getSpecialPlate,\r\n  delSpecialPlate,\r\n  updateSpecialPlate,\r\n  addSpecialPlate } from '../services/index.js';\r\n\r\nexport function ParkingRules({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false,\r\n    edit: false\r\n  });\r\n  const [state, setState] = useState({\r\n    projectID: null,\r\n    actualPlate: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectID: null,\r\n    actualPlate: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectID: null,\r\n      actualPlate: \"\"\r\n    });\r\n    setCurState({\r\n      projectID: null,\r\n      actualPlate: \"\"\r\n    });\r\n  }\r\n  const [val, setVal] = useState({\r\n    projectID: null,\r\n    matchPlate: \"\",\r\n    actualPlate: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const reload = () =>{\r\n    getSpecialPlate([\"projectID\", \"matchPlate\", \"actualPlate\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  const func = async (val) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element.projectID] = element.projectName;\r\n    });\r\n    return await temp;\r\n  };\r\n  useEffect(() => {\r\n    getProjects([\"projectID\", \"projectName\"])\r\n    .then(async (data) => {\r\n      setProjects(data.content);\r\n      func(data.content).then(async(list)=>{\r\n        setProjectNames(await list);\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },projectNames);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleChangeVal = (e) =>{\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setVal((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (values) => {\r\n    let {projectID, matchPlate, actualPlate} = values;\r\n    setValidated(false);\r\n    setVal({\r\n        projectID,\r\n        matchPlate,\r\n        actualPlate\r\n      });\r\n    toggleModal(\"edit\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectID, actualPlate } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          (projectID === null || row[\"projectID\"] === projectID) &&\r\n          row[\"actualPlate\"].toLowerCase().indexOf(actualPlate.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const insert = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n      addSpecialPlate(val)\r\n      .then(async (data) => {\r\n        reload();\r\n        toggleModal(\"add\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const edit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n        updateSpecialPlate(val)\r\n        .then(async (data) => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const del = (id) => {\r\n    delSpecialPlate(id)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this rule?\"\r\n      />\r\n      <Modal show={toggle.add} onHide={()=>toggleModal(\"add\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={insert}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={5}>\r\n            Project Name\r\n          </Form.Label>\r\n          <Col sm={6}>\r\n              <Form.Control\r\n                custom\r\n                required\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChangeVal}\r\n                value={val.projectID}\r\n              >\r\n                  <option value={null}>--Select a Project--</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Project Name is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n        </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"add\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    <Modal show={toggle.edit} onHide={()=>toggleModal(\"edit\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={edit}>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"edit\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Plate Regex</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectID}\r\n              >\r\n                  <option value={null}>All Projects</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"actualPlate\"\r\n                placeholder=\"Actual Plate\"\r\n                onChange={handleChange}\r\n                value={state.actualPlate}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                setVal({\r\n                    projectID: \"\",\r\n                    matchPlate: \"\",\r\n                    actualPlate: \"\"\r\n                    });\r\n                  setValidated(false);\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content greyBackground\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Project</TableCell>\r\n                <TableCell align=\"center\">Regex of Plate</TableCell>\r\n                <TableCell align=\"center\">Actual Plate</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.matchPlate}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {projectNames[row.projectID]}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.matchPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.actualPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {activateModal(row)}}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.matchPlate);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ParkingRules };\r\n","import React, { useContext } from \"react\";\nimport { store } from \"./store.js\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\nimport \"./assets/scrollbar.css\";\nimport { NavBar, AlertGroup } from \"./components/index.js\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport { Home, Login, Projects, EditProject, PlateRegex, Records, ParkRecords, ParkingRules } from \"./pages/index.js\";\n\nclass DebugRouter extends Router {\n  constructor(props) {\n    super(props);\n    console.log(\"initial history is: \", JSON.stringify(this.history, null, 2));\n    this.history.listen((location, action) => {\n      console.log(\n        `The current URL is ${location.pathname}${location.search}${location.hash}`\n      );\n      console.log(\n        `The last navigation action was ${action}`,\n        JSON.stringify(this.history, null, 2)\n      );\n    });\n  }\n}\n\nexport function App() {\n  return (\n    // <DebugRouter>\n    <Router>\n      <Switch>\n        <PrivateRoute path=\"/home\">\n          <Home />\n        </PrivateRoute>\n        <PrivateRoute path=\"/project/:projectID\">\n          <EditProject />\n        </PrivateRoute>\n        <PrivateRoute path=\"/project\">\n          <Projects />\n        </PrivateRoute>\n        <PrivateRoute path=\"/regex\">\n          <PlateRegex />\n        </PrivateRoute>\n        <PrivateRoute path=\"/records\">\n          <Records />\n        </PrivateRoute>\n        <PrivateRoute path=\"/parking\">\n          <ParkRecords />\n        </PrivateRoute>\n        <PrivateRoute path=\"/accessRules\">\n          <ParkingRules />\n        </PrivateRoute>\n        <PublicRoute path=\"/\">\n          <Login />\n        </PublicRoute>\n      </Switch>\n    </Router>\n    // </DebugRouter>\n  );\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  let auth = globalState.auth;\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth ? (\n          <div className=\"h-100\">\n              <AlertGroup />\n            <NavBar />\n            <div id=\"content-body\">\n              {React.cloneElement(children, { params: props.match.params })}\n            </div>\n          </div>\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ children, ...rest }) {\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  let auth = globalState.auth;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          <Redirect\n            to={{\n              pathname: \"/project\",\n              state: { from: location }\n            }}\n          />\n        ) : \n        <AlertGroup />(\n          children\n        )\n      }\n    />\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { StateProvider } from \"./store.js\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StateProvider>\n    <StrictMode>\n      <App />\n    </StrictMode>\n  </StateProvider>,\n  rootElement\n);\n"],"sourceRoot":""}