{"version":3,"sources":["store.js","components/NavBar.js","components/ConfirmModal.js","components/QueryModal.js","services/alertService.js","services/api.js","components/DeviceModal.js","components/GateModal.js","components/AlertGroup.js","components/TablePaginationActions.js","components/RulesModal.js","components/ImageModal.js","components/WhitelistModal.js","pages/Home.js","pages/Login.js","pages/Projects.js","pages/projectSubPages/ProjectForm.js","pages/projectSubPages/BusinessDetails.js","pages/projectSubPages/Devices.js","pages/projectSubPages/Gates.js","pages/projectSubPages/LedConfig.js","pages/EditProject.js","pages/PlateRegex.js","pages/Records.js","pages/ParkRecords.js","pages/ParkingRules.js","pages/Whitelist.js","App.js","index.js"],"names":["initialState","auth","user","toggled","store","createContext","Provider","StateProvider","children","useReducer","state","action","type","value","Error","dispatch","NavBar","storeContext","useContext","globalState","history","useHistory","direct","path","console","log","push","className","collapsed","width","iconShape","style","icon","fontSize","onClick","title","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","Item","data-value","href","Divider","Text","ConfirmModal","props","toggleModal","success","hide","body","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","alertSubject","Subject","defaultId","alertService","onAlert","asObservable","pipe","filter","x","message","options","alert","alertType","error","info","warn","clear","next","server_URL","process","returnFunc","response","a","json","data","ok","content","status","Promise","reject","getProjects","columns","requestOptions","method","headers","JSON","stringify","authID","serviceName","objName","fetch","then","getAccessRule","projectID","filters","getGate","ID","getProjectInfo","delProject","getGateInfo","gateID","delGate","delDevice","deviceID","getObjectTypes","obj","getWhitelistTags","delAccessRule","accessRuleID","delWhitelistEntryInfo","plateNumber","DeviceModal","deviceTypes","useState","validated","setValidated","setState","dummy","projects","setProjects","curProject","setCurProject","gates","setGates","useEffect","deviceName","deviceType","deviceCarpark","manufacturer","manufacturerCode","direction","isPrimaryDevice","isGateControl","getDeviceInfo","catch","handleChange","target","e","filler","e2","undefined","prevState","update","tempState","modifyParams","updateDeviceInfo","create","values","newDeviceReq","createDevice","Form","noValidate","onSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","Group","as","Row","Label","column","sm","Col","Control","required","placeholder","name","onChange","Feedback","readOnly","custom","map","project","projectName","disabled","gate","gateName","Check","checked","GateModal","newState","gateTypes","whiteListTags","setWhiteListTags","newInitialState","gateType","isChargeable","ledOnTime","ledOffTime","allowedTypes","whitelistTags","handleTagChange","idx","indexOf","concat","tempList","splice","updateGateInfo","newGateReq","createGate","showSeconds","input","tag","index","includes","label","AlertGroup","alerts","this","subscription","subscribe","setTimeout","removeAlert","unsubscribe","length","Alert","dismissible","onClose","React","Component","TablePaginationActions","count","page","rowsPerPage","onChangePage","flexShrink","right","IconButton","event","aria-label","Math","ceil","max","RulesModal","curGates","setCurGates","initialGates","setInitialGates","loading","setLoading","func","val","temp","forEach","element","accessRuleName","getAccessRuleInfo","Object","keys","list","handleGateChange","updateAccessRuleInfo","createAccessRule","margin","Spinner","size","animation","role","ImageModal","src","centered","WhitelistModal","accessRules","setWhitelistTags","startDateTime","endDateTime","getWhitelistEntryInfo","updateWhitelistEntryInfo","createWhitelistEntry","rule","whitelistTag","isClearable","wrapperClassName","selected","maxDate","popperClassName","date","minDate","Home","devices","setDevices","newDevices","setNewDevices","setDeviceTypes","deviceTypeNames","setDeviceTypeNames","curID","setCurID","edit","toggle","setToggle","reload","getAllDevice","device","deviceStatus","getNewDevices","entries","modal","prevVal","Jumbotron","Card","color","height","Typography","component","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","deviceIP","padding","stickyHeader","String","Login","username","password","document","getElementById","innerText","Projects","match","initialRows","setInitialRows","rows","setRows","delete","add","location","projectType","curState","setCurState","curRows","toLowerCase","insert","contactNumber","maCompany","equipManu","addProject","del","setPage","setRowsPerPage","emptyRows","min","Breadcrumb","active","inline","slice","scope","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","ProjectForm","useParams","projectTypes","setProjectTypes","updateProjectInfo","country","isValid","BusinessDetails","setProjectName","barrierDelay","networkWarningDuration","instantImgUpload","vehicleColorDetect","localImgStore","myFormat","num","InputGroup","strict","format","Devices","useLocation","pathname","setGateName","getDevice","Tooltip","Gates","setGateTypes","gateTypeNames","setGateTypeNames","setModal","openGateFunc","openGate","LedConfig","trigger","voiceMsg","textMsg","Input","vals","EditProject","useRouteMatch","url","split","background","Tab","Container","xs","exact","to","PlateRegex","NaN","actualPlate","matchPlate","setVal","projectNames","setProjectNames","getSpecialPlate","handleChangeVal","Number","isNaN","delSpecialPlate","addSpecialPlate","updateSpecialPlate","activateModal","Records","imageSrc","setImageSrc","fieldPlaceholder","vehicleType","isOpened","originalPlate","confirmedPlate","detectionTime","confirmedTime","image1","image2","image3","plateImage","fields","fieldLength","fieldHeight","curField","startTime","endTime","getMovementLogs","sort","b","reset","queryField","field","logID","ParkRecords","ParkingRules","setProject","gateNames","setGateNames","inputField","outputField","Whitelist","pNumber","setPNumber","curPNo","setCurPNo","setAccessRules","accessRuleVals","setAccessRuleVals","getWhitelistEntry","entry","Router","PrivateRoute","rest","render","cloneElement","params","from","PublicRoute","App","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.72223150.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  auth: true,\r\n  user: \"huajun\",\r\n  toggled: false\r\n};\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"setAuth\":\r\n        return {\r\n          ...state,\r\n          auth: action.value\r\n        };\r\n      case \"setUser\":\r\n        return {\r\n          ...state,\r\n          user: action.value\r\n        };\r\n      case \"setToggled\":\r\n        return {\r\n          ...state,\r\n          toggled: !state.toggled\r\n        };\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { store, StateProvider };\r\n","import {\r\n  SidebarContent,\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SubMenu\r\n} from \"react-pro-sidebar\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport { List } from \"react-bootstrap-icons\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { store } from \"../store.js\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalParkingIcon from '@material-ui/icons/LocalParking';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nexport function NavBar() {\r\n  const storeContext = useContext(store);\r\n  const { dispatch } = storeContext;\r\n  const globalState = storeContext.state;\r\n  const {toggled, user}  = globalState;\r\n  let history = useHistory();\r\n  const logout = () => {\r\n    dispatch({\r\n      type: \"setAuth\",\r\n      value: false\r\n    });\r\n    dispatch({\r\n      type: \"setUser\",\r\n      value: \"\"\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n  const direct = (path) => {\r\n    console.log(\"clicked\", path);\r\n    history.push(path);\r\n  };\r\n  const toggleSideBar = () => {\r\n    dispatch({\r\n      type: \"setToggled\"\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"h-100 fixed-top clickThrough\">\r\n      <ProSidebar\r\n        className=\"clickAble navbar-default navbar-static-top sideBar\"\r\n        collapsed={toggled}\r\n        width=\"250px\"\r\n        //collapsedWidth=\"px\"\r\n      >\r\n        <SidebarContent>\r\n          <Menu iconShape=\"circle\">\r\n            <MenuItem \r\n              style={{\"background\":\"#2c3b41\",\"height\":\"60px\", \"pointer-events\":\"none\"}}\r\n              className=\"d-flex justify-content-center align-items-center\">\r\n              <div style={{\"padding-top\":\"10px\", \"color\":\"white\"}}>\r\n                <h5>Admin</h5>\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem \r\n              icon={<AccountCircleIcon fontSize='large'/>}\r\n              style={{\"pointer-events\":\"none\", \"border-bottom\":\"1px solid gray\"}}>\r\n              <div style={{ \"color\":\"white\"}}>\r\n                Welcome, {user}\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<HomeIcon onClick={()=>direct(\"/home\")}/>}>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<InfoIcon onClick={()=>direct(\"/project\")} />}>\r\n              <div onClick={()=>direct(\"/project\")}>\r\n                Project\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<CodeIcon onClick={()=>direct(\"/regex\")} />}>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<StorageIcon onClick={()=>direct(\"/records\")} />}>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n                Exit/Entry Records\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<LocalParkingIcon onClick={()=>direct(\"/parking\")} />}>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </MenuItem>\r\n            <SubMenu title=\"Access\" icon={<PaymentIcon/>}>\r\n              <MenuItem  onClick={()=>direct(\"/accessRules\")} >Access Rules</MenuItem>\r\n              <MenuItem onClick={()=>direct(\"/whitelist\")}>Whitelist Entries</MenuItem>\r\n            </SubMenu>\r\n          </Menu>\r\n        </SidebarContent>\r\n      </ProSidebar>\r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" className={\"clickAble navBar\"+(toggled?\" navBar-collapsed\":\" navBar-expand\")}>\r\n        <Navbar.Brand \r\n        className=\"sideBar\" \r\n        onClick={toggleSideBar}>\r\n          <List />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"nav-dropdown\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto nav-dropdown\">\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/project\")}>\r\n                Project\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n                Log Records\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </Nav.Link>\r\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item data-value=\"/home\" onClick={direct}>\r\n                Action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Navbar.Text>\r\n            <Nav.Link onClick={logout}>Signout</Nav.Link>\r\n          </Navbar.Text>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { NavBar };\r\n","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nexport function ConfirmModal(props) {\r\n  let toggleModal = props.toggleModal;\r\n  let success = props.success;\r\n  let hide = props.hide;\r\n  let body = props.body;\r\n  let title = props.title;\r\n  return (\r\n    <Modal show={hide} onHide={toggleModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{body}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={toggleModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={()=>{\r\n          success();\r\n        }}>\r\n          Confirm\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { ConfirmModal};\r\n","import { Button, Modal, Form } from \"react-bootstrap\";\r\nimport {useState} from 'react';\r\n\r\nexport function QueryModal(props) {\r\n    let toggleModal = props.toggleModal;\r\n    let success = props.success;\r\n    let hide = props.hide;\r\n    let body = props.body;\r\n    let title = props.title;\r\n    const [value,setValue] = useState(\"\");\r\n    const handleChange = (e) =>{\r\n      setValue(e.target.value);\r\n    }\r\n    const exit = () =>{\r\n      setValue(\"\");\r\n      toggleModal();\r\n    }\r\n    return (\r\n      <Modal show={hide} onHide={exit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Label>{body}</Form.Label>\r\n            <Form.Control \r\n            value={value}\r\n            onChange={handleChange}\r\n            />\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={exit}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>{\r\n              success(value);\r\n              exit();\r\n              }}>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default {QueryModal};","import { Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nconst alertSubject = new Subject();\r\nconst defaultId = 'default-alert';\r\n\r\nexport const alertService = {\r\n    onAlert,\r\n    success,\r\n    error,\r\n    info,\r\n    warn,\r\n    alert,\r\n    clear\r\n};\r\n\r\nexport const alertType = {\r\n    success: 'success',\r\n    error: 'danger',\r\n    info: 'info',\r\n    warning: 'warning'\r\n}\r\n\r\n// enable subscribing to alerts observable\r\nfunction onAlert(id = defaultId) {\r\n    return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\r\n}\r\n\r\n// convenience methods\r\nfunction success(message, options) {\r\n    alert({ ...options, type: alertType.success, message });\r\n}\r\n\r\nfunction error(message, options) {\r\n    alert({ ...options, type: alertType.error, message });\r\n}\r\n\r\nfunction info(message, options) {\r\n    alert({ ...options, type: alertType.info, message });\r\n}\r\n\r\nfunction warn(message, options) {\r\n    alert({ ...options, type: alertType.warning, message });\r\n}\r\n\r\n// core alert method\r\nfunction alert(alert) {\r\n    alert.id = alert.id || defaultId;\r\n    alertSubject.next(alert);\r\n}\r\n\r\n// clear alerts\r\nfunction clear(id = defaultId) {\r\n    alertSubject.next({ id });\r\n}","import { alertService } from './index.js';\r\n\r\nconst server_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst returnFunc = async (response) => {\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.content) || response.status;\r\n        return Promise.reject(error);\r\n    }\r\n    return data;\r\n}\r\n\r\nconst getProjects = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"project\",\r\n            columns\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getMovementLogs = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"movementLog\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getSpecialPlate = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"specialPlate\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAccessRule = (projectID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"accessRule\",\r\n            columns,\r\n            filters:{\r\n                projectID\r\n            }\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createSpecialPlate\",\r\n          content: state\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delSpecialPlate = (matchPlate) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteSpecialPlate\",\r\n            content: {\r\n                matchPlate\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifySpecialPlate\",\r\n            content: {\r\n            matchPlate: state.matchPlate,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addProject = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createProject\",\r\n          content: {\r\n            projectName: \"\",\r\n            projectType: \"\",\r\n            location: \"\",\r\n            contactNumber: \"\",\r\n            maCompany: \"\",\r\n            equipManu: \"\"\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGate = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getTable\",\r\n            content: {\r\n            objName: \"gate\",\r\n            columns,\r\n            filters:{\r\n                projectID: ID\r\n            }\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDevice = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"device\",\r\n            columns,\r\n            filters:{\r\n              gateID: ID\r\n            }\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAllDevice = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"device\",\r\n            columns\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createGate = (projectID,values) =>{\r\n    const newGateReq = {\r\n        ...values,\r\n        projectID\r\n    };\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createGate\",\r\n            content: newGateReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createDevice = (gateID, values) =>{\r\n    const newDeviceReq = {\r\n        ...values,\r\n        gateID\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createDevice\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getProjectInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getProject\",\r\n            content: {\r\n            projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delProject = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteProject\",\r\n            content: {\r\n                projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateProjectInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyProject\",\r\n            content: {\r\n            projectID: ID,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getBusinessInfo = (ID) =>{\r\n    //Pending Function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateBusinessInfo = (ID, state) =>{\r\n    //Pending function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGateInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delGate = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateGateInfo = (ID, state) =>{\r\n    console.log(state);\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyGate\",\r\n            content: {\r\n                gateID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDeviceInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delDevice = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateDeviceInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyDevice\",\r\n            content: {\r\n                deviceID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createAccessRule = (values) =>{\r\n    const newDeviceReq = {\r\n        ...values\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createAccessRule\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAccessRuleInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getAccessRule\",\r\n          content: {\r\n            accessRuleID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateAccessRuleInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyAccessRule\",\r\n            content: {\r\n                accessRuleID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getObjectTypes = (obj) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getObjectTypes\",\r\n            content: {\r\n                objName: obj\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getWhitelistTags = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getWhitelistTags\"\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst openGate = (gateID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"openGate\",\r\n            content:{\r\n                gateID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getNewDevices = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getNewDevice\"\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delAccessRule = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteAccessRule\",\r\n          content: {\r\n              accessRuleID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getWhitelistEntry = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"dbWhitelist\",\r\n            columns\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getWhitelistEntryInfo = (plateNumber, accessRuleID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getWhitelistEntry\",\r\n          content: {\r\n            plateNumber,\r\n            accessRuleID\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateWhitelistEntryInfo = (plateNumber, accessRuleID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyWhitelistEntry\",\r\n            content: {\r\n                plateNumber,\r\n                accessRuleID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delWhitelistEntryInfo = (plateNumber, accessRuleID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteWhitelistEntry\",\r\n          content: {\r\n            plateNumber,\r\n            accessRuleID\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createWhitelistEntry = (values) =>{\r\n    const newDeviceReq = {\r\n        ...values\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"addWhitelistEntry\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nexport {\r\n    getGate,\r\n    getDevice,\r\n    createGate,\r\n    createDevice,\r\n    getProjectInfo,\r\n    updateProjectInfo,\r\n    getBusinessInfo,\r\n    updateBusinessInfo,\r\n    getGateInfo,\r\n    updateGateInfo,\r\n    getDeviceInfo,\r\n    updateDeviceInfo,\r\n    getProjects,\r\n    addProject,\r\n    delProject,\r\n    delGate,\r\n    delDevice,\r\n    getMovementLogs,\r\n    getSpecialPlate,\r\n    delSpecialPlate,\r\n    updateSpecialPlate,\r\n    addSpecialPlate,\r\n    getAccessRule,\r\n    createAccessRule,\r\n    getAccessRuleInfo,\r\n    updateAccessRuleInfo,\r\n    getObjectTypes,\r\n    getWhitelistTags,\r\n    openGate,\r\n    getAllDevice,\r\n    getNewDevices,\r\n    delAccessRule,\r\n    getWhitelistEntry,\r\n    getWhitelistEntryInfo,\r\n    updateWhitelistEntryInfo,\r\n    delWhitelistEntryInfo,\r\n    createWhitelistEntry\r\n};","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport { alertService, createDevice, getDeviceInfo, updateDeviceInfo, getGate, getProjects } from '../services/index.js';\r\n\r\nexport function DeviceModal(props) {\r\n    let {hide, gateID, toggleModal, success, deviceID, deviceTypes } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [projects, setProjects] = useState([]);\r\n    const [curProject, setCurProject] = useState(\"\");\r\n    const [gates, setGates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    if(deviceID===null){\r\n      setState({\r\n        gateID,\r\n        deviceID: \"\",\r\n        deviceName: \"\",\r\n        deviceType: \"\",\r\n        deviceCarpark: \"\",\r\n        manufacturer: \"\",\r\n        manufacturerCode: \"\",\r\n        direction: \"\",\r\n        isPrimaryDevice: false,\r\n        isGateControl: false\r\n      });\r\n    }else{\r\n      getDeviceInfo(deviceID)\r\n      .then(async (data) => {\r\n        console.log(data.message);\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Device, There was an error!\", error);\r\n      });\r\n      if(gateID===null){\r\n        handleChange({\r\n          target:{\r\n            id: \"gateID\",\r\n            value: \"\"\r\n          }\r\n        });\r\n        getProjects([\"projectID\",\"projectName\"])\r\n        .then(async (data) => {\r\n          setCurProject(\"\");\r\n          setProjects(data.content);\r\n        })\r\n        .catch((error) => {\r\n          alertService.error(\"There was an error!\");\r\n          console.error(\"Get Projects, There was an error!\", error);\r\n        });\r\n      }\r\n    }\r\n  }, [dummy,hide]);\r\n\r\n  useEffect(()=>{\r\n    handleChange({\r\n      target:{\r\n        id: \"gateID\",\r\n        value: \"\"\r\n      }\r\n    });\r\n    if(curProject === null)setGates([]);\r\n    else{\r\n      getGate(curProject,[\"gateID\",\"gateName\"])\r\n      .then(async (data) => {\r\n        setGates(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gates, There was an error!\", error);\r\n      });\r\n    }\r\n  },[curProject])\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(deviceID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    let tempState = state;\r\n    delete tempState[\"deviceStatus\"];\r\n    updateDeviceInfo(deviceID, tempState)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createDevice(gateID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Device, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{deviceID===null?\"Add Device\":\"Edit Device\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id =\"deviceModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device ID\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >{deviceID===null?\r\n                        <div><Form.Control\r\n                        required\r\n                        placeholder=\"ID\"\r\n                        id=\"deviceID\"\r\n                        name=\"deviceID\"\r\n                        type =\"text\"\r\n                        value={state.deviceID}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device ID is a required field.\r\n                        </Form.Control.Feedback></div>:<Form.Control type=\"text\" placeholder={state.deviceID} readOnly />}\r\n                    </Col>\r\n                    </Form.Group>\r\n                    {gateID===null?\r\n                    <div>\r\n                      <Form.Group as={Row}>\r\n                        <Form.Label column sm={6}>\r\n                            Project\r\n                        </Form.Label>\r\n                        <Col\r\n                            sm={6}\r\n                        >\r\n                          <Form.Control\r\n                            custom\r\n                            required\r\n                            as=\"select\"\r\n                            id=\"project\"\r\n                            name=\"project\"\r\n                            value={curProject}\r\n                            onChange={(e)=>{\r\n                              setCurProject(e.target.value);\r\n                            }}\r\n                            >\r\n                            <option value={\"\"}>--Select Project--</option>\r\n                            {projects.map((project)=>(\r\n                              <option value={project.projectID}>{project.projectName}</option>\r\n                            ))}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            Project is a required field.\r\n                          </Form.Control.Feedback>\r\n                        </Col>\r\n                      </Form.Group>\r\n                      <Form.Group as={Row}>\r\n                        <Form.Label column sm={6}>\r\n                            Gate\r\n                        </Form.Label>\r\n                        <Col\r\n                            sm={6}\r\n                        >\r\n                          <Form.Control\r\n                            disabled = {curProject===\"\"}\r\n                            custom\r\n                            required\r\n                            as=\"select\"\r\n                            id=\"gateID\"\r\n                            name=\"gateID\"\r\n                            value={state.gateID===null?\"\":state.gateID}\r\n                            onChange={handleChange}\r\n                            >\r\n                            <option value={\"\"}>--Select Project--</option>\r\n                            {gates.map((gate)=>(\r\n                              <option value={gate.gateID}>{gate.gateName}</option>\r\n                            ))}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            Gate is a required field.\r\n                          </Form.Control.Feedback>\r\n                        </Col>\r\n                      </Form.Group>\r\n                      </div>\r\n                      :null\r\n                    }\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"deviceName\"\r\n                        name=\"deviceName\"\r\n                        value={state.deviceName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"deviceType\"\r\n                        name=\"deviceType\"\r\n                        value={state.deviceType===null?null:state.deviceType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        {deviceTypes.map((type)=>(\r\n                          <option value={type.id}>{type.name}</option>\r\n                        ))}\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Carpark\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Carpark\"\r\n                        id=\"deviceCarpark\"\r\n                        name=\"deviceCarpark\"\r\n                        value={state.deviceCarpark}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Capark is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Manufacturer\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer\"\r\n                        id=\"manufacturer\"\r\n                        name=\"manufacturer\"\r\n                        value={state.manufacturer}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Manufacturer Code\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer Code\"\r\n                        id=\"manufacturerCode\"\r\n                        name=\"manufacturerCode\"\r\n                        value={state.manufacturerCode}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer Code is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Direction\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Direction\"\r\n                        id=\"direction\"\r\n                        name=\"direction\"\r\n                        value={state.direction}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Direction is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Primary Device?\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isPrimaryDevice}\r\n                        type=\"switch\"\r\n                        id=\"isPrimaryDevice\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Control Gate?\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isGateControl}\r\n                        type=\"switch\"\r\n                        id=\"isGateControl\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"deviceModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { DeviceModal };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport TimeField from 'react-simple-timefield';\r\nimport { alertService, createGate, getGateInfo, updateGateInfo, getWhitelistTags } from '../services/index.js';\r\n\r\nexport function GateModal(props) {\r\n    let {hide, gateID, toggleModal, success, newState, projectID, gateTypes } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [whiteListTags, setWhiteListTags] = useState([]);\r\n    const newInitialState = {\r\n      gateName: \"\",\r\n      gateType: \"\",\r\n      isChargeable: false,\r\n      ledOnTime: \"00:00:00\",\r\n      ledOffTime: \"00:00:00\",\r\n      allowedTypes: []\r\n    };\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    console.log(\"gateModal\", gateID, projectID, newState);\r\n    if(!hide){\r\n      setState(newInitialState);\r\n    }else if(newState){\r\n      setState(newInitialState);\r\n    }else{\r\n      getGateInfo(gateID)\r\n      .then(async (data) => {\r\n        if(data.message.allowedTypes!==null){\r\n          setState(data.message);\r\n        }else{\r\n          setState({\r\n            ...data.message,\r\n            allowedTypes: []\r\n          })\r\n        }\r\n        console.log(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gate, There was an error!\", error);\r\n      });\r\n    }\r\n    getWhitelistTags()\r\n    .then(async (data) => {\r\n      setWhiteListTags(data.message.whitelistTags);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get WhiteList Tags, There was an error!\", error);\r\n    });\r\n  }, [dummy,hide]);\r\n\r\n  const handleTagChange = (e) =>{\r\n    let {id, value} = e.target;\r\n    let idx = state.allowedTypes.indexOf(id);\r\n    if(idx==-1){\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        allowedTypes: prevState.allowedTypes.concat([id])\r\n      }));\r\n    }else{\r\n      let tempList = state.allowedTypes;\r\n      tempList.splice(idx,1);\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        allowedTypes: tempList\r\n      }));\r\n    }\r\n  }\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    console.log(typeof state[id]);\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(newState) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateGateInfo(gateID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createGate(projectID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Gate, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n      setValidated(false);\r\n      toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{newState?\"Add Gate\":\"Edit Gate\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id='gateModal' noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"gateName\"\r\n                        name=\"gateName\"\r\n                        value={state.gateName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"gateType\"\r\n                        name=\"gateType\"\r\n                        value={state.gateType===null?\"\":state.gateType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        {gateTypes.map((type)=>(\r\n                          <option value={type.id}>{type.name}</option>\r\n                        ))}\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Charge fee for entry\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                    Time to turn on the LPR camera’s LED\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex\"\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOnTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOnTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOnTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Time to turn off the LPR\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        className=\"align-items-center d-flex\"\r\n                        sm={6}\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOffTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOffTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOffTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Whitelist Tags\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                      <Col\r\n                          sm={6}\r\n                      >\r\n                        {whiteListTags.map((tag, index)=>(\r\n                            <div>{\r\n                                index%2==0?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={tag}\r\n                                checked={state.allowedTypes.includes(tag)}\r\n                                onChange={handleTagChange}\r\n                                label={tag}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                      </Col>\r\n                      <Col\r\n                          sm={6}\r\n                      >\r\n                        {whiteListTags.map((tag, index)=>(\r\n                            <div>{\r\n                                index%2==1?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={tag}\r\n                                checked={state.allowedTypes.includes(tag)}\r\n                                onChange={handleTagChange}\r\n                                label={tag}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                      </Col>\r\n                    </Form.Group>\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"gateModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { GateModal };\r\n","import React from 'react';\r\n\r\nimport { alertService, alertType } from '../services/index.js';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nexport class AlertGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            alerts: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // subscribe to new alert notifications\r\n        this.subscription = alertService.onAlert(this.props.id)\r\n            .subscribe(alert => {\r\n                // add alert to array\r\n                this.setState({ alerts: [...this.state.alerts, alert] });\r\n\r\n                // auto close alert if required\r\n                setTimeout(() => this.removeAlert(alert), 3000);\r\n            });\r\n\r\n        // clear alerts on location change\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // unsubscribe & unlisten to avoid memory leaks\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert) {\r\n        this.setState({ alerts: this.state.alerts.filter(x => x !== alert) })\r\n    }\r\n\r\n    render() {\r\n        const { alerts } = this.state;\r\n        if (!alerts.length) return null;\r\n        return (\r\n            <div className=\"alertGrp\">\r\n                {console.log(alerts),\r\n                alerts.map((alert,idx) =>\r\n                    <Alert \r\n                    key = {idx} \r\n                    variant={alert.type}\r\n                    dismissible = {true}\r\n                    onClose={()=>{this.removeAlert(alert)}}>\r\n                        {alert.message}\r\n                    </Alert>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default {AlertGroup} ;","import {IconButton} from '@material-ui/core';\r\n\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nexport function TablePaginationActions(props) {\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div style={{flexShrink:0, right:0}}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        <FirstPageIcon />\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n         <KeyboardArrowLeft />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        <KeyboardArrowRight />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        <LastPageIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default {TablePaginationActions};","import { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, createAccessRule, getAccessRuleInfo, updateAccessRuleInfo, getGate } from '../services/index.js';\r\n\r\nexport function RulesModal(props) {\r\n    let {hide, accessRuleID, projectID, success, projectName, toggleModal } = props;\r\n    let cnt = 0;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [gates, setGates] = useState([]);\r\n    const [curGates, setCurGates] = useState({});\r\n    const [initialGates, setInitialGates] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const func = async (val) =>{\r\n        let temp = {};\r\n        val.forEach(async (element)=>{\r\n            temp[element[\"gateID\"]] = false;\r\n        });\r\n        initialGates.forEach(async (element)=>{\r\n            console.log(element);\r\n            temp[element] = true;\r\n        });\r\n        return await temp;\r\n    };\r\n    const loadGates = () =>{\r\n        getGate(projectID, [\"gateID\", \"gateName\"])\r\n        .then(async (data) => {\r\n            setGates(data.content);\r\n            func(data.content).then(async(list)=>{\r\n                setCurGates(await list);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            alertService.error(\"There was an error!\");\r\n            console.error(\"Get Gate Rule, There was an error!\", error);\r\n        });\r\n    }\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    setTimeout(()=>setLoading(false), 600);\r\n    if(accessRuleID===null){\r\n      setState({\r\n        projectID,\r\n        accessRuleName: \"\",\r\n        isChargeable: false,\r\n        gates: []\r\n      });\r\n      setInitialGates([]);\r\n    }else{\r\n      getAccessRuleInfo(accessRuleID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n        setInitialGates(data.message.gates);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Access Rule, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    setState((prevState)=>({\r\n        ...prevState,\r\n        gates: (Object.keys(curGates)).filter((gate)=>curGates[gate])\r\n      }));\r\n  },[curGates]);\r\n\r\n  useEffect(()=>{\r\n    loadGates();\r\n  },[initialGates]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleGateChange = (e) =>{\r\n    let id = e.target.id;\r\n    setCurGates((prevState) => ({\r\n      ...prevState,\r\n      [id]: !prevState[id]\r\n    }));\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(accessRuleID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateAccessRuleInfo(accessRuleID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Access Rule, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createAccessRule(state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Access Rule, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n      {loading?\r\n      <Row className=\"d-flex justify-content-center\" style={{margin:\"200px\"}}>\r\n      <Spinner size=\"lg\" animation=\"border\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n    </Row>:\r\n        <div>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{accessRuleID===null?\"Add Rule\":\"Edit Rule\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id =\"ruleModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Project Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={projectName} readOnly />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Access Rule Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"accessRuleName\"\r\n                        name=\"accessRuleName\"\r\n                        value={state.accessRuleName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Rule Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gates\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        {gates.map((gate, index)=>(\r\n                            <div>{\r\n                                index%2==0?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={gate.gateID}\r\n                                checked={curGates[gate.gateID]}\r\n                                onChange={handleGateChange}\r\n                                label={gate.gateName}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                    </Col>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        {gates.map((gate, index)=>(\r\n                            <div>{\r\n                                index%2==1?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={gate.gateID}\r\n                                checked={curGates[gate.gateID]}\r\n                                onChange={handleGateChange}\r\n                                label={gate.gateName}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Is Chargeable\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"ruleModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n        </div>\r\n      }\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { RulesModal };\r\n","import {Modal} from 'react-bootstrap';\r\n\r\nexport function ImageModal (props){\r\n    let {toggleModal, src} = props;\r\n    return(\r\n    <Modal size=\"lg\" centered show={src===null?false:true} onHide={toggleModal}>\r\n        <img src={src}/>\r\n    </Modal>\r\n    );\r\n}\r\n\r\nexport default {ImageModal};","import { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, getWhitelistEntryInfo, updateWhitelistEntryInfo, createWhitelistEntry, getWhitelistTags } from '../services/index.js';\r\n\r\nimport DatePicker from 'react-datepicker';\r\n\r\nexport function WhitelistModal(props) {\r\n    let {hide, ID, success, projectName, accessRules, toggleModal } = props;\r\n    let cnt = 0;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [whitelistTags, setWhitelistTags] = useState([]);\r\n\r\n\r\n  const reloadTags = ()=>{\r\n    getWhitelistTags()\r\n    .then(async (data) => {\r\n      setWhitelistTags(data.message.whitelistTags);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get WhiteList Tags, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    reloadTags();\r\n    if(ID===null){\r\n      setState({\r\n        plateNumber: \"\",\r\n        accessRuleID: \"\",\r\n        tag: \"\",\r\n        startDateTime: \"\",\r\n        endDateTime: \"\"\r\n      });\r\n    }else{\r\n      getWhitelistEntryInfo(ID.plateNumber, ID.accessRuleID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Whitelist entry info, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(ID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateWhitelistEntryInfo(ID.plateNumber, ID.accessRuleID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Whitelist Entry, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n      console.log(state);\r\n    createWhitelistEntry(state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Whitelist Entry, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n        <Modal.Header\r\n            closeButton>\r\n            <Modal.Title>{ID===null?\"Add Entry\":\"Edit Entry\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <Form id =\"whitelistModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <div>\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={6}>\r\n                    Project Name\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                    className=\"align-items-center d-flex justify-content-center\"\r\n                >\r\n                    <Form.Control type=\"text\" placeholder={projectName} readOnly />\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={6}>\r\n                    Plate Number\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >  \r\n                {ID===null?\r\n                    <div>\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"plateNumber\"\r\n                        name=\"plateNumber\"\r\n                        value={state.plateNumber}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Plate Number is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    :<Form.Control type=\"text\" placeholder={state.plateNumber} readOnly />\r\n                }\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={6}>\r\n                    Access Rule\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"accessRuleID\"\r\n                        name=\"accessRuleID\"\r\n                        value={state.accessRuleID===null?\"\":state.accessRuleID}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Access Rule--</option>\r\n                        {accessRules.map((rule)=>(\r\n                            <option value={rule.accessRuleID}>{rule.accessRuleName}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                    Access Rule is a required field.\r\n                    </Form.Control.Feedback>\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={6}>\r\n                    Tag\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <Form.Control\r\n                        custom\r\n                        as=\"select\"\r\n                        id=\"tag\"\r\n                        name=\"tag\"\r\n                        value={state.tag===null?\"\":state.tag}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>None</option>\r\n                        {whitelistTags.map((whitelistTag)=>(\r\n                            <option value={whitelistTag}>{whitelistTag}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={6}>\r\n                    Start Date Time\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <DatePicker\r\n                        isClearable\r\n                        className=\"dateRecord\"\r\n                        wrapperClassName=\"form-control\"\r\n                        selected={state.startDateTime}\r\n                        maxDate={state.endDateTime}\r\n                        popperClassName=\"dateTimePopper\"\r\n                        className=\"form-control\"\r\n                        placeholderText=\"YYYY-MM-DD HH:MM:SS\"\r\n                        onChange={date => handleChange({\r\n                            target:{\r\n                            value:date,\r\n                            id: \"startDateTime\"\r\n                            }\r\n                        })}\r\n                        showTimeSelect\r\n                        dateFormat=\"yyyy-MM-dd\"\r\n                        timeFormat=\"HH:mm:ss\"\r\n                        timeIntervals={15}\r\n                        timeCaption=\"time\"\r\n                        dateFormat=\"yyyy-MM-dd HH:mm:ss\"\r\n                        title=\"Start Date Time\"\r\n                        clearButtonClassName=\"dateTimeClear\"\r\n                    />\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={6}>\r\n                    End Date Time\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <DatePicker\r\n                        isClearable\r\n                        className=\"dateRecord\"\r\n                        wrapperClassName=\"form-control\"\r\n                        selected={state.endDateTime}\r\n                        minDate={state.startDateTime}\r\n                        popperClassName=\"dateTimePopper\"\r\n                        className=\"form-control\"\r\n                        placeholderText=\"YYYY-MM-DD HH:MM:SS\"\r\n                        onChange={date => handleChange({\r\n                            target:{\r\n                            value:date,\r\n                            id: \"endDateTime\"\r\n                            }\r\n                        })}\r\n                        showTimeSelect\r\n                        dateFormat=\"yyyy-MM-dd\"\r\n                        timeFormat=\"HH:mm:ss\"\r\n                        timeIntervals={15}\r\n                        timeCaption=\"time\"\r\n                        dateFormat=\"yyyy-MM-dd HH:mm:ss\"\r\n                        title=\"End Date Time\"\r\n                        clearButtonClassName=\"dateTimeClear\"\r\n                    />\r\n                </Col>\r\n                </Form.Group>\r\n\r\n            </div>\r\n        </Form>\r\n        </Modal.Body>\r\n    <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n        Cancel\r\n        </Button>\r\n        <Button form =\"whitelistModal\" variant=\"primary\" type=\"submit\">\r\n        Confirm\r\n        </Button>\r\n    </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { WhitelistModal };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {Jumbotron, Row, Col, Card } from 'react-bootstrap';\r\nimport {getAllDevice, getObjectTypes, alertService, getGateInfo, getNewDevices} from '../services/index.js';\r\nimport {IconButton, Typography  , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, TableHead, TableRow, Paper, CardActions } from '@material-ui/core';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { TablePaginationActions , DeviceModal} from \"../components/index.js\";\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nexport function Home() {\r\n  const [rows, setRows] = useState([]);\r\n  const [dummy, setDummy] = useState(null);\r\n  const [devices, setDevices] = useState([]);\r\n  const [newDevices, setNewDevices] = useState([]);\r\n  const [deviceTypes, setDeviceTypes] = useState([]);\r\n  const [deviceTypeNames, setDeviceTypeNames] = useState({});\r\n  const [curID, setCurID] = useState(null);\r\n  const [toggle, setToggle] = useState({\r\n    edit: false\r\n  });\r\n  let history = useHistory();\r\n\r\n  const reload = () =>{\r\n    getAllDevice([\"deviceID\", \"deviceName\", \"deviceType\",\"deviceStatus\", \"gateID\",\"deviceIP\"])\r\n    .then(async (data) => {\r\n      setDevices(data.content.filter((device)=>device.deviceStatus!==\"online\"&&device.gateID !== null));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get All Device, there was an error!\", error);\r\n    });\r\n    getNewDevices()\r\n    .then(async (data) => {\r\n      setNewDevices(data.message);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get All Device, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n    getObjectTypes(\"device\")\r\n    .then(async (data) => {\r\n      setDeviceTypeNames(data.message);\r\n      setDeviceTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Device Types!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  const direct = (gateID) =>{\r\n    getGateInfo(gateID)\r\n    .then(async (data) => {\r\n      let projectID = data.message.projectID;\r\n      history.push('/project/'+String(projectID)+'/gate/'+String(gateID));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate Info, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  return (\r\n  <div>\r\n    <DeviceModal\r\n      deviceTypes = {deviceTypes}\r\n      hide={toggle.edit}\r\n      gateID = {null}\r\n      deviceID = {curID}\r\n      success={() => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n      }}\r\n      toggleModal={() => {\r\n        toggleModal(\"edit\");\r\n      }}\r\n    />\r\n    <Jumbotron className=\"dashboard\">\r\n      <Row>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv success\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Sample\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#66bb6a\"}}>\r\n                ~\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv warning\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Sample\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#ffa726\"}} >\r\n              ~\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv info\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              New Devices\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#26c6da\"}}>\r\n              {newDevices.length}\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv danger\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Disconnected Devices\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#ef5350\"}}>\r\n                {devices.length}\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Jumbotron>\r\n    <div className=\"content\">\r\n    <Row>\r\n    <Col sm={4}>\r\n          <Card style={{height:\"465px\"}}>\r\n          <Typography className=\"cardTitle\" variant=\"h6\" component=\"h2\">\r\n            New Devices\r\n          </Typography>\r\n          <TableContainer component={Paper} className=\"scrollbar-grey\" style={{\"box-shadow\":\"none\"}}>\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead >\r\n                <TableRow>\r\n                  <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                  <TableCell align=\"left\"><b>IP</b></TableCell>\r\n                  <TableCell align=\"left\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {newDevices.map((row, index) => (\r\n                  <TableRow key={row.deviceID}>\r\n                  <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                  <TableCell align=\"left\">{row.deviceIP}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                      <IconButton style={{padding:0}}\r\n                      onClick={() => {\r\n                          setCurID(row.deviceID);\r\n                          toggleModal(\"edit\");\r\n                      }}>\r\n                        <BuildIcon\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={8}>\r\n          <Card style={{height:\"465px\"}} >\r\n          <Typography className=\"cardTitle\" variant=\"h6\" component=\"h2\">\r\n             Disconnected Devices\r\n          </Typography>\r\n          <TableContainer component={Paper} className=\"scrollbar-grey\" style={{\"box-shadow\":\"none\"}}>\r\n            <Table stickyHeader aria-label=\"simple table\">\r\n              <TableHead >\r\n                <TableRow>\r\n                  <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                  <TableCell align=\"left\"><b>Name</b></TableCell>\r\n                  <TableCell align=\"left\"><b>Type</b></TableCell>\r\n                  <TableCell align=\"left\"><b>IP</b></TableCell>\r\n                  <TableCell align=\"left\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {devices.map((row, index) => (\r\n                  <TableRow key={row.deviceID}>\r\n                  <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                    <TableCell align=\"left\">{row.deviceName}</TableCell>\r\n                    <TableCell align=\"left\">{row.deviceType===null?null:(deviceTypeNames[row.deviceType]===undefined ? row.deviceType : deviceTypeNames[row.deviceType].name)}</TableCell>\r\n                  <TableCell align=\"left\">{row.deviceIP}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <IconButton style={{padding:0}}\r\n                      onClick={() => {\r\n                          direct(row.gateID);\r\n                      }}>\r\n                        <OpenInNewIcon\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default { Home };\r\n","import React, { useState, useContext } from \"react\";\r\nimport { store } from \"../store.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport function Login() {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  const { dispatch } = storeContext;\r\n  let history = useHistory();\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n  const reqLogin = (e) => {\r\n    e.preventDefault();\r\n    let { username, password } = state;\r\n    /*\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    };\r\n    \r\n    fetch(server_URL + \"/login\", requestOptions)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n  \r\n      // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      }\r\n  \r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      return(\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/home\"\r\n          }}\r\n        />\r\n      );\r\n    })\r\n    .catch((error) => {\r\n      this.setState({ errorMessage: error.toString() });\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    if (username === \"huajun\" && password === \"huajun\") {\r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      dispatch({\r\n        type: \"setUser\",\r\n        value: username\r\n      });\r\n      history.push(\"/home\");\r\n    } else if (username.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Username cannot be blank\";\r\n    } else if (password.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Password cannot be blank\";\r\n    } else {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Invalid Username or Password\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"maincontainer h-100\">\r\n      <div className=\"container-fluid bg-light h-100\">\r\n        <div className=\"login d-flex align-items-center py-5\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-10 col-sm-6 col-md-5 col-xl-4 mx-auto \">\r\n                <h3 className=\"display-4\">Login</h3>\r\n                <p className=\"text-muted mb-4\">\r\n                  Enter your credentials to login.\r\n                </p>\r\n                <form>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"username\"\r\n                      type=\"username\"\r\n                      placeholder=\"Username\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4\"\r\n                      onChange={handleChange}\r\n                      value={state.username}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\r\n                      onChange={handleChange}\r\n                      value={state.password}\r\n                    />\r\n                  </div>\r\n                  <p id=\"login-error\" className=\"text-danger\"></p>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block text-uppercase mb-2 rounded-pill shadow-sm\"\r\n                    onClick={reqLogin}\r\n                  >\r\n                    Sign in\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Login };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, addProject, delProject, alertService } from '../services/index.js';\r\n\r\nexport function Projects({ match }) {\r\n  let history = useHistory();\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false\r\n  });\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n    setCurState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n  }\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (projectID) => {\r\n    setCurID(projectID);\r\n    toggleModal(\"delete\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectName, location, projectType } = curState;\r\n    let curRows = initialRows;\r\n    console.log(curRows);\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[\"projectName\"].toLowerCase().indexOf(projectName.toLowerCase()) >= 0 &&\r\n          row[\"location\"].toLowerCase().indexOf(location.toLowerCase()) >= 0 &&\r\n          row[\"projectType\"].toLowerCase().indexOf(projectType.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const insert = (e) => {\r\n    addProject()\r\n      .then(async (data) => {\r\n        let ID = data.message.projectID;\r\n        history.push(\"/project/\" + ID);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  const edit = (projectID) => {\r\n    history.push(\"/project/\" + projectID);\r\n  };\r\n\r\n  const del = async (projectID) => {\r\n    delProject(projectID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Project Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this project?\"\r\n      />\r\n      <ConfirmModal\r\n        hide={toggle.add}\r\n        success={() => {\r\n          insert();\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"add\");\r\n        }}\r\n        title=\"Confirm Addition\"\r\n        body=\"Add a new project?\"\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Projects</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectName\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectName}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"location\"\r\n                placeholder=\"Location\"\r\n                onChange={handleChange}\r\n                value={state.location}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectType\"\r\n                placeholder=\"Type\"\r\n                onChange={handleChange}\r\n                value={state.projectType}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Project</TableCell>\r\n                <TableCell align=\"left\">Location</TableCell>\r\n                <TableCell align=\"left\">Type</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.projectName}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.location}</TableCell>\r\n                  <TableCell align=\"left\">{row.projectType}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => edit(row.projectID)}>\r\n                      <PencilSquare\r\n                        data-value={row.projectID}\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => activateModal(row.projectID)}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Projects };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { alertService, getProjectInfo, updateProjectInfo , getObjectTypes} from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function ProjectForm() {\r\n  let { projectID }= useParams();\r\n  const [validated, setValidated] = useState(false);\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    projectType: \"\",\r\n    location: \"\",\r\n    contactNumber: \"\",\r\n    maCompany: \"\",\r\n    equipManu: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectTypes, setProjectTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Project Info!\", error);\r\n      });\r\n      getObjectTypes(\"project\")\r\n      .then(async (data) => {\r\n        setProjectTypes(Object.entries(data.message).map((type)=>({\r\n          id: type[0],\r\n          name: type[1].name\r\n        })));\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Project Types!\", error);\r\n      });\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()) update();\r\n  };\r\n\r\n  const update = () => {\r\n    updateProjectInfo(projectID, state)\r\n      .then(async (data) => {\r\n        alertService.success('Update Successful!');\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Project Info</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project ID\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control type=\"text\" placeholder={projectID} readOnly />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project Name\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              placeholder=\"Name\"\r\n              id=\"projectName\"\r\n              name=\"projectName\"\r\n              value={state.projectName}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Name is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project Type\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              custom\r\n              required\r\n              as=\"select\"\r\n              id=\"projectType\"\r\n              name=\"projectType\"\r\n              value={state.projectType===null? '':state.projectType}\r\n              onChange={handleChange}\r\n            >\r\n              <option value={''}>--Select Type--</option>\r\n              {\r\n                projectTypes.map((type)=>(\r\n                  <option value={type.id}>{type.name}</option>\r\n                ))\r\n              }\r\n            </Form.Control>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Type is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Location\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"location\"\r\n              name=\"location\"\r\n              value={state.location}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Location is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Equipment Manufacturer\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"equipManu\"\r\n              name=\"equipManu\"\r\n              value={state.equipManu}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Equipment Manufacturer is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n      </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            MA Company\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"maCompany\"\r\n              name=\"maCompany\"\r\n              value={state.maCompany}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              MA Company is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Contact No.\r\n          </Form.Label>\r\n          <Form.Label\r\n            column\r\n            sm={4}\r\n          >\r\n            <PhoneInput\r\n              inputProps={{\r\n                required: true\r\n              }}\r\n              placeholder=\"+XX-XXXX-XXXX\"\r\n              id=\"contactNumber\"\r\n              name=\"contactNumber\"\r\n              country={\"sg\"}\r\n              value={String(state.contactNumber)}\r\n              onChange={(e)=>{\r\n                setState((prevState) => ({\r\n                  ...prevState,\r\n                  [\"contactNumber\"]: parseInt(e)\r\n                }));\r\n              }}\r\n              isValid={(value, country) => {\r\n                if (value.length === 0) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              }}\r\n            />\r\n          </Form.Label>\r\n        </Form.Group>\r\n\r\n        \r\n        <Form.Group as={Row}>\r\n          <Col sm={8}\r\n           className=\"d-flex justify-content-end\">\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ProjectForm };\r\n","import { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, InputGroup, Breadcrumb } from \"react-bootstrap\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport { alertService, getBusinessInfo, updateBusinessInfo, getProjectInfo } from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function BusinessDetails(props) {\r\n  let {projectID} = useParams();\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    barrierDelay: 5,\r\n    networkWarningDuration: 5,\r\n    instantImgUpload: false,\r\n    vehicleColorDetect: false,\r\n    localImgStore: false\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    /*   \r\n    getBusinessInfo(projectID)\r\n    .then(async (data) => {\r\n      setState(data.message)\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    let res = {\r\n      barrierDelay: 5,\r\n      networkWarningDuration: 5,\r\n      instantImgUpload: false,\r\n      vehicleColorDetect: false,\r\n      localImgStore: false\r\n    };\r\n    setState(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    update();\r\n  };\r\n\r\n  const update = () => {\r\n    /* Pending API for project details update*/\r\n  };\r\n\r\n  function myFormat(num) {\r\n    return num + \" mins\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Business Details</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Breadcrumb>\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      </Breadcrumb>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Barrier Opening Delay\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"barrierDelay\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.barrierDelay}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Duration before issuing network down warning\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"networkWarningDuration\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.networkWarningDuration}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Instant Image Upload to Server\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.instantImgUpload}\r\n              type=\"switch\"\r\n              id=\"instantImgUpload\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Local Storage of images after uploading\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.localImgStore}\r\n              type=\"switch\"\r\n              id=\"localImgStore\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Vehicle Colour Detection\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.vehicleColorDetect}\r\n              type=\"switch\"\r\n              id=\"vehicleColorDetect\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col sm={8}\r\n           className=\"d-flex justify-content-end\">\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { BusinessDetails };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, DeviceModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getDevice, alertService, delDevice, getObjectTypes, getProjectInfo, getGateInfo} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport SignalCellularConnectedNoInternet0BarIcon from '@material-ui/icons/SignalCellularConnectedNoInternet0Bar';\r\n\r\nexport function Devices (){\r\n    let { projectID, gateID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [gateName, setGateName] = useState(\"\");\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(null);\r\n  const [dummy, setDummy] = useState(false);\r\n  const [deviceTypes, setDeviceTypes] = useState([]);\r\n  const [deviceTypeNames, setDeviceTypeNames] = useState([]);\r\n  const reload = () =>{\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    getGateInfo(gateID)\r\n    .then(async (data) => {\r\n      setGateName(data.message.gateName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate Info, there was an error!\", error);\r\n    });\r\n    getDevice(gateID, [\"deviceID\", \"deviceName\", \"deviceType\", \"deviceStatus\",\"deviceIP\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Device, there was an error!\", error);\r\n      });\r\n      getObjectTypes(\"device\")\r\n    .then(async (data) => {\r\n      setDeviceTypeNames(data.message);\r\n      setDeviceTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Device Types!\", error);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (deviceID) => {\r\n    delDevice(deviceID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Device Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this device?\"\r\n      />\r\n      <DeviceModal\r\n        deviceTypes = {deviceTypes}\r\n        hide={toggle.edit}\r\n        deviceID = {curID}\r\n        gateID = {gateID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item href={\"/project/\"+projectID+\"/gate\"}>Gates</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Devices</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"d-flex align-items-center\">\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName} / {gateName}</h5>\r\n      <div style={{\"flex-grow\":\"1\"}}></div>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"center\"><b>IP</b></TableCell>\r\n                <TableCell align=\"center\"><b>Status</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceName}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                  {row.deviceType===null?null: (deviceTypeNames[row.deviceType]===undefined? null: deviceTypeNames[row.deviceType].name)}\r\n                   </TableCell>\r\n                  <TableCell align=\"center\">{row.deviceIP}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceStatus==='online'?\r\n                  <Tooltip title=\"Online\">\r\n                  <SignalCellularAltIcon style={{ color: \"#4caf50\" }}/>\r\n                  </Tooltip>\r\n                  :\r\n                  <Tooltip title=\"Offline\">\r\n                  <SignalCellularConnectedNoInternet0BarIcon style={{ color: \"#f44336\" }}/>\r\n                  </Tooltip>\r\n                  }</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Devices };","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu, Unlock } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, GateModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getGate, alertService, delGate, getObjectTypes, openGate, getProjectInfo, getProjects} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\n\r\nexport function Gates (){\r\n    let { projectID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [gateTypes, setGateTypes] = useState([]);\r\n  const [gateTypeNames, setGateTypeNames] = useState([]);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    getGate(projectID, [\"gateID\", \"gateName\", \"gateType\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate, there was an error!\", error);\r\n    });\r\n    getObjectTypes(\"gate\")\r\n    .then(async (data) => {\r\n      setGateTypeNames(data.message);\r\n      setGateTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Gate Types!\", error);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const openGateFunc = (gateID, gateName) =>{\r\n    openGate(gateID)\r\n    .then(async (data) => {\r\n      alertService.success(\"Opened Gate \"+gateName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Open Gate!\", error);\r\n    });\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const devices = (gateID) => {\r\n    history.push(pathname +\"/\"+ String(gateID));\r\n  };\r\n\r\n  const del = async (gateID) => {\r\n    delGate(gateID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Gate Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this gate?\"\r\n      />\r\n      <GateModal\r\n        gateTypes = {gateTypes}\r\n        hide={toggle.edit}\r\n        gateID = {curID}\r\n        newState = {modal}\r\n        projectID = {projectID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Gates</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"d-flex align-items-center\">\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      <div style={{\"flex-grow\":\"1\"}}></div>\r\n        <Form inline onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    setModal(true);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.gateID}</TableCell>\r\n                  <TableCell align=\"center\">{row.gateName}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                  {row.gateType===null?null: (gateTypeNames[row.gateType]===undefined? null: gateTypeNames[row.gateType].name)}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Devices\">\r\n                    <IconButton \r\n                    style={{padding:\"5px 10px\"}}\r\n                    onClick={() => {\r\n                        devices(row.gateID);\r\n                    }}>\r\n                      <Cpu\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton\r\n                    style={{padding:\"5px 10px\"}}\r\n                     onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        setModal(false);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Open Gate\">\r\n                    <IconButton\r\n                    style={{padding:\"5px 10px\"}}\r\n                     onClick={() => {\r\n                        openGateFunc(row.gateID, row.gateName);\r\n                    }}>\r\n                      <Unlock\r\n                        size={21}\r\n                        color=\"green\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton\r\n                    style={{padding:\"5px 10px\"}}\r\n                     onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Gates };","import React, { useState, useEffect } from \"react\";\r\nimport { Breadcrumb } from \"react-bootstrap\";\r\nimport {Input , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { TablePaginationActions } from \"../../components/index.js\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getProjectInfo, alertService} from '../../services/index.js';\r\n\r\nimport { PencilSquare } from \"react-bootstrap-icons\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport function LedConfig(props) {\r\n  let {projectID} = useParams();\r\n  const [rows, setRows] = useState([]);\r\n  const [curID, setCurID] = useState(null);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    trigger: \"\",\r\n    voiceMsg: \"\",\r\n    textMsg: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    /*getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setInitialRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n    let res = [\r\n        {\r\n            id: 1,\r\n            trigger: \"Trigger 1\",\r\n            voiceMsg: \"Sample 1\",\r\n            textMsg: \"Sample 01\"\r\n        },\r\n        {\r\n            id: 2,\r\n            trigger: \"Trigger 2\",\r\n            voiceMsg: \"Sample 2\",\r\n            textMsg: \"Sample 02\"\r\n        },\r\n        {\r\n            id: 3,\r\n            trigger: \"Trigger 3\",\r\n            voiceMsg: \"Sample 3\",\r\n            textMsg: \"Sample 03\"\r\n        },\r\n        {\r\n            id: 4,\r\n            trigger: \"Trigger 4\",\r\n            voiceMsg: \"Sample 4\",\r\n            textMsg: \"Sample 04\"\r\n        },\r\n        {\r\n            id: 5,\r\n            trigger: \"Trigger 5\",\r\n            voiceMsg: \"Sample 5\",\r\n            textMsg: \"Sample 05\"\r\n        },\r\n        {\r\n            id: 6,\r\n            trigger: \"Trigger 6\",\r\n            voiceMsg: \"Sample 6\",\r\n            textMsg: \"Sample 06\"\r\n        }\r\n    ];\r\n    setRows(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const save = () =>{\r\n    // API\r\n    //reload();\r\n  }\r\n\r\n  const edit = (vals) =>{\r\n    const {id, trigger, voiceMsg, textMsg} = vals;\r\n    setState({\r\n        trigger, \r\n        voiceMsg, \r\n        textMsg});\r\n    setCurID(id);\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setCurID(null);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>LED Configuration</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Breadcrumb>\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      </Breadcrumb>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Trigger</TableCell>\r\n                <TableCell align=\"center\">Voice Message</TableCell>\r\n                <TableCell align=\"center\">Text Message</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.trigger}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"voiceMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.voiceMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.voiceMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"textMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.textMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.textMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"right\"  style={{padding:0}}>\r\n                    {curID === null?\r\n                        (<IconButton onClick={() => edit(row)}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            color=\"royalblue\"\r\n                            />\r\n                        </IconButton>)\r\n                        :(\r\n                        curID === row.id?\r\n                        <div>\r\n                            <IconButton onClick={() => save()}>\r\n                                <SaveIcon\r\n                                size={21}\r\n                                color=\"primary\"\r\n                                />\r\n                            </IconButton>\r\n                            <IconButton onClick={() => setCurID(null)}>\r\n                                <CloseIcon\r\n                                size={21}\r\n                                color=\"error\"\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                        :\r\n                        (<IconButton disabled = {true}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            />\r\n                        </IconButton>)\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { LedConfig };\r\n","import {\r\n  ProjectForm,\r\n  BusinessDetails,\r\n  Devices,\r\n  LedConfig,\r\n  Gates\r\n} from \"./projectSubPages/index.js\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport {Nav, Tab} from \"react-bootstrap\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nexport function EditProject(props) {\r\n  let history = useHistory();\r\n  let { path, url } = useRouteMatch();\r\n  let {pathname} = useLocation();\r\n  let page = pathname.split('/')[3];\r\n  const direct = (path) =>{\r\n    history.push(url+path);\r\n  }\r\n  return (\r\n    <div className=\"tabModal\" style={{background:\"transparent\"}}>\r\n      <Tab.Container id=\"left-tabs-example\" >\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/info\")}} active = {page===\"info\"}>Infomation</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/business\")}} active = {page===\"business\"}>Business</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/gate\")}} active = {page===\"gate\"}>Gates</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/ledconfig\")}} active = {page===\"ledconfig\"}>LED Config</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n          <Switch>\r\n            <Route exact path={`${path}/info`}>\r\n              <ProjectForm />\r\n            </Route>\r\n            <Route exact path={`${path}/business`}>\r\n              <BusinessDetails />\r\n            </Route>\r\n            <Route exact path={`${path}/gate/:gateID`}>\r\n              <Devices />\r\n            </Route>\r\n            <Route exact path={`${path}/gate`}>\r\n              <Gates />\r\n            </Route>\r\n            <Route exact path={`${path}/ledconfig`}>\r\n              <LedConfig />\r\n            </Route>\r\n            <Route path={path}>\r\n              <Redirect to={`${url}/info`} />\r\n            </Route>\r\n          </Switch>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { EditProject };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Modal } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, \r\n  getSpecialPlate,\r\n  delSpecialPlate,\r\n  updateSpecialPlate,\r\n  addSpecialPlate } from '../services/index.js';\r\n\r\nexport function PlateRegex({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false,\r\n    edit: false\r\n  });\r\n  const [state, setState] = useState({\r\n    projectID: NaN,\r\n    actualPlate: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectID: NaN,\r\n    actualPlate: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectID: NaN,\r\n      actualPlate: \"\"\r\n    });\r\n    setCurState({\r\n      projectID: NaN,\r\n      actualPlate: \"\"\r\n    });\r\n  }\r\n  const [val, setVal] = useState({\r\n    projectID: NaN,\r\n    matchPlate: \"\",\r\n    actualPlate: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const reload = () =>{\r\n    getSpecialPlate([\"projectID\", \"matchPlate\", \"actualPlate\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  const func = async (val) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element.projectID] = element.projectName;\r\n    });\r\n    return await temp;\r\n  };\r\n  useEffect(() => {\r\n    getProjects([\"projectID\", \"projectName\"])\r\n    .then(async (data) => {\r\n      setProjects(data.content);\r\n      func(data.content).then(async(list)=>{\r\n        setProjectNames(await list);\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },projectNames);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleChangeVal = (e) =>{\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setVal((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (values) => {\r\n    let {projectID, matchPlate, actualPlate} = values;\r\n    setValidated(false);\r\n    setVal({\r\n        projectID,\r\n        matchPlate,\r\n        actualPlate\r\n      });\r\n    toggleModal(\"edit\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectID, actualPlate } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          (Number.isNaN(projectID) || row[\"projectID\"] === projectID) &&\r\n          String(row[\"actualPlate\"]).toLowerCase().indexOf(actualPlate.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const insert = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n      addSpecialPlate(val)\r\n      .then(async (data) => {\r\n        reload();\r\n        toggleModal(\"add\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const edit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n        updateSpecialPlate(val)\r\n        .then(async (data) => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const del = (id) => {\r\n    delSpecialPlate(id)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this regex?\"\r\n      />\r\n      <Modal show={toggle.add} onHide={()=>toggleModal(\"add\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={insert}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={5}>\r\n            Project Name\r\n          </Form.Label>\r\n          <Col sm={6}>\r\n              <Form.Control\r\n                custom\r\n                required\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChangeVal}\r\n                value={val.projectID}\r\n              >\r\n                  <option value={null}>--Select a Project--</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Project Name is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n        </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"add\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    <Modal show={toggle.edit} onHide={()=>toggleModal(\"edit\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={edit}>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"edit\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Plate Regex</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectID}\r\n              >\r\n                  <option value={null}>All Projects</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"actualPlate\"\r\n                placeholder=\"Actual Plate\"\r\n                onChange={handleChange}\r\n                value={state.actualPlate}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                setVal({\r\n                    projectID: \"\",\r\n                    matchPlate: \"\",\r\n                    actualPlate: \"\"\r\n                    });\r\n                  setValidated(false);\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Project</TableCell>\r\n                <TableCell align=\"center\">Regex of Plate</TableCell>\r\n                <TableCell align=\"center\">Actual Plate</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.matchPlate}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {projectNames[row.projectID]}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.matchPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.actualPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {activateModal(row)}}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.matchPlate);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { PlateRegex };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { ImageModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getMovementLogs, getObjectTypes, alertService } from '../services/index.js';\r\nimport { LockFill, UnlockFill } from \"react-bootstrap-icons\";\r\n\r\nimport DatePicker from 'react-datepicker';\r\n\r\nexport function Records({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n  const [gateTypes, setGateTypes] = useState({});\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const  queryFields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\"\r\n  ];\r\n  const fieldPlaceholder = {\r\n    projectName: \"Project Name\",\r\n    vehicleType: \"Vehicle Type\",\r\n    isOpened: \"Is Opened\",\r\n    gateName: \"Gate Name\",\r\n    gateType: \"Gate Type\",\r\n    originalPlate: \"Original Plate\",\r\n    confirmedPlate: \"Actual Plate\",\r\n    detectionTime: \"Detection Time\",\r\n    confirmedTime: \"Confirmed Time\",\r\n    image1: \"Image 1\",\r\n    image2: \"Image 2\",\r\n    image3: \"Image 3\",\r\n    plateImage: \"Plate Image\"\r\n  };\r\n  const fields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"isOpened\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"detectionTime\",\r\n    \"confirmedTime\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\",\r\n    \"image1\",\r\n    \"image2\",\r\n    \"image3\",\r\n    \"plateImage\"\r\n  ];\r\n  const fieldLength = {\r\n    projectName: \"120px\",\r\n    vehicleType: \"120px\",\r\n    isOpened: \"120px\",\r\n    gateName: \"120px\",\r\n    gateType: \"120px\",\r\n    originalPlate: \"120px\",\r\n    confirmedPlate: \"120px\",\r\n    detectionTime: \"230px\",\r\n    confirmedTime: \"230px\",\r\n    image1: \"90px\",\r\n    image2: \"90px\",\r\n    image3: \"90px\",\r\n    plateImage: \"90px\"\r\n  };\r\n  const fieldHeight = {\r\n    image1: \"50px\",\r\n    image2: \"50px\",\r\n    image3: \"50px\",\r\n    plateImage: \"50px\",\r\n    isOpened: \"30px\"\r\n  }\r\n  const [state, setState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\",\r\n    startTime: null,\r\n    endTime: null\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\",\r\n    startTime: null,\r\n    endTime: null\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const reload = () =>{\r\n    getMovementLogs(fields.concat(\"logID\"), [])\r\n      .then(async (data) => {\r\n        console.log(data.content.slice(0,6));\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n    getObjectTypes(\"gate\")\r\n    .then(async (data) => {\r\n      setGateTypes(data.message);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Gate Types!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    if(id===\"curField\"){\r\n      setState((prevState) => ({\r\n        curField: value,\r\n        val: \"\"\r\n      }));\r\n    }else{\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { curField, val } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[curField].toLowerCase().indexOf(val.toLowerCase()) >= 0 \r\n      ).sort(\r\n        (a,b)=> (a.detectionTime < b.detectionTime) ? 1 : -1\r\n      )\r\n    );\r\n  };\r\n  \r\n  const reset = async (e) =>{\r\n    setState({\r\n      curField: \"projectName\",\r\n      val: \"\",\r\n      startTime: null,\r\n      endTime: null\r\n    });\r\n    setCurState({\r\n      curField: \"projectName\",\r\n      val: \"\",\r\n      startTime: null,\r\n      endTime: null\r\n    });\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ImageModal\r\n      src = {imageSrc}\r\n      toggleModal={()=>{\r\n        setImageSrc(null);\r\n      }}\r\n      />\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Entry Exit Records</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"curField\"\r\n                onChange={handleChange}\r\n                value={state.curField}\r\n              >\r\n                  {queryFields.map((queryField)=>(\r\n                      <option value={queryField}>{fieldPlaceholder[queryField]}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"val\"\r\n                placeholder={fieldPlaceholder[state.curField]}\r\n                onChange={handleChange}\r\n                value={state.val}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\" className=\"d-flex\">\r\n            <Form.Label>From:</Form.Label>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n            <DatePicker\r\n            isClearable\r\n              className=\"dateRecord\"\r\n              selected={state.startTime}\r\n              maxDate={state.endTime}\r\n              popperClassName=\"dateTimePopper\"\r\n              className=\"form-control\"\r\n              placeholderText=\"YYYY-MM-DD HH:MM:SS\"\r\n              onChange={date => handleChange({\r\n                target:{\r\n                  value:date,\r\n                  id: \"startTime\"\r\n                }\r\n              })}\r\n              showTimeSelect\r\n              dateFormat=\"yyyy-MM-dd\"\r\n              timeFormat=\"HH:mm:ss\"\r\n              timeIntervals={15}\r\n              timeCaption=\"time\"\r\n              dateFormat=\"yyyy-MM-dd HH:mm:ss\"\r\n              title=\"Start Time\"\r\n              clearButtonClassName=\"dateTimeClear\"\r\n            />\r\n            </Col>\r\n            <Col sm=\"auto\" className=\"d-flex\">\r\n            <Form.Label>To:</Form.Label>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n            <DatePicker\r\n            isClearable\r\n              className=\"dateRecord\"\r\n              selected={state.endTime}\r\n              minDate={state.startTime}\r\n              popperClassName=\"dateTimePopper\"\r\n              className=\"form-control\"\r\n              placeholderText=\"YYYY-MM-DD HH:MM:SS\"\r\n              onChange={date => handleChange({\r\n                target:{\r\n                  value:date,\r\n                  id: \"endTime\"\r\n                }\r\n              })}\r\n              showTimeSelect\r\n              dateFormat=\"yyyy-MM-dd\"\r\n              timeFormat=\"HH:mm:ss\"\r\n              timeIntervals={15}\r\n              timeCaption=\"time\"\r\n              dateFormat=\"yyyy-MM-dd HH:mm:ss\"\r\n              title=\"Start Time\"\r\n              clearButtonClassName=\"dateTimeClear\"\r\n            />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper} className=\"overflowTable scrollbar-grey\">\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {fields.map((field) =>(\r\n                  <TableCell align=\"center\" style={{\"min-width\":fieldLength[field]}}>{fieldPlaceholder[field]}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.logID}>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.vehicleType}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.isOpened === true?\r\n                    <UnlockFill color=\"#64D381\" size={25} />:\r\n                    <LockFill color=\"red\" size={25} />}\r\n            </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.gateName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.gateType===null?null: (gateTypes[row.gateType]===undefined? null: gateTypes[row.gateType].name)}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.detectionTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.confirmedTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.originalPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.confirmedPlate===null?null:\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.confirmedPlate}</u>\r\n                      </div>\r\n                    </div>}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image1)} \r\n                    style={{\"height\":fieldHeight.image1}} \r\n                    src={row.image1}/>\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image2)} \r\n                    style={{\"height\":fieldHeight.image2}} \r\n                    src={row.image2} />\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image3)} \r\n                    style={{\"height\":fieldHeight.image3}} \r\n                    src={row.image3} />\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.plateImage)} \r\n                    style={{\"height\":fieldHeight.plateImage}} \r\n                    src={row.plateImage} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TableRow className=\"d-flex justify-content-center\">\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 50]}\r\n              colSpan={13}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n        </TableRow>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Records };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport function ParkRecords({ match }) {\r\n  return (<div className=\"d-flex justify-content-center\"><h1>Pending API</h1></div>);\r\n}\r\n\r\nexport default { ParkRecords };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, RulesModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getGate, alertService, delGate, getProjects, getAccessRule, delAccessRule} from '../services/index.js';\r\nimport { Directions, MonetizationOn } from \"@material-ui/icons\";\r\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nexport function ParkingRules (){\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [project,setProject] = useState(\"\");\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const [gateNames, setGateNames] = useState({});\r\n  const [projects,setProjects] = useState([]);\r\n  const func = async (val, inputField, outputField) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element[inputField]] = element[outputField];\r\n    });\r\n    return await temp;\r\n  };\r\n  const reloadProjects = () =>{\r\n    getProjects([\"projectID\", \"projectName\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setProjects(data.content);\r\n        func(data.content, \"projectID\", \"projectName\").then(async(list)=>{\r\n          setProjectNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reloadProjects();\r\n  }, [dummy]);\r\n\r\n  const reload = () =>{\r\n    getAccessRule(project, [\"accessRuleID\", \"accessRuleName\", \"isChargeable\", \"gates\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Get Gate, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  const reloadGates = () =>{\r\n    getGate(project,[\"gateID\",\"gateName\"])\r\n      .then(async (data) => {\r\n        func(data.content, \"gateID\", \"gateName\").then(async(list)=>{\r\n          setGateNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n    reloadGates();\r\n  },[project]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (accessRuleID) => {\r\n    delAccessRule(accessRuleID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Rule Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Rule, There was an error!\", error);\r\n    });\r\n  };\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this rule?\"\r\n      />\r\n      {toggle.edit?\r\n      <RulesModal\r\n        hide={toggle.edit}\r\n        projectID = {project}\r\n        projectName = {projectNames[project]}\r\n        accessRuleID = {curID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />:null}\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Access Rules</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                onChange={(e)=>{\r\n                  setProject(e.target.value);\r\n                }}\r\n                value={project}\r\n              >\r\n                <option value=\"\">--Select a Project--</option>\r\n                  {projects.map((val)=>(\r\n                      <option value={val.projectID}>{val.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n              disabled={project===\"\"}\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>Project</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Gates</b></TableCell>\r\n                <TableCell align=\"center\"><b>Chargeable</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{projectNames[project]}</TableCell>\r\n                  <TableCell align=\"center\">{row.accessRuleName}</TableCell>\r\n                  <TableCell align=\"center\">{row.gates===null?null:((row.gates).map((gate)=>(\r\n                    <div>{gate===null?null:gateNames[gate]} <br/></div> \r\n                  )))}</TableCell>\r\n                  <TableCell align=\"center\">{row.isChargeable?\r\n                  <AttachMoneyIcon style={{color:\"#66bb6a\"}}/>\r\n                  :<MoneyOffIcon style={{color:\"red\"}}/>\r\n                  }</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.accessRuleID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.accessRuleID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ParkingRules };","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, WhitelistModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {alertService, getProjects, getAccessRule, \r\n    getWhitelistEntry,\r\n    delWhitelistEntryInfo} from '../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\n\r\nexport function Whitelist (){\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [pNumber, setPNumber] = useState(\"\");\r\n  const [curPNo, setCurPNo] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [project,setProject] = useState(\"\");\r\n  const [curID, setCurID] = useState(null);\r\n  const [dummy, setDummy] = useState(false);\r\n  const [accessRules, setAccessRules] = useState([]);\r\n  const [accessRuleVals, setAccessRuleVals] = useState({});\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const [projects,setProjects] = useState([]);\r\n  const func = async (val, inputField, outputField) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element[inputField]] = element[outputField];\r\n    });\r\n    return await temp;\r\n  };\r\n\r\n  const reloadProjects = () =>{\r\n    getProjects([\"projectID\", \"projectName\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setProjects(data.content);\r\n        func(data.content, \"projectID\", \"projectName\").then(async(list)=>{\r\n          setProjectNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Project, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    reloadProjects();\r\n  }, [dummy]);\r\n\r\n  \r\n  const reloadAccessRules = () =>{\r\n    getAccessRule(project,[\"accessRuleID\",\"accessRuleName\",\"projectID\"])\r\n      .then(async (data) => {\r\n        setAccessRules(data.content);\r\n        func(data.content,\"accessRuleID\", \"accessRuleName\").then(async(list)=>{\r\n          setAccessRuleVals(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Access Rule, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reloadAccessRules();\r\n    setPNumber(\"\");\r\n    setCurPNo(\"\");\r\n  },[project]);\r\n\r\n\r\n  const reload = () =>{\r\n    getWhitelistEntry([\"plateNumber\", \"accessRuleID\", \"tag\", \"startDateTime\",\"endDateTime\"])\r\n    .then(async (data) => {\r\n        setInitialRows(\r\n            data.content.filter((entry)=>\r\n                entry.accessRuleID !== null &&\r\n                accessRuleVals[entry.accessRuleID] !== undefined\r\n            )\r\n        );\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Get entry, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },[accessRuleVals]);\r\n\r\n  const filter = () => {\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[\"plateNumber\"].toLowerCase().indexOf(pNumber.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(()=>{\r\n    filter();\r\n  },[initialRows, pNumber]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (plateNumber, accessRuleID) => {\r\n    delWhitelistEntryInfo(plateNumber, accessRuleID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Entry Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Entry, There was an error!\", error);\r\n    });\r\n  };\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID.plateNumber, curID.accessRuleID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this entry?\"\r\n      />\r\n      {toggle.edit?\r\n      <WhitelistModal\r\n        hide={toggle.edit}\r\n        projectName = {projectNames[project]}\r\n        ID = {curID}\r\n        accessRules = {accessRules}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />:null}\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Whitelist Entries</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row className=\"d-flex\">\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                onChange={(e)=>{\r\n                  setProject(e.target.value);\r\n                }}\r\n                value={project}\r\n              >\r\n                <option value=\"\">--Select a Project--</option>\r\n                  {projects.map((val)=>(\r\n                      <option value={val.projectID}>{val.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n              disabled={project===\"\"}\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n            <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                placeholder=\"Plate No.\"\r\n                onChange={(e)=>{\r\n                    setCurPNo(e.target.value);\r\n                }}\r\n                value={pNumber}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-primary\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    setPNumber(curPNo);\r\n                }}\r\n              >\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n            <Button type=\"button\" variant=\"secondary\" onClick={()=>{\r\n                setCurPNo(\"\");\r\n                setPNumber(\"\");\r\n            }}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"center\"><b>Plate Number</b></TableCell>\r\n                <TableCell align=\"center\"><b>Project</b></TableCell>\r\n                <TableCell align=\"center\"><b>Access Rule</b></TableCell>\r\n                <TableCell align=\"center\"><b>Tag</b></TableCell>\r\n                <TableCell align=\"center\"><b>Start Date</b></TableCell>\r\n                <TableCell align=\"center\"><b>End Date</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.plateNumber}</u>\r\n                      </div>\r\n                    </div>\r\n                </TableCell>\r\n                  <TableCell align=\"center\">{projectNames[project]}</TableCell>\r\n                  <TableCell align=\"center\">{row.accessRuleID === null? null: accessRuleVals[row.accessRuleID]}</TableCell>\r\n                  <TableCell align=\"center\">{row.tag}</TableCell>\r\n                  <TableCell align=\"center\">{row.startDateTime}</TableCell>\r\n                  <TableCell align=\"center\">{row.endDateTime}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {\r\n                        setCurID({\r\n                            accessRuleID: row.accessRuleID,\r\n                            plateNumber: row.plateNumber    \r\n                        });\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID({\r\n                            accessRuleID: row.accessRuleID,\r\n                            plateNumber: row.plateNumber    \r\n                        });\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Whitelist };","import React, { useContext } from \"react\";\nimport { store } from \"./store.js\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport \"./styles.css\";\nimport \"./assets/scrollbar.css\";\nimport { NavBar, AlertGroup } from \"./components/index.js\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport { Home, Login, Projects, EditProject, PlateRegex, Records, ParkRecords, ParkingRules, Whitelist } from \"./pages/index.js\";\n\nclass DebugRouter extends Router {\n  constructor(props) {\n    super(props);\n    console.log(\"initial history is: \", JSON.stringify(this.history, null, 2));\n    this.history.listen((location, action) => {\n      console.log(\n        `The current URL is ${location.pathname}${location.search}${location.hash}`\n      );\n      console.log(\n        `The last navigation action was ${action}`,\n        JSON.stringify(this.history, null, 2)\n      );\n    });\n  }\n}\n\nexport function App() {\n  return (\n    // <DebugRouter>\n    <Router>\n      <Switch>\n        <PrivateRoute path=\"/home\">\n          <Home />\n        </PrivateRoute>\n        <PrivateRoute path=\"/project/:projectID\">\n          <EditProject />\n        </PrivateRoute>\n        <PrivateRoute path=\"/project\">\n          <Projects />\n        </PrivateRoute>\n        <PrivateRoute path=\"/regex\">\n          <PlateRegex />\n        </PrivateRoute>\n        <PrivateRoute path=\"/records\">\n          <Records />\n        </PrivateRoute>\n        <PrivateRoute path=\"/parking\">\n          <ParkRecords />\n        </PrivateRoute>\n        <PrivateRoute path=\"/accessRules\">\n          <ParkingRules />\n        </PrivateRoute>\n        <PrivateRoute path=\"/whitelist\">\n          <Whitelist />\n        </PrivateRoute>\n        <PublicRoute path=\"/\">\n          <Login />\n        </PublicRoute>\n      </Switch>\n    </Router>\n    // </DebugRouter>\n  );\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  let auth = globalState.auth;\n  let toggled = globalState.toggled;\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth ? (\n          <div className=\"h-100\">\n              <AlertGroup />\n            <NavBar />\n            <div id=\"content-body\" className={toggled?\"content-body-collapsed\":\"content-body-expand\"}>\n              {React.cloneElement(children, { params: props.match.params })}\n            </div>\n          </div>\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ children, ...rest }) {\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  let auth = globalState.auth;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          <Redirect\n            to={{\n              pathname: \"/home\",\n              state: { from: location }\n            }}\n          />\n        ) : \n        <div className=\"h-100\">\n        <AlertGroup />\n          {children}\n        </div>\n      }\n    />\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { StateProvider } from \"./store.js\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StateProvider>\n    <StrictMode>\n      <App />\n    </StrictMode>\n  </StateProvider>,\n  rootElement\n);\n"],"sourceRoot":""}