{"version":3,"sources":["store.js","components/NavBar.js","components/ConfirmModal.js","components/QueryModal.js","services/alertService.js","services/api.js","components/DeviceModal.js","components/GateModal.js","components/AlertGroup.js","components/TablePaginationActions.js","components/RulesModal.js","components/ImageModal.js","pages/Home.js","pages/Login.js","pages/Projects.js","pages/projectSubPages/ProjectForm.js","pages/projectSubPages/BusinessDetails.js","pages/projectSubPages/Devices.js","pages/projectSubPages/Gates.js","pages/projectSubPages/LedConfig.js","pages/EditProject.js","pages/PlateRegex.js","assets/closeGate.png","assets/openGate.jpg","pages/Records.js","pages/ParkRecords.js","pages/ParkingRules.js","App.js","index.js"],"names":["initialState","auth","user","server_URL","toggled","store","createContext","Provider","StateProvider","children","useReducer","state","action","type","value","Error","dispatch","NavBar","storeContext","useContext","globalState","history","useHistory","direct","path","console","log","push","className","collapsed","width","iconShape","style","icon","fontSize","onClick","title","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","Item","data-value","href","Divider","Text","ConfirmModal","props","toggleModal","success","hide","body","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","alertSubject","Subject","defaultId","alertService","onAlert","asObservable","pipe","filter","x","message","options","alert","alertType","error","info","warn","clear","next","returnFunc","response","a","json","data","ok","content","status","Promise","reject","getProjects","columns","requestOptions","method","headers","JSON","stringify","authID","serviceName","objName","fetch","then","getGate","ID","filters","projectID","delProject","delGate","gateID","delDevice","deviceID","getObjectTypes","obj","DeviceModal","newState","deviceTypes","useState","validated","setValidated","setState","dummy","useEffect","deviceName","deviceType","deviceCarpark","manufacturer","manufacturerCode","direction","isPrimaryDevice","getDeviceInfo","catch","handleChange","e","filler","e2","undefined","target","prevState","update","tempState","modifyParams","updateDeviceInfo","create","values","newDeviceReq","createDevice","Form","noValidate","onSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","Group","as","Row","Label","column","sm","Col","Control","placeholder","readOnly","required","name","onChange","Feedback","custom","map","deviceStatus","Check","checked","GateModal","gateTypes","whiteListTags","setWhiteListTags","newInitialState","gateName","gateType","isChargeable","ledOnTime","ledOffTime","allowedTypes","getGateInfo","getWhitelistTags","whitelistTags","handleTagChange","idx","indexOf","concat","tempList","splice","updateGateInfo","newGateReq","createGate","showSeconds","input","tag","index","includes","label","AlertGroup","alerts","this","subscription","subscribe","setTimeout","removeAlert","unsubscribe","length","Alert","dismissible","onClose","React","Component","TablePaginationActions","count","page","rowsPerPage","onChangePage","flexShrink","right","IconButton","event","disabled","aria-label","Math","ceil","max","RulesModal","accessRuleID","projectName","gates","setGates","curGates","setCurGates","initialGates","setInitialGates","loading","setLoading","func","val","temp","forEach","element","accessRuleName","getAccessRuleInfo","Object","keys","gate","list","handleGateChange","updateAccessRuleInfo","createAccessRule","margin","Spinner","size","animation","role","ImageModal","src","centered","Home","devices","setDevices","setDeviceTypes","getAllDevice","device","Jumbotron","Card","color","Typography","component","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","Login","username","password","document","getElementById","innerText","Projects","match","initialRows","setInitialRows","rows","setRows","delete","add","toggle","setToggle","curID","setCurID","location","projectType","curState","setCurState","reload","modal","prevVal","curRows","toLowerCase","insert","contactNumber","maCompany","equipManu","addProject","del","setPage","setRowsPerPage","emptyRows","min","Breadcrumb","active","inline","slice","scope","padding","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","ProjectForm","useParams","projectTypes","setProjectTypes","getProjectInfo","entries","updateProjectInfo","country","String","isValid","span","offset","BusinessDetails","barrierDelay","networkWarningDuration","instantImgUpload","vehicleColorDetect","localImgStore","myFormat","num","InputGroup","strict","format","Devices","useLocation","pathname","edit","setModal","deviceTypeNames","setDeviceTypeNames","getDevice","Tooltip","Gates","setGateTypes","gateTypeNames","setGateTypeNames","openGateFunc","openGate","LedConfig","trigger","voiceMsg","textMsg","Input","vals","EditProject","useRouteMatch","url","split","Tab","Container","xs","exact","to","PlateRegex","NaN","actualPlate","matchPlate","setVal","projects","setProjects","projectNames","setProjectNames","getSpecialPlate","handleChangeVal","Number","isNaN","delSpecialPlate","addSpecialPlate","project","updateSpecialPlate","activateModal","Records","imageSrc","setImageSrc","fieldPlaceholder","vehicleType","isOpened","originalPlate","confirmedPlate","detectionTime","confirmedTime","image1","image2","image3","plateImage","fields","fieldLength","fieldHeight","curField","startTime","endTime","getMovementLogs","sort","b","reset","queryField","isClearable","selected","maxDate","popperClassName","date","minDate","field","closeGate","logID","ParkRecords","ParkingRules","setProject","gateNames","setGateNames","inputField","outputField","getAccessRule","Router","PrivateRoute","rest","render","cloneElement","params","from","PublicRoute","App","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.a056fcba.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  auth: true,\r\n  user: \"huajun\",\r\n  server_URL: \"http://34.87.50.188:8000/api/router\",\r\n  toggled: true\r\n};\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"setAuth\":\r\n        return {\r\n          ...state,\r\n          auth: action.value\r\n        };\r\n      case \"setUser\":\r\n        return {\r\n          ...state,\r\n          user: action.value\r\n        };\r\n      case \"setToggled\":\r\n        return {\r\n          ...state,\r\n          toggled: !state.toggled\r\n        };\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { store, StateProvider };\r\n","import {\r\n  SidebarContent,\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SubMenu\r\n} from \"react-pro-sidebar\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport { List } from \"react-bootstrap-icons\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { store } from \"../store.js\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalParkingIcon from '@material-ui/icons/LocalParking';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nexport function NavBar() {\r\n  const storeContext = useContext(store);\r\n  const { dispatch } = storeContext;\r\n  const globalState = storeContext.state;\r\n  const {toggled, user}  = globalState;\r\n  let history = useHistory();\r\n  const logout = () => {\r\n    dispatch({\r\n      type: \"setAuth\",\r\n      value: false\r\n    });\r\n    dispatch({\r\n      type: \"setUser\",\r\n      value: \"\"\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n  const direct = (path) => {\r\n    console.log(\"clicked\", path);\r\n    history.push(path);\r\n  };\r\n  const toggleSideBar = () => {\r\n    dispatch({\r\n      type: \"setToggled\"\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"h-100 fixed-top clickThrough\">\r\n      <ProSidebar\r\n        className=\"clickAble navbar-default navbar-static-top sideBar\"\r\n        collapsed={toggled}\r\n        width=\"250px\"\r\n        //collapsedWidth=\"px\"\r\n      >\r\n        <SidebarContent>\r\n          <Menu iconShape=\"circle\">\r\n            <MenuItem \r\n              style={{\"background\":\"#2c3b41\",\"height\":\"60px\", \"pointer-events\":\"none\"}}\r\n              className=\"d-flex justify-content-center align-items-center\">\r\n              <div style={{\"padding-top\":\"10px\", \"color\":\"white\"}}>\r\n                <h5>Admin</h5>\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem \r\n              icon={<AccountCircleIcon fontSize='large'/>}\r\n              style={{\"pointer-events\":\"none\", \"border-bottom\":\"1px solid gray\"}}>\r\n              <div style={{ \"color\":\"white\"}}>\r\n                Welcome, {user}\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<HomeIcon onClick={()=>direct(\"/home\")}/>}>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<InfoIcon onClick={()=>direct(\"/project\")} />}>\r\n              <div onClick={()=>direct(\"/projet\")}>\r\n                Project\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<CodeIcon onClick={()=>direct(\"/regex\")} />}>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<StorageIcon onClick={()=>direct(\"/records\")} />}>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n                Exit/Entry Records\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<LocalParkingIcon onClick={()=>direct(\"/parking\")} />}>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </MenuItem>\r\n            <SubMenu title=\"Access\" icon={<PaymentIcon/>}>\r\n              <MenuItem  onClick={()=>direct(\"/accessRules\")} >Access Rules</MenuItem>\r\n              <MenuItem>Tracking</MenuItem>\r\n            </SubMenu>\r\n          </Menu>\r\n        </SidebarContent>\r\n      </ProSidebar>\r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" className={\"clickAble navBar\"+(toggled?\" navBar-collapsed\":\" navBar-expand\")}>\r\n        <Navbar.Brand \r\n        className=\"sideBar\" \r\n        onClick={toggleSideBar}>\r\n          <List />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"nav-dropdown\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto nav-dropdown\">\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/project\")}>\r\n                Project\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n                Log Records\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </Nav.Link>\r\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item data-value=\"/home\" onClick={direct}>\r\n                Action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Navbar.Text>\r\n            <Nav.Link onClick={logout}>Signout</Nav.Link>\r\n          </Navbar.Text>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { NavBar };\r\n","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nexport function ConfirmModal(props) {\r\n  let toggleModal = props.toggleModal;\r\n  let success = props.success;\r\n  let hide = props.hide;\r\n  let body = props.body;\r\n  let title = props.title;\r\n  return (\r\n    <Modal show={hide} onHide={toggleModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{body}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={toggleModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={()=>{\r\n          success();\r\n        }}>\r\n          Confirm\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { ConfirmModal};\r\n","import { Button, Modal, Form } from \"react-bootstrap\";\r\nimport {useState} from 'react';\r\n\r\nexport function QueryModal(props) {\r\n    let toggleModal = props.toggleModal;\r\n    let success = props.success;\r\n    let hide = props.hide;\r\n    let body = props.body;\r\n    let title = props.title;\r\n    const [value,setValue] = useState(\"\");\r\n    const handleChange = (e) =>{\r\n      setValue(e.target.value);\r\n    }\r\n    const exit = () =>{\r\n      setValue(\"\");\r\n      toggleModal();\r\n    }\r\n    return (\r\n      <Modal show={hide} onHide={exit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Label>{body}</Form.Label>\r\n            <Form.Control \r\n            value={value}\r\n            onChange={handleChange}\r\n            />\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={exit}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>{\r\n              success(value);\r\n              exit();\r\n              }}>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default {QueryModal};","import { Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nconst alertSubject = new Subject();\r\nconst defaultId = 'default-alert';\r\n\r\nexport const alertService = {\r\n    onAlert,\r\n    success,\r\n    error,\r\n    info,\r\n    warn,\r\n    alert,\r\n    clear\r\n};\r\n\r\nexport const alertType = {\r\n    success: 'success',\r\n    error: 'danger',\r\n    info: 'info',\r\n    warning: 'warning'\r\n}\r\n\r\n// enable subscribing to alerts observable\r\nfunction onAlert(id = defaultId) {\r\n    return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\r\n}\r\n\r\n// convenience methods\r\nfunction success(message, options) {\r\n    alert({ ...options, type: alertType.success, message });\r\n}\r\n\r\nfunction error(message, options) {\r\n    alert({ ...options, type: alertType.error, message });\r\n}\r\n\r\nfunction info(message, options) {\r\n    alert({ ...options, type: alertType.info, message });\r\n}\r\n\r\nfunction warn(message, options) {\r\n    alert({ ...options, type: alertType.warning, message });\r\n}\r\n\r\n// core alert method\r\nfunction alert(alert) {\r\n    alert.id = alert.id || defaultId;\r\n    alertSubject.next(alert);\r\n}\r\n\r\n// clear alerts\r\nfunction clear(id = defaultId) {\r\n    alertSubject.next({ id });\r\n}","import { alertService } from './index.js';\r\n\r\nconst server_URL = \"http://34.87.50.188:8000/api/router\";\r\n\r\nconst returnFunc = async (response) => {\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.content) || response.status;\r\n        return Promise.reject(error);\r\n    }\r\n    return data;\r\n}\r\n\r\nconst getProjects = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"project\",\r\n            columns\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getMovementLogs = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"movementLog\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getSpecialPlate = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"specialPlate\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAccessRule = (projectID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"accessRule\",\r\n            columns,\r\n            filters:{\r\n                projectID\r\n            }\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createSpecialPlate\",\r\n          content: state\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delSpecialPlate = (matchPlate) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteSpecialPlate\",\r\n            content: {\r\n                matchPlate\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifySpecialPlate\",\r\n            content: {\r\n            matchPlate: state.matchPlate,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addProject = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createProject\",\r\n          content: {\r\n            projectName: \"\",\r\n            projectType: \"\",\r\n            location: \"\",\r\n            contactNumber: \"\",\r\n            maCompany: \"\",\r\n            equipManu: \"\"\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGate = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getTable\",\r\n            content: {\r\n            objName: \"gate\",\r\n            columns,\r\n            filters:{\r\n                projectID: ID\r\n            }\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDevice = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"device\",\r\n            columns,\r\n            filters:{\r\n              gateID: ID\r\n            }\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAllDevice = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"device\",\r\n            columns\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createGate = (projectID,values) =>{\r\n    const newGateReq = {\r\n        ...values,\r\n        projectID\r\n    };\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createGate\",\r\n            content: newGateReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createDevice = (gateID, values) =>{\r\n    const newDeviceReq = {\r\n        ...values,\r\n        gateID\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createDevice\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getProjectInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getProject\",\r\n            content: {\r\n            projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delProject = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteProject\",\r\n            content: {\r\n                projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateProjectInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyProject\",\r\n            content: {\r\n            projectID: ID,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getBusinessInfo = (ID) =>{\r\n    //Pending Function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateBusinessInfo = (ID, state) =>{\r\n    //Pending function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGateInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delGate = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateGateInfo = (ID, state) =>{\r\n    console.log(state);\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyGate\",\r\n            content: {\r\n                gateID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDeviceInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delDevice = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateDeviceInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyDevice\",\r\n            content: {\r\n                deviceID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    console.log(state);\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createAccessRule = (values) =>{\r\n    const newDeviceReq = {\r\n        ...values\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createAccessRule\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAccessRuleInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getAccessRule\",\r\n          content: {\r\n            accessRuleID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateAccessRuleInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyAccessRule\",\r\n            content: {\r\n                accessRuleID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getObjectTypes = (obj) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getObjectTypes\",\r\n            content: {\r\n                objName: obj\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getWhitelistTags = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getWhitelistTags\"\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst openGate = (gateID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"openGate\",\r\n            content:{\r\n                gateID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nexport {\r\n    getGate,\r\n    getDevice,\r\n    createGate,\r\n    createDevice,\r\n    getProjectInfo,\r\n    updateProjectInfo,\r\n    getBusinessInfo,\r\n    updateBusinessInfo,\r\n    getGateInfo,\r\n    updateGateInfo,\r\n    getDeviceInfo,\r\n    updateDeviceInfo,\r\n    getProjects,\r\n    addProject,\r\n    delProject,\r\n    delGate,\r\n    delDevice,\r\n    getMovementLogs,\r\n    getSpecialPlate,\r\n    delSpecialPlate,\r\n    updateSpecialPlate,\r\n    addSpecialPlate,\r\n    getAccessRule,\r\n    createAccessRule,\r\n    getAccessRuleInfo,\r\n    updateAccessRuleInfo,\r\n    getObjectTypes,\r\n    getWhitelistTags,\r\n    openGate,\r\n    getAllDevice\r\n};","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport { alertService, createDevice, getDeviceInfo, updateDeviceInfo } from '../services/index.js';\r\n\r\nexport function DeviceModal(props) {\r\n    let {hide, gateID, toggleModal, success, newState, deviceID, deviceTypes } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    if(newState){\r\n      setState({\r\n        gateID,\r\n        deviceID: \"\",\r\n        deviceName: \"\",\r\n        deviceType: \"\",\r\n        deviceCarpark: \"\",\r\n        manufacturer: \"\",\r\n        manufacturerCode: \"\",\r\n        direction: \"\",\r\n        isPrimaryDevice: false\r\n      });\r\n    }else{\r\n      getDeviceInfo(deviceID)\r\n      .then(async (data) => {\r\n        console.log(data.message);\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Device, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy,newState,gateID]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(newState) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    let tempState = state;\r\n    delete tempState[\"deviceStatus\"];\r\n    console.log(tempState);\r\n    updateDeviceInfo(deviceID, tempState)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createDevice(gateID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Device, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{newState?\"Add Device\":\"Edit Device\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id =\"deviceModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate ID\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={state.gateID} readOnly />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device ID\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >{newState?\r\n                        <div><Form.Control\r\n                        required\r\n                        placeholder=\"ID\"\r\n                        id=\"deviceID\"\r\n                        name=\"deviceID\"\r\n                        value={state.deviceID}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device ID is a required field.\r\n                        </Form.Control.Feedback></div>:<Form.Control type=\"text\" placeholder={state.deviceID} readOnly />}\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"deviceName\"\r\n                        name=\"deviceName\"\r\n                        value={state.deviceName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"deviceType\"\r\n                        name=\"deviceType\"\r\n                        value={state.deviceType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        {deviceTypes.map((type)=>(\r\n                          <option value={type.id}>{type.name}</option>\r\n                        ))}\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Carpark which the device belongs to\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Carpark\"\r\n                        id=\"deviceCarpark\"\r\n                        name=\"deviceCarpark\"\r\n                        value={state.deviceCarpark}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Capark is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n                    {newState?null:\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Status\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={state.deviceStatus === \"online\"?\"Online\":\"Offline\"} readOnly />\r\n                    </Col>\r\n                    </Form.Group>}\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Manufacturer\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer\"\r\n                        id=\"manufacturer\"\r\n                        name=\"manufacturer\"\r\n                        value={state.manufacturer}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Manufacturer Code\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer Code\"\r\n                        id=\"manufacturerCode\"\r\n                        name=\"manufacturerCode\"\r\n                        value={state.manufacturerCode}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer Code is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Direction\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Direction\"\r\n                        id=\"direction\"\r\n                        name=\"direction\"\r\n                        value={state.direction}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Direction is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Is Primary Device\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isPrimaryDevice}\r\n                        type=\"switch\"\r\n                        id=\"isPrimaryDevice\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"deviceModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { DeviceModal };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport TimeField from 'react-simple-timefield';\r\nimport { alertService, createGate, getGateInfo, updateGateInfo, getWhitelistTags } from '../services/index.js';\r\n\r\nexport function GateModal(props) {\r\n    let {hide, gateID, toggleModal, success, newState, projectID, gateTypes } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [whiteListTags, setWhiteListTags] = useState([]);\r\n    const newInitialState = {\r\n      gateName: \"\",\r\n      gateType: \"\",\r\n      isChargeable: false,\r\n      ledOnTime: \"00:00:00\",\r\n      ledOffTime: \"00:00:00\",\r\n      allowedTypes: []\r\n    };\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    console.log(\"gateModal\", gateID, projectID, newState);\r\n    if(!hide){\r\n      setState(newInitialState);\r\n    }else if(newState){\r\n      setState(newInitialState);\r\n    }else{\r\n      getGateInfo(gateID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n        console.log(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gate, There was an error!\", error);\r\n      });\r\n    }\r\n    getWhitelistTags()\r\n    .then(async (data) => {\r\n      setWhiteListTags(data.message.whitelistTags);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get WhiteList Tags, There was an error!\", error);\r\n    });\r\n  }, [dummy,hide]);\r\n\r\n  const handleTagChange = (e) =>{\r\n    let {id, value} = e.target;\r\n    let idx = state.allowedTypes.indexOf(id);\r\n    if(idx==-1){\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        allowedTypes: prevState.allowedTypes.concat([id])\r\n      }));\r\n    }else{\r\n      let tempList = state.allowedTypes;\r\n      tempList.splice(idx,1);\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        allowedTypes: tempList\r\n      }));\r\n    }\r\n  }\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    console.log(typeof state[id]);\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(newState) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateGateInfo(gateID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createGate(projectID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Gate, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n      setValidated(false);\r\n      toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{newState?\"Add Gate\":\"Edit Gate\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id='gateModal' noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"gateName\"\r\n                        name=\"gateName\"\r\n                        value={state.gateName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"gateType\"\r\n                        name=\"gateType\"\r\n                        value={state.gateType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        {gateTypes.map((type)=>(\r\n                          <option value={type.id}>{type.name}</option>\r\n                        ))}\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Charge fee for entry\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                    Time to turn on the LPR camera’s LED\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex\"\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOnTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOnTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOnTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Time to turn off the LPR\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        className=\"align-items-center d-flex\"\r\n                        sm={6}\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOffTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOffTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOffTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Whitelist Tags\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                      <Col\r\n                          sm={6}\r\n                      >\r\n                        {whiteListTags.map((tag, index)=>(\r\n                            <div>{\r\n                                index%2==0?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={tag}\r\n                                checked={state.allowedTypes.includes(tag)}\r\n                                onChange={handleTagChange}\r\n                                label={tag}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                      </Col>\r\n                      <Col\r\n                          sm={6}\r\n                      >\r\n                        {whiteListTags.map((tag, index)=>(\r\n                            <div>{\r\n                                index%2==1?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={tag}\r\n                                checked={state.allowedTypes.includes(tag)}\r\n                                onChange={handleTagChange}\r\n                                label={tag}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                      </Col>\r\n                    </Form.Group>\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"gateModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { GateModal };\r\n","import React from 'react';\r\n\r\nimport { alertService, alertType } from '../services/index.js';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nexport class AlertGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            alerts: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // subscribe to new alert notifications\r\n        this.subscription = alertService.onAlert(this.props.id)\r\n            .subscribe(alert => {\r\n                // add alert to array\r\n                this.setState({ alerts: [...this.state.alerts, alert] });\r\n\r\n                // auto close alert if required\r\n                setTimeout(() => this.removeAlert(alert), 3000);\r\n            });\r\n\r\n        // clear alerts on location change\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // unsubscribe & unlisten to avoid memory leaks\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert) {\r\n        this.setState({ alerts: this.state.alerts.filter(x => x !== alert) })\r\n    }\r\n\r\n    render() {\r\n        const { alerts } = this.state;\r\n        if (!alerts.length) return null;\r\n        return (\r\n            <div className=\"alertGrp\">\r\n                {console.log(alerts),\r\n                alerts.map((alert,idx) =>\r\n                    <Alert \r\n                    key = {idx} \r\n                    variant={alert.type}\r\n                    dismissible = {true}\r\n                    onClose={()=>{this.removeAlert(alert)}}>\r\n                        {alert.message}\r\n                    </Alert>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default {AlertGroup} ;","import {IconButton} from '@material-ui/core';\r\n\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nexport function TablePaginationActions(props) {\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div style={{flexShrink:0, right:0}}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        <FirstPageIcon />\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n         <KeyboardArrowLeft />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        <KeyboardArrowRight />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        <LastPageIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default {TablePaginationActions};","import { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, createAccessRule, getAccessRuleInfo, updateAccessRuleInfo, getGate } from '../services/index.js';\r\n\r\nexport function RulesModal(props) {\r\n    let {hide, accessRuleID, projectID, success, projectName, toggleModal } = props;\r\n    let cnt = 0;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [gates, setGates] = useState([]);\r\n    const [curGates, setCurGates] = useState({});\r\n    const [initialGates, setInitialGates] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const func = async (val) =>{\r\n        let temp = {};\r\n        val.forEach(async (element)=>{\r\n            temp[element[\"gateID\"]] = false;\r\n        });\r\n        initialGates.forEach(async (element)=>{\r\n            console.log(element);\r\n            temp[element] = true;\r\n        });\r\n        return await temp;\r\n    };\r\n    const loadGates = () =>{\r\n        getGate(projectID, [\"gateID\", \"gateName\"])\r\n        .then(async (data) => {\r\n            setGates(data.content);\r\n            func(data.content).then(async(list)=>{\r\n                setCurGates(await list);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            alertService.error(\"There was an error!\");\r\n            console.error(\"Get Gate Rule, There was an error!\", error);\r\n        });\r\n    }\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    setTimeout(()=>setLoading(false), 600);\r\n    if(accessRuleID===null){\r\n      setState({\r\n        projectID,\r\n        accessRuleName: \"\",\r\n        isChargeable: false,\r\n        gates: []\r\n      });\r\n      setInitialGates([]);\r\n    }else{\r\n      getAccessRuleInfo(accessRuleID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n        setInitialGates(data.message.gates);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Access Rule, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    setState((prevState)=>({\r\n        ...prevState,\r\n        gates: (Object.keys(curGates)).filter((gate)=>curGates[gate])\r\n      }));\r\n  },[curGates]);\r\n\r\n  useEffect(()=>{\r\n    loadGates();\r\n  },[initialGates]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleGateChange = (e) =>{\r\n    let id = e.target.id;\r\n    setCurGates((prevState) => ({\r\n      ...prevState,\r\n      [id]: !prevState[id]\r\n    }));\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(accessRuleID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateAccessRuleInfo(accessRuleID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Access Rule, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createAccessRule(state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Access Rule, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n      {loading?\r\n      <Row className=\"d-flex justify-content-center\" style={{margin:\"200px\"}}>\r\n      <Spinner size=\"lg\" animation=\"border\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n    </Row>:\r\n        <div>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{accessRuleID===null?\"Add Rule\":\"Edit Rule\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id =\"ruleModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Project Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={projectName} readOnly />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Access Rule Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"accessRuleName\"\r\n                        name=\"accessRuleName\"\r\n                        value={state.accessRuleName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Rule Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gates\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        {gates.map((gate, index)=>(\r\n                            <div>{\r\n                                index%2==0?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={gate.gateID}\r\n                                checked={curGates[gate.gateID]}\r\n                                onChange={handleGateChange}\r\n                                label={gate.gateName}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                    </Col>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        {gates.map((gate, index)=>(\r\n                            <div>{\r\n                                index%2==1?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={gate.gateID}\r\n                                checked={curGates[gate.gateID]}\r\n                                onChange={handleGateChange}\r\n                                label={gate.gateName}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Is Chargeable\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"ruleModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n        </div>\r\n      }\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { RulesModal };\r\n","import {Modal} from 'react-bootstrap';\r\n\r\nexport function ImageModal (props){\r\n    let {toggleModal, src} = props;\r\n    return(\r\n    <Modal size=\"lg\" centered show={src===null?false:true} onHide={toggleModal}>\r\n        <img src={src}/>\r\n    </Modal>\r\n    );\r\n}\r\n\r\nexport default {ImageModal};","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {Jumbotron, Row, Col, Card } from 'react-bootstrap';\r\nimport {getAllDevice, getObjectTypes, alertService} from '../services/index.js';\r\nimport {Typography  , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, TableHead, TableRow, Paper, CardActions } from '@material-ui/core';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { TablePaginationActions } from \"../components/index.js\";\r\n\r\nexport function Home() {\r\n  const [rows, setRows] = useState([]);\r\n  const [dummy, setDummy] = useState(null);\r\n  const [devices, setDevices] = useState([]);\r\n  const [deviceTypes, setDeviceTypes] = useState([]);\r\n  useEffect(()=>{\r\n    getAllDevice([\"deviceID\", \"deviceName\", \"deviceType\",\"deviceStatus\"])\r\n    .then(async (data) => {\r\n      setDevices(data.content.filter((device)=>device.deviceType!==\"online\"));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get All Device, there was an error!\", error);\r\n    });\r\n    getObjectTypes(\"device\")\r\n    .then(async (data) => {\r\n      setDeviceTypes(data.message);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Device Types!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  return (\r\n  <div>\r\n    <Jumbotron className=\"dashboard\">\r\n      <Row>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv success\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Sample\r\n              <h3 className=\"cardHomeNumber\" >\r\n                ~\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv warning\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Sample\r\n              <h3 className=\"cardHomeNumber\" >\r\n              ~\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv info\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Sample\r\n              <h3 className=\"cardHomeNumber\" >\r\n              ~\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv danger\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Disconnected Devices\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#ef5350\"}}>\r\n                {devices.length}\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Jumbotron>\r\n    <div className=\"content\">\r\n    <Row>\r\n        <Col sm={8}>\r\n          <Card>\r\n          <Typography className=\"cardTitle\" variant=\"h6\" component=\"h2\">\r\n            Disconnected Devices\r\n          </Typography>\r\n          <TableContainer component={Paper}>\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead >\r\n                <TableRow>\r\n                  <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                  <TableCell align=\"left\"><b>Name</b></TableCell>\r\n                  <TableCell align=\"left\"><b>Type</b></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {devices.map((row, index) => (\r\n                  <TableRow key={row.deviceID}>\r\n                  <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                    <TableCell align=\"left\">{row.deviceName}</TableCell>\r\n                    <TableCell align=\"left\">{deviceTypes[row.deviceType]===undefined ? row.deviceType : deviceTypes[row.deviceType].name}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default { Home };\r\n","import React, { useState, useContext } from \"react\";\r\nimport { store } from \"../store.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport function Login() {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  const { dispatch } = storeContext;\r\n  let history = useHistory();\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n  const reqLogin = (e) => {\r\n    e.preventDefault();\r\n    let { username, password } = state;\r\n    /*\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    };\r\n    \r\n    fetch(server_URL + \"/login\", requestOptions)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n  \r\n      // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      }\r\n  \r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      return(\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/home\"\r\n          }}\r\n        />\r\n      );\r\n    })\r\n    .catch((error) => {\r\n      this.setState({ errorMessage: error.toString() });\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    if (username === \"huajun\" && password === \"huajun\") {\r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      dispatch({\r\n        type: \"setUser\",\r\n        value: username\r\n      });\r\n      history.push(\"/home\");\r\n    } else if (username.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Username cannot be blank\";\r\n    } else if (password.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Password cannot be blank\";\r\n    } else {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Invalid Username or Password\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"maincontainer h-100\">\r\n      <div className=\"container-fluid bg-light h-100\">\r\n        <div className=\"login d-flex align-items-center py-5\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-10 col-sm-6 col-md-5 col-xl-4 mx-auto \">\r\n                <h3 className=\"display-4\">Login</h3>\r\n                <p className=\"text-muted mb-4\">\r\n                  Enter your credentials to login.\r\n                </p>\r\n                <form>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"username\"\r\n                      type=\"username\"\r\n                      placeholder=\"Username\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4\"\r\n                      onChange={handleChange}\r\n                      value={state.username}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\r\n                      onChange={handleChange}\r\n                      value={state.password}\r\n                    />\r\n                  </div>\r\n                  <p id=\"login-error\" className=\"text-danger\"></p>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block text-uppercase mb-2 rounded-pill shadow-sm\"\r\n                    onClick={reqLogin}\r\n                  >\r\n                    Sign in\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Login };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, addProject, delProject, alertService } from '../services/index.js';\r\n\r\nexport function Projects({ match }) {\r\n  let history = useHistory();\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false\r\n  });\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n    setCurState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n  }\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (projectID) => {\r\n    setCurID(projectID);\r\n    toggleModal(\"delete\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectName, location, projectType } = curState;\r\n    let curRows = initialRows;\r\n    console.log(curRows);\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[\"projectName\"].toLowerCase().indexOf(projectName.toLowerCase()) >= 0 &&\r\n          row[\"location\"].toLowerCase().indexOf(location.toLowerCase()) >= 0 &&\r\n          row[\"projectType\"].toLowerCase().indexOf(projectType.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const insert = (e) => {\r\n    addProject()\r\n      .then(async (data) => {\r\n        let ID = data.message.projectID;\r\n        history.push(\"/project/\" + ID);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  const edit = (projectID) => {\r\n    history.push(\"/project/\" + projectID);\r\n  };\r\n\r\n  const del = async (projectID) => {\r\n    delProject(projectID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Project Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this project?\"\r\n      />\r\n      <ConfirmModal\r\n        hide={toggle.add}\r\n        success={() => {\r\n          insert();\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"add\");\r\n        }}\r\n        title=\"Confirm Addition\"\r\n        body=\"Add a new project?\"\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Projects</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectName\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectName}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"location\"\r\n                placeholder=\"Location\"\r\n                onChange={handleChange}\r\n                value={state.location}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectType\"\r\n                placeholder=\"Type\"\r\n                onChange={handleChange}\r\n                value={state.projectType}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Project</TableCell>\r\n                <TableCell align=\"left\">Location</TableCell>\r\n                <TableCell align=\"left\">Type</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.projectName}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.location}</TableCell>\r\n                  <TableCell align=\"left\">{row.projectType}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => edit(row.projectID)}>\r\n                      <PencilSquare\r\n                        data-value={row.projectID}\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => activateModal(row.projectID)}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Projects };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { alertService, getProjectInfo, updateProjectInfo , getObjectTypes} from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function ProjectForm() {\r\n  let { projectID }= useParams();\r\n  const [validated, setValidated] = useState(false);\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    projectType: \"\",\r\n    location: \"\",\r\n    contactNumber: \"\",\r\n    maCompany: \"\",\r\n    equipManu: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectTypes, setProjectTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Project Info!\", error);\r\n      });\r\n      getObjectTypes(\"project\")\r\n      .then(async (data) => {\r\n        setProjectTypes(Object.entries(data.message).map((type)=>({\r\n          id: type[0],\r\n          name: type[1].name\r\n        })));\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Project Types!\", error);\r\n      });\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()) update();\r\n  };\r\n\r\n  const update = () => {\r\n    updateProjectInfo(projectID, state)\r\n      .then(async (data) => {\r\n        alertService.success('Update Successful!');\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Project Info</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project ID\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control type=\"text\" placeholder={projectID} readOnly />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project Name\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              placeholder=\"Name\"\r\n              id=\"projectName\"\r\n              name=\"projectName\"\r\n              value={state.projectName}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Name is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project Type\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              custom\r\n              required\r\n              as=\"select\"\r\n              id=\"projectType\"\r\n              name=\"projectType\"\r\n              value={state.projectType}\r\n              onChange={handleChange}\r\n            >\r\n              <option value={''}>--Select Type--</option>\r\n              {\r\n                projectTypes.map((type)=>(\r\n                  <option value={type.id}>{type.name}</option>\r\n                ))\r\n              }\r\n            </Form.Control>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Type is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Location\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"location\"\r\n              name=\"location\"\r\n              value={state.location}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Location is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Equipment Manufacturer\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"equipManu\"\r\n              name=\"equipManu\"\r\n              value={state.equipManu}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Equipment Manufacturer is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n      </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            MA Company\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"maCompany\"\r\n              name=\"maCompany\"\r\n              value={state.maCompany}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              MA Company is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Contact No.\r\n          </Form.Label>\r\n          <Form.Label\r\n            column\r\n            sm={4}\r\n          >\r\n            <PhoneInput\r\n              inputProps={{\r\n                required: true\r\n              }}\r\n              placeholder=\"+XX-XXXX-XXXX\"\r\n              id=\"contactNumber\"\r\n              name=\"contactNumber\"\r\n              country={\"sg\"}\r\n              value={String(state.contactNumber)}\r\n              onChange={(e)=>{\r\n                setState((prevState) => ({\r\n                  ...prevState,\r\n                  [\"contactNumber\"]: parseInt(e)\r\n                }));\r\n              }}\r\n              isValid={(value, country) => {\r\n                if (value.length === 0) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              }}\r\n            />\r\n          </Form.Label>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col sm={{ span: 8, offset: 7 }}>\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ProjectForm };\r\n","import { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, InputGroup, Breadcrumb } from \"react-bootstrap\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport { alertService, getBusinessInfo, updateBusinessInfo } from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function BusinessDetails(props) {\r\n  let {projectID} = useParams();\r\n  const [state, setState] = useState({\r\n    barrierDelay: 5,\r\n    networkWarningDuration: 5,\r\n    instantImgUpload: false,\r\n    vehicleColorDetect: false,\r\n    localImgStore: false\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    /*   \r\n    getBusinessInfo(projectID)\r\n    .then(async (data) => {\r\n      setState(data.message)\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    let res = {\r\n      barrierDelay: 5,\r\n      networkWarningDuration: 5,\r\n      instantImgUpload: false,\r\n      vehicleColorDetect: false,\r\n      localImgStore: false\r\n    };\r\n    setState(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    update();\r\n  };\r\n\r\n  const update = () => {\r\n    /* Pending API for project details update*/\r\n  };\r\n\r\n  function myFormat(num) {\r\n    return num + \" mins\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Business Details</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Barrier Opening Delay\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"barrierDelay\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.barrierDelay}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Duration before issuing network down warning\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"networkWarningDuration\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.networkWarningDuration}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Instant Image Upload to Server\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.instantImgUpload}\r\n              type=\"switch\"\r\n              id=\"instantImgUpload\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Local Storage of images after uploading\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.localImgStore}\r\n              type=\"switch\"\r\n              id=\"localImgStore\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Vehicle Colour Detection\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.vehicleColorDetect}\r\n              type=\"switch\"\r\n              id=\"vehicleColorDetect\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col sm={{ span: 8, offset: 7 }}>\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { BusinessDetails };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, DeviceModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getDevice, alertService, delDevice, getObjectTypes} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport SignalCellularConnectedNoInternet0BarIcon from '@material-ui/icons/SignalCellularConnectedNoInternet0Bar';\r\n\r\nexport function Devices (){\r\n    let { projectID, gateID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const [deviceTypes, setDeviceTypes] = useState([]);\r\n  const [deviceTypeNames, setDeviceTypeNames] = useState([]);\r\n  const reload = () =>{\r\n    getDevice(gateID, [\"deviceID\", \"deviceName\", \"deviceType\", \"deviceStatus\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Device, there was an error!\", error);\r\n      });\r\n      getObjectTypes(\"device\")\r\n    .then(async (data) => {\r\n      setDeviceTypeNames(data.message);\r\n      setDeviceTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Device Types!\", error);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (deviceID) => {\r\n    delDevice(deviceID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Device Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this device?\"\r\n      />\r\n      <DeviceModal\r\n        deviceTypes = {deviceTypes}\r\n        hide={toggle.edit}\r\n        deviceID = {curID}\r\n        newState = {modal}\r\n        gateID = {gateID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item href={\"/project/\"+projectID+\"/gate\"}>Gates</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Devices</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    setModal(true);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"center\"><b>Status</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceName}</TableCell>\r\n                  <TableCell align=\"center\">{deviceTypeNames[row.deviceType].name}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceStatus==='online'?\r\n                  <Tooltip title=\"Online\">\r\n                  <SignalCellularAltIcon style={{ color: \"#4caf50\" }}/>\r\n                  </Tooltip>\r\n                  :\r\n                  <Tooltip title=\"Offline\">\r\n                  <SignalCellularConnectedNoInternet0BarIcon style={{ color: \"#f44336\" }}/>\r\n                  </Tooltip>\r\n                  }</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        setModal(false);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"gold\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Devices };","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu, DoorOpenFill } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, GateModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getGate, alertService, delGate, getObjectTypes, openGate} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\n\r\nexport function Gates (){\r\n    let { projectID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [gateTypes, setGateTypes] = useState([]);\r\n  const [gateTypeNames, setGateTypeNames] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getGate(projectID, [\"gateID\", \"gateName\", \"gateType\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate, there was an error!\", error);\r\n    });\r\n    getObjectTypes(\"gate\")\r\n    .then(async (data) => {\r\n      setGateTypeNames(data.message);\r\n      setGateTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Gate Types!\", error);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const openGateFunc = (gateID, gateName) =>{\r\n    openGate(gateID)\r\n    .then(async (data) => {\r\n      alertService.success(\"Opened Gate \"+gateName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Open Gate!\", error);\r\n    });\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const devices = (gateID) => {\r\n    history.push(pathname +\"/\"+ String(gateID));\r\n  };\r\n\r\n  const del = async (gateID) => {\r\n    delGate(gateID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Gate Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this gate?\"\r\n      />\r\n      <GateModal\r\n        gateTypes = {gateTypes}\r\n        hide={toggle.edit}\r\n        gateID = {curID}\r\n        newState = {modal}\r\n        projectID = {projectID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Gates</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    setModal(true);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.gateID}</TableCell>\r\n                  <TableCell align=\"center\">{row.gateName}</TableCell>\r\n                  <TableCell align=\"center\">{gateTypeNames[row.gateType].name}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Open Gate\">\r\n                    <IconButton onClick={() => {\r\n                        openGateFunc(row.gateID, row.gateName);\r\n                    }}>\r\n                      <DoorOpenFill\r\n                        size={21}\r\n                        color=\"#28a745\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Devices\">\r\n                    <IconButton onClick={() => {\r\n                        devices(row.gateID);\r\n                    }}>\r\n                      <Cpu\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        setModal(false);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"gold\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Gates };","import React, { useState, useEffect } from \"react\";\r\nimport { Breadcrumb } from \"react-bootstrap\";\r\nimport {Input , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { TablePaginationActions } from \"../../components/index.js\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport { PencilSquare } from \"react-bootstrap-icons\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport function LedConfig(props) {\r\n  let {projectID} = useParams();\r\n  const [rows, setRows] = useState([]);\r\n  const [curID, setCurID] = useState(null);\r\n  const [state, setState] = useState({\r\n    trigger: \"\",\r\n    voiceMsg: \"\",\r\n    textMsg: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    /*getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setInitialRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n  }\r\n  useEffect(() => {\r\n    //reload();\r\n    let res = [\r\n        {\r\n            id: 1,\r\n            trigger: \"Trigger 1\",\r\n            voiceMsg: \"Sample 1\",\r\n            textMsg: \"Sample 01\"\r\n        },\r\n        {\r\n            id: 2,\r\n            trigger: \"Trigger 2\",\r\n            voiceMsg: \"Sample 2\",\r\n            textMsg: \"Sample 02\"\r\n        },\r\n        {\r\n            id: 3,\r\n            trigger: \"Trigger 3\",\r\n            voiceMsg: \"Sample 3\",\r\n            textMsg: \"Sample 03\"\r\n        },\r\n        {\r\n            id: 4,\r\n            trigger: \"Trigger 4\",\r\n            voiceMsg: \"Sample 4\",\r\n            textMsg: \"Sample 04\"\r\n        },\r\n        {\r\n            id: 5,\r\n            trigger: \"Trigger 5\",\r\n            voiceMsg: \"Sample 5\",\r\n            textMsg: \"Sample 05\"\r\n        },\r\n        {\r\n            id: 6,\r\n            trigger: \"Trigger 6\",\r\n            voiceMsg: \"Sample 6\",\r\n            textMsg: \"Sample 06\"\r\n        }\r\n    ];\r\n    setRows(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const save = () =>{\r\n    // API\r\n    //reload();\r\n  }\r\n\r\n  const edit = (vals) =>{\r\n    const {id, trigger, voiceMsg, textMsg} = vals;\r\n    setState({\r\n        trigger, \r\n        voiceMsg, \r\n        textMsg});\r\n    setCurID(id);\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setCurID(null);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>LED Configuration</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Trigger</TableCell>\r\n                <TableCell align=\"center\">Voice Message</TableCell>\r\n                <TableCell align=\"center\">Text Message</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.trigger}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"voiceMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.voiceMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.voiceMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"textMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.textMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.textMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"right\"  style={{padding:0}}>\r\n                    {curID === null?\r\n                        (<IconButton onClick={() => edit(row)}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            color=\"royalblue\"\r\n                            />\r\n                        </IconButton>)\r\n                        :(\r\n                        curID === row.id?\r\n                        <div>\r\n                            <IconButton onClick={() => save()}>\r\n                                <SaveIcon\r\n                                size={21}\r\n                                color=\"primary\"\r\n                                />\r\n                            </IconButton>\r\n                            <IconButton onClick={() => setCurID(null)}>\r\n                                <CloseIcon\r\n                                size={21}\r\n                                color=\"error\"\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                        :\r\n                        (<IconButton disabled = {true}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            />\r\n                        </IconButton>)\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { LedConfig };\r\n","import {\r\n  ProjectForm,\r\n  BusinessDetails,\r\n  Devices,\r\n  LedConfig,\r\n  Gates\r\n} from \"./projectSubPages/index.js\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport {Nav, Tab} from \"react-bootstrap\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nexport function EditProject(props) {\r\n  let history = useHistory();\r\n  let { path, url } = useRouteMatch();\r\n  let {pathname} = useLocation();\r\n  let page = pathname.split('/')[3];\r\n  const direct = (path) =>{\r\n    history.push(url+path);\r\n  }\r\n  return (\r\n    <div className=\"tabModal\">\r\n      <Tab.Container id=\"left-tabs-example\">\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/info\")}} active = {page===\"info\"}>Infomation</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/business\")}} active = {page===\"business\"}>Business</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/gate\")}} active = {page===\"gate\"}>Gates</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/ledconfig\")}} active = {page===\"ledconfig\"}>LED Config</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n          <Switch>\r\n            <Route exact path={`${path}/info`}>\r\n              <ProjectForm />\r\n            </Route>\r\n            <Route exact path={`${path}/business`}>\r\n              <BusinessDetails />\r\n            </Route>\r\n            <Route exact path={`${path}/gate/:gateID`}>\r\n              <Devices />\r\n            </Route>\r\n            <Route exact path={`${path}/gate`}>\r\n              <Gates />\r\n            </Route>\r\n            <Route exact path={`${path}/ledconfig`}>\r\n              <LedConfig />\r\n            </Route>\r\n            <Route path={path}>\r\n              <Redirect to={`${url}/info`} />\r\n            </Route>\r\n          </Switch>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { EditProject };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Modal } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, \r\n  getSpecialPlate,\r\n  delSpecialPlate,\r\n  updateSpecialPlate,\r\n  addSpecialPlate } from '../services/index.js';\r\n\r\nexport function PlateRegex({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false,\r\n    edit: false\r\n  });\r\n  const [state, setState] = useState({\r\n    projectID: NaN,\r\n    actualPlate: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectID: NaN,\r\n    actualPlate: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectID: NaN,\r\n      actualPlate: \"\"\r\n    });\r\n    setCurState({\r\n      projectID: NaN,\r\n      actualPlate: \"\"\r\n    });\r\n  }\r\n  const [val, setVal] = useState({\r\n    projectID: NaN,\r\n    matchPlate: \"\",\r\n    actualPlate: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const reload = () =>{\r\n    getSpecialPlate([\"projectID\", \"matchPlate\", \"actualPlate\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  const func = async (val) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element.projectID] = element.projectName;\r\n    });\r\n    return await temp;\r\n  };\r\n  useEffect(() => {\r\n    getProjects([\"projectID\", \"projectName\"])\r\n    .then(async (data) => {\r\n      setProjects(data.content);\r\n      func(data.content).then(async(list)=>{\r\n        setProjectNames(await list);\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },projectNames);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleChangeVal = (e) =>{\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setVal((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (values) => {\r\n    let {projectID, matchPlate, actualPlate} = values;\r\n    setValidated(false);\r\n    setVal({\r\n        projectID,\r\n        matchPlate,\r\n        actualPlate\r\n      });\r\n    toggleModal(\"edit\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectID, actualPlate } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          (Number.isNaN(projectID) || row[\"projectID\"] === projectID) &&\r\n          String(row[\"actualPlate\"]).toLowerCase().indexOf(actualPlate.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const insert = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n      addSpecialPlate(val)\r\n      .then(async (data) => {\r\n        reload();\r\n        toggleModal(\"add\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const edit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n        updateSpecialPlate(val)\r\n        .then(async (data) => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const del = (id) => {\r\n    delSpecialPlate(id)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this regex?\"\r\n      />\r\n      <Modal show={toggle.add} onHide={()=>toggleModal(\"add\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={insert}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={5}>\r\n            Project Name\r\n          </Form.Label>\r\n          <Col sm={6}>\r\n              <Form.Control\r\n                custom\r\n                required\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChangeVal}\r\n                value={val.projectID}\r\n              >\r\n                  <option value={null}>--Select a Project--</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Project Name is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n        </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"add\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    <Modal show={toggle.edit} onHide={()=>toggleModal(\"edit\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={edit}>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"edit\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Plate Regex</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectID}\r\n              >\r\n                  <option value={null}>All Projects</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"actualPlate\"\r\n                placeholder=\"Actual Plate\"\r\n                onChange={handleChange}\r\n                value={state.actualPlate}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                setVal({\r\n                    projectID: \"\",\r\n                    matchPlate: \"\",\r\n                    actualPlate: \"\"\r\n                    });\r\n                  setValidated(false);\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Project</TableCell>\r\n                <TableCell align=\"center\">Regex of Plate</TableCell>\r\n                <TableCell align=\"center\">Actual Plate</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.matchPlate}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {projectNames[row.projectID]}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.matchPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.actualPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {activateModal(row)}}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.matchPlate);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { PlateRegex };\r\n","export default __webpack_public_path__ + \"static/media/closeGate.4cf57ce2.png\";","export default __webpack_public_path__ + \"static/media/openGate.46e4da23.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { ImageModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getMovementLogs } from '../services/index.js';\r\nimport closeGate from '../assets/closeGate.png';\r\nimport openGate from '../assets/openGate.jpg';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nexport function Records({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const  queryFields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\"\r\n  ];\r\n  const fieldPlaceholder = {\r\n    projectName: \"Project Name\",\r\n    vehicleType: \"Vehicle Type\",\r\n    isOpened: \"Is Opened\",\r\n    gateName: \"Gate Name\",\r\n    gateType: \"Gate Type\",\r\n    originalPlate: \"Original Plate\",\r\n    confirmedPlate: \"Actual Plate\",\r\n    detectionTime: \"Detection Time\",\r\n    confirmedTime: \"Confirmed Time\",\r\n    image1: \"Image 1\",\r\n    image2: \"Image 2\",\r\n    image3: \"Image 3\",\r\n    plateImage: \"Plate Image\"\r\n  };\r\n  const fields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"isOpened\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"detectionTime\",\r\n    \"confirmedTime\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\",\r\n    \"image1\",\r\n    \"image2\",\r\n    \"image3\",\r\n    \"plateImage\"\r\n  ];\r\n  const fieldLength = {\r\n    projectName: \"120px\",\r\n    vehicleType: \"120px\",\r\n    isOpened: \"120px\",\r\n    gateName: \"120px\",\r\n    gateType: \"120px\",\r\n    originalPlate: \"120px\",\r\n    confirmedPlate: \"120px\",\r\n    detectionTime: \"230px\",\r\n    confirmedTime: \"230px\",\r\n    image1: \"90px\",\r\n    image2: \"90px\",\r\n    image3: \"90px\",\r\n    plateImage: \"90px\"\r\n  };\r\n  const fieldHeight = {\r\n    image1: \"50px\",\r\n    image2: \"50px\",\r\n    image3: \"50px\",\r\n    plateImage: \"50px\",\r\n    isOpened: \"30px\"\r\n  }\r\n  const [state, setState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\",\r\n    startTime: null,\r\n    endTime: null\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\",\r\n    startTime: null,\r\n    endTime: null\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const reload = () =>{\r\n    getMovementLogs(fields.concat(\"logID\"), [])\r\n      .then(async (data) => {\r\n        console.log(data.content.slice(0,6));\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    if(id===\"curField\"){\r\n      setState((prevState) => ({\r\n        curField: value,\r\n        val: \"\"\r\n      }));\r\n    }else{\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { curField, val } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[curField].toLowerCase().indexOf(val.toLowerCase()) >= 0 \r\n      ).sort(\r\n        (a,b)=> (a.detectionTime < b.detectionTime) ? 1 : -1\r\n      )\r\n    );\r\n  };\r\n  \r\n  const reset = async (e) =>{\r\n    setState({\r\n      curField: \"projectName\",\r\n      val: \"\",\r\n      startTime: null,\r\n      endTime: null\r\n    });\r\n    setCurState({\r\n      curField: \"projectName\",\r\n      val: \"\",\r\n      startTime: null,\r\n      endTime: null\r\n    });\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ImageModal\r\n      src = {imageSrc}\r\n      toggleModal={()=>{\r\n        setImageSrc(null);\r\n      }}\r\n      />\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Entry Exit Records</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"curField\"\r\n                onChange={handleChange}\r\n                value={state.curField}\r\n              >\r\n                  {queryFields.map((queryField)=>(\r\n                      <option value={queryField}>{fieldPlaceholder[queryField]}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"val\"\r\n                placeholder={fieldPlaceholder[state.curField]}\r\n                onChange={handleChange}\r\n                value={state.val}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\" className=\"d-flex\">\r\n            <Form.Label>From:</Form.Label>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n            <DatePicker\r\n            isClearable\r\n              className=\"dateRecord\"\r\n              selected={state.startTime}\r\n              maxDate={state.endTime}\r\n              popperClassName=\"dateTimePopper\"\r\n              className=\"form-control\"\r\n              placeholderText=\"YYYY-MM-DD HH:MM:SS\"\r\n              onChange={date => handleChange({\r\n                target:{\r\n                  value:date,\r\n                  id: \"startTime\"\r\n                }\r\n              })}\r\n              showTimeSelect\r\n              dateFormat=\"yyyy-MM-dd\"\r\n              timeFormat=\"HH:mm:ss\"\r\n              timeIntervals={15}\r\n              timeCaption=\"time\"\r\n              dateFormat=\"yyyy-MM-dd HH:mm:ss\"\r\n              title=\"Start Time\"\r\n              clearButtonClassName=\"dateTimeClear\"\r\n            />\r\n            </Col>\r\n            <Col sm=\"auto\" className=\"d-flex\">\r\n            <Form.Label>To:</Form.Label>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n            <DatePicker\r\n            isClearable\r\n              className=\"dateRecord\"\r\n              selected={state.endTime}\r\n              minDate={state.startTime}\r\n              popperClassName=\"dateTimePopper\"\r\n              className=\"form-control\"\r\n              placeholderText=\"YYYY-MM-DD HH:MM:SS\"\r\n              onChange={date => handleChange({\r\n                target:{\r\n                  value:date,\r\n                  id: \"endTime\"\r\n                }\r\n              })}\r\n              showTimeSelect\r\n              dateFormat=\"yyyy-MM-dd\"\r\n              timeFormat=\"HH:mm:ss\"\r\n              timeIntervals={15}\r\n              timeCaption=\"time\"\r\n              dateFormat=\"yyyy-MM-dd HH:mm:ss\"\r\n              title=\"Start Time\"\r\n              clearButtonClassName=\"dateTimeClear\"\r\n            />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper} className=\"overflowTable\">\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {fields.map((field) =>(\r\n                  <TableCell align=\"center\" style={{\"min-width\":fieldLength[field]}}>{fieldPlaceholder[field]}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.logID}>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.vehicleType}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.isOpened === true?\r\n                    <img style={{\"height\":fieldHeight.isOpened}} src={openGate} className=\"success-transform\"/>:\r\n                    <img style={{\"height\":fieldHeight.isOpened}} src={closeGate} className=\"danger-transform\"/>}\r\n            </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.gateName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.gateType}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.detectionTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.confirmedTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.originalPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.confirmedPlate===null?null:\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.confirmedPlate}</u>\r\n                      </div>\r\n                    </div>}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image1)} \r\n                    style={{\"height\":fieldHeight.image1}} \r\n                    src={row.image1}/>\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image2)} \r\n                    style={{\"height\":fieldHeight.image2}} \r\n                    src={row.image2} />\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image3)} \r\n                    style={{\"height\":fieldHeight.image3}} \r\n                    src={row.image3} />\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.plateImage)} \r\n                    style={{\"height\":fieldHeight.plateImage}} \r\n                    src={row.plateImage} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TableRow className=\"d-flex justify-content-center\">\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 50]}\r\n              colSpan={13}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n        </TableRow>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Records };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport function ParkRecords({ match }) {\r\n  return (<div className=\"d-flex justify-content-center\"><h1>Pending API</h1></div>);\r\n}\r\n\r\nexport default { ParkRecords };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, RulesModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getGate, alertService, delGate, getProjects, getAccessRule} from '../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\n\r\nexport function ParkingRules (){\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [project,setProject] = useState(null);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const [gateNames, setGateNames] = useState({});\r\n  const [projects,setProjects] = useState([]);\r\n  const func = async (val, inputField, outputField) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element[inputField]] = element[outputField];\r\n    });\r\n    return await temp;\r\n  };\r\n  const reloadProjects = () =>{\r\n    getProjects([\"projectID\", \"projectName\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setProjects(data.content);\r\n        func(data.content, \"projectID\", \"projectName\").then(async(list)=>{\r\n          setProjectNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reloadProjects();\r\n  }, [dummy]);\r\n\r\n  const reload = () =>{\r\n    getAccessRule(project, [\"accessRuleID\", \"accessRuleName\", \"isChargeable\", \"gates\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Get Gate, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  const reloadGates = () =>{\r\n    getGate(project,[\"gateID\",\"gateName\"])\r\n      .then(async (data) => {\r\n        func(data.content, \"gateID\", \"gateName\").then(async(list)=>{\r\n          setGateNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n    if(project!==null)reloadGates();\r\n  },[project]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (accessRuleID) => {\r\n    /*\r\n    delGate(gateID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Rule Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Rule, There was an error!\", error);\r\n    });*/\r\n  };\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this rule?\"\r\n      />\r\n      {toggle.edit?\r\n      <RulesModal\r\n        hide={toggle.edit}\r\n        projectID = {project}\r\n        projectName = {projectNames[project]}\r\n        accessRuleID = {curID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />:null}\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Access Rules</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                onChange={(e)=>{\r\n                  setProject(e.target.value);\r\n                }}\r\n                value={project}\r\n              >\r\n                <option value=\"\">--Select a Project--</option>\r\n                  {projects.map((val)=>(\r\n                      <option value={val.projectID}>{val.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>Project</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Gates</b></TableCell>\r\n                <TableCell align=\"center\"><b>Chargeable</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{projectNames[project]}</TableCell>\r\n                  <TableCell align=\"center\">{row.accessRuleName}</TableCell>\r\n                  <TableCell align=\"center\">{(row.gates).map((gate)=>(\r\n                    <div>{gateNames[gate]} <br/></div> \r\n                  ))}</TableCell>\r\n                  <TableCell align=\"center\">{row.isChargeable}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.accessRuleID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"gold\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.accessRuleID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ParkingRules };","import React, { useContext } from \"react\";\nimport { store } from \"./store.js\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport \"./styles.css\";\nimport \"./assets/scrollbar.css\";\nimport { NavBar, AlertGroup } from \"./components/index.js\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport { Home, Login, Projects, EditProject, PlateRegex, Records, ParkRecords, ParkingRules } from \"./pages/index.js\";\n\nclass DebugRouter extends Router {\n  constructor(props) {\n    super(props);\n    console.log(\"initial history is: \", JSON.stringify(this.history, null, 2));\n    this.history.listen((location, action) => {\n      console.log(\n        `The current URL is ${location.pathname}${location.search}${location.hash}`\n      );\n      console.log(\n        `The last navigation action was ${action}`,\n        JSON.stringify(this.history, null, 2)\n      );\n    });\n  }\n}\n\nexport function App() {\n  return (\n    // <DebugRouter>\n    <Router>\n      <Switch>\n        <PrivateRoute path=\"/home\">\n          <Home />\n        </PrivateRoute>\n        <PrivateRoute path=\"/project/:projectID\">\n          <EditProject />\n        </PrivateRoute>\n        <PrivateRoute path=\"/project\">\n          <Projects />\n        </PrivateRoute>\n        <PrivateRoute path=\"/regex\">\n          <PlateRegex />\n        </PrivateRoute>\n        <PrivateRoute path=\"/records\">\n          <Records />\n        </PrivateRoute>\n        <PrivateRoute path=\"/parking\">\n          <ParkRecords />\n        </PrivateRoute>\n        <PrivateRoute path=\"/accessRules\">\n          <ParkingRules />\n        </PrivateRoute>\n        <PublicRoute path=\"/\">\n          <Login />\n        </PublicRoute>\n      </Switch>\n    </Router>\n    // </DebugRouter>\n  );\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  let auth = globalState.auth;\n  let toggled = globalState.toggled;\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth ? (\n          <div className=\"h-100\">\n              <AlertGroup />\n            <NavBar />\n            <div id=\"content-body\" className={toggled?\"content-body-collapsed\":\"content-body-expand\"}>\n              {React.cloneElement(children, { params: props.match.params })}\n            </div>\n          </div>\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ children, ...rest }) {\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  let auth = globalState.auth;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          <Redirect\n            to={{\n              pathname: \"/project\",\n              state: { from: location }\n            }}\n          />\n        ) : \n        <AlertGroup />(\n          children\n        )\n      }\n    />\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { StateProvider } from \"./store.js\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StateProvider>\n    <StrictMode>\n      <App />\n    </StrictMode>\n  </StateProvider>,\n  rootElement\n);\n"],"sourceRoot":""}