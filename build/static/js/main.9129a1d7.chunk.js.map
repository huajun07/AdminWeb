{"version":3,"sources":["store.js","components/NavBar.js","components/ConfirmModal.js","components/QueryModal.js","services/alertService.js","services/api.js","components/DeviceModal.js","components/GateModal.js","components/AlertGroup.js","components/TablePaginationActions.js","components/RulesModal.js","components/ImageModal.js","pages/Home.js","pages/Login.js","pages/Projects.js","pages/projectSubPages/ProjectForm.js","pages/projectSubPages/BusinessDetails.js","pages/projectSubPages/Devices.js","pages/projectSubPages/Gates.js","pages/projectSubPages/LedConfig.js","pages/EditProject.js","pages/PlateRegex.js","assets/closeGate.png","assets/openGate.jpg","pages/Records.js","pages/ParkRecords.js","pages/ParkingRules.js","App.js","index.js"],"names":["initialState","auth","user","toggled","store","createContext","Provider","StateProvider","children","useReducer","state","action","type","value","Error","dispatch","NavBar","storeContext","useContext","globalState","history","useHistory","direct","path","console","log","push","className","collapsed","width","iconShape","style","icon","fontSize","onClick","title","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","Item","data-value","href","Divider","Text","ConfirmModal","props","toggleModal","success","hide","body","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","alertSubject","Subject","defaultId","alertService","onAlert","asObservable","pipe","filter","x","message","options","alert","alertType","error","info","warn","clear","next","server_URL","process","returnFunc","response","a","json","data","ok","content","status","Promise","reject","getProjects","columns","requestOptions","method","headers","JSON","stringify","authID","serviceName","objName","fetch","then","getGate","ID","filters","projectID","getProjectInfo","delProject","getGateInfo","gateID","delGate","delDevice","deviceID","getObjectTypes","obj","DeviceModal","deviceTypes","useState","validated","setValidated","setState","dummy","projects","setProjects","curProject","setCurProject","gates","setGates","useEffect","deviceName","deviceType","deviceCarpark","manufacturer","manufacturerCode","direction","isPrimaryDevice","isGateControl","getDeviceInfo","catch","handleChange","target","e","filler","e2","undefined","prevState","update","tempState","modifyParams","updateDeviceInfo","create","values","newDeviceReq","createDevice","Form","noValidate","onSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","Group","as","Row","Label","column","sm","Col","Control","required","placeholder","name","onChange","Feedback","readOnly","custom","map","project","projectName","disabled","gate","gateName","Check","checked","GateModal","newState","gateTypes","whiteListTags","setWhiteListTags","newInitialState","gateType","isChargeable","ledOnTime","ledOffTime","allowedTypes","getWhitelistTags","whitelistTags","handleTagChange","idx","indexOf","concat","tempList","splice","updateGateInfo","newGateReq","createGate","showSeconds","input","tag","index","includes","label","AlertGroup","alerts","this","subscription","subscribe","setTimeout","removeAlert","unsubscribe","length","Alert","dismissible","onClose","React","Component","TablePaginationActions","count","page","rowsPerPage","onChangePage","flexShrink","right","IconButton","event","aria-label","Math","ceil","max","RulesModal","accessRuleID","curGates","setCurGates","initialGates","setInitialGates","loading","setLoading","func","val","temp","forEach","element","accessRuleName","getAccessRuleInfo","Object","keys","list","handleGateChange","updateAccessRuleInfo","createAccessRule","margin","Spinner","size","animation","role","ImageModal","src","centered","Home","devices","setDevices","newDevices","setNewDevices","setDeviceTypes","deviceTypeNames","setDeviceTypeNames","curID","setCurID","edit","toggle","setToggle","reload","getAllDevice","device","deviceStatus","getNewDevices","entries","modal","prevVal","Jumbotron","Card","color","height","Typography","component","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","padding","stickyHeader","String","Login","username","password","document","getElementById","innerText","Projects","match","initialRows","setInitialRows","rows","setRows","delete","add","location","projectType","curState","setCurState","curRows","toLowerCase","insert","contactNumber","maCompany","equipManu","addProject","del","setPage","setRowsPerPage","emptyRows","min","Breadcrumb","active","inline","slice","scope","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","ProjectForm","useParams","projectTypes","setProjectTypes","updateProjectInfo","country","isValid","BusinessDetails","setProjectName","barrierDelay","networkWarningDuration","instantImgUpload","vehicleColorDetect","localImgStore","myFormat","num","InputGroup","strict","format","Devices","useLocation","pathname","setGateName","getDevice","Tooltip","Gates","setGateTypes","gateTypeNames","setGateTypeNames","setModal","openGateFunc","openGate","LedConfig","trigger","voiceMsg","textMsg","Input","vals","EditProject","useRouteMatch","url","split","background","Tab","Container","xs","exact","to","PlateRegex","NaN","actualPlate","matchPlate","setVal","projectNames","setProjectNames","getSpecialPlate","handleChangeVal","Number","isNaN","delSpecialPlate","addSpecialPlate","updateSpecialPlate","activateModal","Records","imageSrc","setImageSrc","fieldPlaceholder","vehicleType","isOpened","originalPlate","confirmedPlate","detectionTime","confirmedTime","image1","image2","image3","plateImage","fields","fieldLength","fieldHeight","curField","startTime","endTime","getMovementLogs","sort","b","reset","queryField","isClearable","selected","maxDate","popperClassName","date","minDate","field","closeGate","logID","ParkRecords","ParkingRules","setProject","gateNames","setGateNames","inputField","outputField","getAccessRule","Router","PrivateRoute","rest","render","cloneElement","params","from","PublicRoute","App","rootElement","ReactDOM"],"mappings":"sNAEMA,EAAe,CACnBC,MAAM,EACNC,KAAM,SACNC,SAAS,GAELC,EAAQC,wBAAcL,GACpBM,EAAaF,EAAbE,SAEFC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACZC,sBAAW,SAACC,EAAOC,GAC3C,OAAQA,EAAOC,MACb,IAAK,UACH,OAAO,2BACFF,GADL,IAEET,KAAMU,EAAOE,QAEjB,IAAK,UACH,OAAO,2BACFH,GADL,IAEER,KAAMS,EAAOE,QAEjB,IAAK,aACH,OAAO,2BACFH,GADL,IAEEP,SAAUO,EAAMP,UAEpB,QACE,MAAM,IAAIW,SAEbd,GArBmC,mBAC/BU,EAD+B,KACxBK,EADwB,KAuBtC,OAAO,cAACT,EAAD,CAAUO,MAAO,CAAEH,QAAOK,YAA1B,SAAuCP,K,6PCXzC,SAASQ,IACd,IAAMC,EAAeC,qBAAWd,GACxBW,EAAaE,EAAbF,SACFI,EAAcF,EAAaP,MAC1BP,EAAkBgB,EAAlBhB,QAASD,EAASiB,EAATjB,KACZkB,EAAUC,cAYRC,EAAS,SAACC,GACdC,QAAQC,IAAI,UAAWF,GACvBH,EAAQM,KAAKH,IAOf,OACE,sBAAKI,UAAU,+BAAf,UACE,cAAC,IAAD,CACEA,UAAU,qDACVC,UAAWzB,EACX0B,MAAM,QAHR,SAME,cAAC,IAAD,UACE,eAAC,IAAD,CAAMC,UAAU,SAAhB,UACE,cAAC,IAAD,CACEC,MAAO,CAAC,WAAa,UAAU,OAAS,OAAQ,iBAAiB,QACjEJ,UAAU,mDAFZ,SAGE,qBAAKI,MAAO,CAAC,cAAc,OAAQ,MAAQ,SAA3C,SACE,2CAGJ,cAAC,IAAD,CACEC,KAAM,cAAC,IAAD,CAAmBC,SAAS,UAClCF,MAAO,CAAC,iBAAiB,OAAQ,gBAAgB,kBAFnD,SAGE,sBAAKA,MAAO,CAAE,MAAQ,SAAtB,sBACY7B,OAGd,cAAC,IAAD,CAAU8B,KAAM,cAAC,IAAD,CAAUE,QAAS,kBAAIZ,EAAO,YAA9C,SACE,qBAAKY,QAAS,kBAAIZ,EAAO,UAAzB,oBAIF,cAAC,IAAD,CAAUU,KAAM,cAAC,IAAD,CAAUE,QAAS,kBAAIZ,EAAO,eAA9C,SACE,qBAAKY,QAAS,kBAAIZ,EAAO,aAAzB,uBAIF,cAAC,IAAD,CAAUU,KAAM,cAAC,IAAD,CAAUE,QAAS,kBAAIZ,EAAO,aAA9C,SACE,qBAAKY,QAAS,kBAAIZ,EAAO,WAAzB,2BAIF,cAAC,IAAD,CAAUU,KAAM,cAAC,IAAD,CAAaE,QAAS,kBAAIZ,EAAO,eAAjD,SACE,qBAAKY,QAAS,kBAAIZ,EAAO,aAAzB,kCAIF,cAAC,IAAD,CAAUU,KAAM,cAAC,IAAD,CAAkBE,QAAS,kBAAIZ,EAAO,eAAtD,SACE,qBAAKY,QAAS,kBAAIZ,EAAO,aAAzB,+BAIF,eAAC,IAAD,CAASa,MAAM,SAASH,KAAM,cAAC,IAAD,IAA9B,UACE,cAAC,IAAD,CAAWE,QAAS,kBAAIZ,EAAO,iBAA/B,0BACA,cAAC,IAAD,iCAKR,eAACc,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAAQC,OAAO,KAAKZ,UAAW,oBAAoBxB,EAAQ,oBAAoB,kBAA1G,UACE,cAACiC,EAAA,EAAOI,MAAR,CACAb,UAAU,UACVO,QAhEgB,WACpBnB,EAAS,CACPH,KAAM,gBA4DJ,SAGE,cAAC,IAAD,MAEF,cAACwB,EAAA,EAAOK,OAAR,CAAeC,gBAAc,mBAAmBf,UAAU,iBAC1D,cAACS,EAAA,EAAOO,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,CAAKlB,UAAU,uBAAf,UACE,cAACkB,EAAA,EAAIC,KAAL,UACE,qBAAKZ,QAAS,kBAAIZ,EAAO,UAAzB,oBAIF,cAACuB,EAAA,EAAIC,KAAL,UACE,qBAAKZ,QAAS,kBAAIZ,EAAO,aAAzB,uBAIF,cAACuB,EAAA,EAAIC,KAAL,UACE,qBAAKZ,QAAS,kBAAIZ,EAAO,WAAzB,2BAIF,cAACuB,EAAA,EAAIC,KAAL,UACE,qBAAKZ,QAAS,kBAAIZ,EAAO,aAAzB,2BAIF,cAACuB,EAAA,EAAIC,KAAL,UACE,qBAAKZ,QAAS,kBAAIZ,EAAO,aAAzB,+BAIF,eAACyB,EAAA,EAAD,CAAaZ,MAAM,WAAWS,GAAG,qBAAjC,UACE,cAACG,EAAA,EAAYC,KAAb,CAAkBC,aAAW,QAAQf,QAASZ,EAA9C,oBAGA,cAACyB,EAAA,EAAYC,KAAb,CAAkBE,KAAK,cAAvB,4BAGA,cAACH,EAAA,EAAYC,KAAb,CAAkBE,KAAK,cAAvB,uBACA,cAACH,EAAA,EAAYI,QAAb,IACA,cAACJ,EAAA,EAAYC,KAAb,CAAkBE,KAAK,cAAvB,oCAMN,cAACd,EAAA,EAAOO,SAAR,CAAiBhB,UAAU,sBAA3B,SACE,cAACS,EAAA,EAAOgB,KAAR,UACE,cAACP,EAAA,EAAIC,KAAL,CAAUZ,QA/HL,WACbnB,EAAS,CACPH,KAAM,UACNC,OAAO,IAETE,EAAS,CACPH,KAAM,UACNC,MAAO,KAETO,EAAQM,KAAK,MAsHL,+BAQG,I,kBCjKR,SAAS2B,EAAaC,GAC3B,IAAIC,EAAcD,EAAMC,YACpBC,EAAUF,EAAME,QAChBC,EAAOH,EAAMG,KACbC,EAAOJ,EAAMI,KACbvB,EAAQmB,EAAMnB,MAClB,OACE,eAACwB,EAAA,EAAD,CAAOC,KAAMH,EAAMI,OAAQN,EAA3B,UACE,cAACI,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,UAAc7B,MAEhB,cAACwB,EAAA,EAAMM,KAAP,UAAaP,IACb,eAACC,EAAA,EAAMO,OAAP,WACE,cAACC,EAAA,EAAD,CAAQ7B,QAAQ,YAAYJ,QAASqB,EAArC,oBAGA,cAACY,EAAA,EAAD,CAAQ7B,QAAQ,UAAUJ,QAAS,WACjCsB,KADF,2BAUO,I,SCkBA,I,oEC3CTY,EAAe,IAAIC,IACnBC,EAAY,gBAELC,EAAe,CACxBC,QAiBJ,WAAkC,IAAjB5B,EAAgB,uDAAX0B,EAClB,OAAOF,EAAaK,eAAeC,KAAKC,aAAO,SAAAC,GAAC,OAAIA,GAAKA,EAAEhC,KAAOA,OAjBlEY,QAqBJ,SAAiBqB,EAASC,GACtBC,GAAM,2BAAKD,GAAN,IAAelE,KAAMoE,GAAmBH,cArB7CI,MAwBJ,SAAeJ,EAASC,GACpBC,GAAM,2BAAKD,GAAN,IAAelE,KAAMoE,GAAiBH,cAxB3CK,KA2BJ,SAAcL,EAASC,GACnBC,GAAM,2BAAKD,GAAN,IAAelE,KAAMoE,GAAgBH,cA3B1CM,KA8BJ,SAAcN,EAASC,GACnBC,GAAM,2BAAKD,GAAN,IAAelE,KAAMoE,GAAmBH,cA9B7CE,SACAK,MAuCJ,WAAgC,IAAjBxC,EAAgB,uDAAX0B,EAChBF,EAAaiB,KAAK,CAAEzC,SArCXoC,GACA,UADAA,GAEF,SAFEA,GAGH,OAHGA,GAIA,UA0Bb,SAASD,GAAMA,GACXA,EAAMnC,GAAKmC,EAAMnC,IAAM0B,EACvBF,EAAaiB,KAAKN,GC9CtB,IAAMO,GAAaC,sCAEbC,GAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACID,EAASE,OADb,UACTC,EADS,OAEVH,EAASI,GAFC,uBAILZ,EAASW,GAAQA,EAAKE,SAAYL,EAASM,OAJtC,kBAKJC,QAAQC,OAAOhB,IALX,gCAORW,GAPQ,2CAAH,sDAUVM,GAAc,SAACC,GACjB,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,WACbZ,QAAS,CACPa,QAAS,UACTR,cAIR,OAAOS,MAAMtB,GAAYc,GACxBS,KAAKrB,KA+HJsB,GAAU,SAACC,EAAIZ,GACjB,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,WACbZ,QAAS,CACTa,QAAS,OACTR,UACAa,QAAQ,CACJC,UAAWF,OAKvB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,KA4EJ0B,GAAiB,SAACH,GACpB,IAAMX,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,aACbZ,QAAS,CACTmB,UAAWF,MAInB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,KAGJ2B,GAAa,SAACJ,GAChB,IAAMX,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,gBACbZ,QAAS,CACLmB,UAAWF,MAIvB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,KAoCJ4B,GAAc,SAACL,GACjB,IAAMX,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,UACbZ,QAAS,CACLuB,OAAQN,MAIpB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,KAGJ8B,GAAU,SAACP,GACb,IAAMX,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,aACbZ,QAAS,CACLuB,OAAQN,MAIpB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,KAqCJ+B,GAAY,SAACR,GACf,IAAMX,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,eACbZ,QAAS,CACL0B,SAAUT,MAIpB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,KAsEJiC,GAAiB,SAACC,GACpB,IAAMtB,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,iBACbZ,QAAS,CACLa,QAASe,MAIrB,OAAOd,MAAMtB,GAAYc,GACxBS,KAAKrB,KCvdH,SAASmC,GAAYrE,GAAQ,IAC3BG,EAA8DH,EAA9DG,KAAM4D,EAAwD/D,EAAxD+D,OAAQ9D,EAAgDD,EAAhDC,YAAaC,EAAmCF,EAAnCE,QAASgE,EAA0BlE,EAA1BkE,SAAUI,EAAgBtE,EAAhBsE,YADpB,EAEGC,oBAAS,GAFZ,mBAExBC,EAFwB,KAEbC,EAFa,OAGLF,mBAAS,IAHJ,mBAGxBnH,EAHwB,KAGjBsH,EAHiB,OAILH,oBAAS,GAJJ,mBAIxBI,EAJwB,aAKCJ,mBAAS,KALV,mBAKxBK,EALwB,KAKdC,EALc,OAMKN,mBAAS,IANd,mBAMxBO,EANwB,KAMZC,EANY,OAOLR,mBAAS,IAPJ,mBAOxBS,EAPwB,KAOjBC,EAPiB,KASjCC,qBAAU,WACRT,GAAa,GACC,OAAXP,EACDQ,EAAS,CACPX,SACAG,SAAU,GACViB,WAAY,GACZC,WAAY,GACZC,cAAe,GACfC,aAAc,GACdC,iBAAkB,GAClBC,UAAW,GACXC,iBAAiB,EACjBC,eAAe,KDiVD,SAACjC,GACnB,IAAMX,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,YACbZ,QAAS,CACL0B,SAAUT,MAIpB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,IC3VJyD,CAAczB,GACbX,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJlE,QAAQC,IAAImE,EAAKf,SACjBmD,EAASpC,EAAKf,SAFV,2CADN,uDAKCqE,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,kCAAmCA,MAEvC,OAAToC,IACD8B,EAAa,CACXC,OAAO,CACLxG,GAAI,SACJ/B,MAAO,MAGXqF,GAAY,CAAC,YAAY,gBACxBW,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJ2C,EAAc,IACdF,EAAYvC,EAAKE,SAFb,2CADN,uDAKCoD,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,oCAAqCA,UAIxD,CAACgD,EAAMxE,IAEV+E,qBAAU,WACRW,EAAa,CACXC,OAAO,CACLxG,GAAI,SACJ/B,MAAO,MAGO,OAAfuH,EAAoBG,EAAS,IAE9BzB,GAAQsB,EAAW,CAAC,SAAS,aAC5BvB,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJ6C,EAAS3C,EAAKE,SADV,2CADN,uDAICoD,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,iCAAkCA,QAGpD,CAACmD,IAEH,IAAMe,EAAe,SAACE,EAAGC,EAAQC,GAC/B,IAAI3G,EAAI/B,OACG2I,IAAPD,GACF3G,EAAKyG,EAAED,OAAOxG,GACd/B,EAAQwI,EAAED,OAAOvI,QAEjB+B,EAAK2G,EAAG3G,GACR/B,EAAQwI,GAEe,mBAAd3I,EAAMkC,IACbpB,QAAQC,IAAI,QACduG,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN7G,GAAMlC,EAAMkC,SAGfoF,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN7G,EAAK/B,QAmBN6I,EAAS,WACb,IAAIC,EAAYjJ,SACTiJ,EAAS,aDsRK,SAAC5C,EAAIrG,GAC1B,IAAM0F,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,eACbZ,QAAS,CACL0B,SAAUT,EACV6C,aAAclJ,MAI1B,OAAOkG,MAAMtB,GAAYc,GACxBS,KAAKrB,ICnSNqE,CAAiBrC,EAAUmC,GAC1B9C,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACFqC,GAAa,GACbxD,EAAaf,QAAQ,sBACrBA,IAHE,2CADN,uDAMC0F,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACjBzD,QAAQyD,MAAM,qCAAsCA,OAIpD6E,EAAS,YDoGI,SAACzC,EAAQ0C,GAC1B,IAAMC,EAAY,2BACXD,GADW,IAEd1C,WAEEjB,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,eACbZ,QAASkE,KAGjB,OAAOpD,MAAMtB,GAAYc,GACxBS,KAAKrB,KClHNyE,CAAa5C,EAAQ3G,GACpBmG,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACFqC,GAAa,GACfxD,EAAaf,QAAQ,wBACrBA,IAHI,2CADN,uDAMC0F,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACjBzD,QAAQyD,MAAM,kCAAmCA,OAIvD,OACE,eAACtB,EAAA,EAAD,CAAOC,KAAMH,EAAMI,OAAQ,WAC3BkE,GAAa,GACbxE,KAFA,UAGQ,cAACI,EAAA,EAAMG,OAAP,CACCC,aAAW,EADZ,SAEI,cAACJ,EAAA,EAAMK,MAAP,UAAyB,OAAXwD,EAAgB,aAAa,kBAE/C,cAAC7D,EAAA,EAAMM,KAAP,UACA,cAACiG,EAAA,EAAD,CAAMtH,GAAI,cAAcuH,YAAU,EAACrC,UAAWA,EAAWsC,SAnD9C,SAACf,GACpBA,EAAEgB,iBACF,IAAMC,EAAOjB,EAAEkB,eACc,IAAzBD,EAAKE,kBACPnB,EAAEgB,iBACFhB,EAAEoB,mBAEJ1C,GAAa,GACTuC,EAAKE,kBACO,OAAXhD,EAAiBsC,IACfJ,MAyCC,SACI,gCACI,eAACQ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,uBAGA,cAACC,EAAA,EAAD,CACID,GAAI,EADR,SAEa,OAAXvD,EACE,gCAAK,cAAC0C,EAAA,EAAKe,QAAN,CACLC,UAAQ,EACRC,YAAY,KACZvI,GAAG,WACHwI,KAAK,WACLxK,KAAM,OACNC,MAAOH,EAAM8G,SACb6D,SAAUlC,IAEV,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,+CAE+B,cAACsJ,EAAA,EAAKe,QAAN,CAAcrK,KAAK,OAAOuK,YAAazK,EAAM8G,SAAU+D,UAAQ,SAGxF,OAATlE,EACD,gCACE,eAAC6C,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,qBAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGE,eAACb,EAAA,EAAKe,QAAN,CACEO,QAAM,EACNN,UAAQ,EACRP,GAAG,SACH/H,GAAG,UACHwI,KAAK,UACLvK,MAAOuH,EACPiD,SAAU,SAAChC,GACThB,EAAcgB,EAAED,OAAOvI,QAR3B,UAWE,wBAAQA,MAAO,GAAf,gCACCqH,EAASuD,KAAI,SAACC,GAAD,OACZ,wBAAQ7K,MAAO6K,EAAQzE,UAAvB,SAAmCyE,EAAQC,oBAG/C,cAACzB,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,gDAKJ,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,kBAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGE,eAACb,EAAA,EAAKe,QAAN,CACEW,SAAyB,KAAbxD,EACZoD,QAAM,EACNN,UAAQ,EACRP,GAAG,SACH/H,GAAG,SACHwI,KAAK,SACLvK,MAAOH,EAAM2G,OACbgE,SAAUlC,EARZ,UAUE,wBAAQtI,MAAO,GAAf,gCACCyH,EAAMmD,KAAI,SAACI,GAAD,OACT,wBAAQhL,MAAOgL,EAAKxE,OAApB,SAA6BwE,EAAKC,iBAGtC,cAAC5B,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,gDAMH,KAEH,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,yBAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,OACZvI,GAAG,aACHwI,KAAK,aACLvK,MAAOH,EAAM+H,WACb4C,SAAUlC,IAEV,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,oDAMJ,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,yBAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,eAACb,EAAA,EAAKe,QAAN,CACAO,QAAM,EACNN,UAAQ,EACRP,GAAG,SACH/H,GAAG,aACHwI,KAAK,aACLvK,MAAOH,EAAMgI,WACb2C,SAAUlC,EAPV,UASA,wBAAQtI,MAAO,GAAf,6BACC+G,EAAY6D,KAAI,SAAC7K,GAAD,OACf,wBAAQC,MAAOD,EAAKgC,GAApB,SAAyBhC,EAAKwK,aAGhC,cAAClB,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,oDAMJ,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,qBAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,UACZvI,GAAG,gBACHwI,KAAK,gBACLvK,MAAOH,EAAMiI,cACb0C,SAAUlC,IAEV,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,+CAMJ,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,0BAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,eACZvI,GAAG,eACHwI,KAAK,eACLvK,MAAOH,EAAMkI,aACbyC,SAAUlC,IAEV,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,qDAMJ,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,+BAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,oBACZvI,GAAG,mBACHwI,KAAK,mBACLvK,MAAOH,EAAMmI,iBACbwC,SAAUlC,IAEV,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,0DAMJ,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,uBAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,YACZvI,GAAG,YACHwI,KAAK,YACLvK,MAAOH,EAAMoI,UACbuC,SAAUlC,IAEV,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,kDAMJ,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,6BAGA,cAACC,EAAA,EAAD,CACID,GAAI,EACJpJ,UAAU,mDAFd,SAII,cAACuI,EAAA,EAAK6B,MAAN,CACAC,QAAStL,EAAMqI,gBACfnI,KAAK,SACLgC,GAAG,kBACHyI,SAAUlC,SAId,eAACe,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,2BAGA,cAACC,EAAA,EAAD,CACID,GAAI,EACJpJ,UAAU,mDAFd,SAII,cAACuI,EAAA,EAAK6B,MAAN,CACAC,QAAStL,EAAMsI,cACfpI,KAAK,SACLgC,GAAG,gBACHyI,SAAUlC,gBAQ1B,eAACxF,EAAA,EAAMO,OAAP,WACE,cAACC,EAAA,EAAD,CAAQ7B,QAAQ,YAAYJ,QAAS,WAC3C6F,GAAa,GACbxE,KAFM,oBAKA,cAACY,EAAA,EAAD,CAAQmG,KAAM,cAAchI,QAAQ,UAAU1B,KAAK,SAAnD,2BAQK,I,qBC5ZR,SAASqL,GAAU3I,GAAQ,IACzBG,EAAuEH,EAAvEG,KAAM4D,EAAiE/D,EAAjE+D,OAAQ9D,EAAyDD,EAAzDC,YAAaC,EAA4CF,EAA5CE,QAAS0I,EAAmC5I,EAAnC4I,SAAUjF,EAAyB3D,EAAzB2D,UAAWkF,EAAc7I,EAAd6I,UADjC,EAEKtE,oBAAS,GAFd,mBAEtBC,EAFsB,KAEXC,EAFW,OAGHF,mBAAS,IAHN,mBAGtBnH,EAHsB,KAGfsH,EAHe,OAIHH,oBAAS,GAJN,mBAItBI,EAJsB,aAKaJ,mBAAS,KALtB,mBAKtBuE,EALsB,KAKPC,EALO,KAMvBC,EAAkB,CACtBR,SAAU,GACVS,SAAU,GACVC,cAAc,EACdC,UAAW,WACXC,WAAY,WACZC,aAAc,IAGlBnE,qBAAU,WACRT,GAAa,GACbvG,QAAQC,IAAI,YAAa4F,EAAQJ,EAAWiF,GACxCzI,EAEKyI,EACPlE,EAASsE,GAETlF,GAAYC,GACXR,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJsC,EAASpC,EAAKf,SACdrD,QAAQC,IAAImE,EAAKf,SAFb,2CADN,uDAKCqE,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,gCAAiCA,MAXjD+C,EAASsE,GFscU,WACrB,IAAMlG,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,sBAGrB,OAAOE,MAAMtB,GAAYc,GACxBS,KAAKrB,IElcNoH,GACC/F,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJ2G,EAAiBzG,EAAKf,QAAQgI,eAD1B,2CADN,uDAIC3D,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,0CAA2CA,QAE1D,CAACgD,EAAMxE,IAEV,IAAMqJ,EAAkB,SAACzD,GAAM,IAAD,EACVA,EAAED,OAAfxG,EADuB,EACvBA,GACDmK,GAFwB,EACnBlM,MACCH,EAAMiM,aAAaK,QAAQpK,IACrC,IAAS,GAANmK,EACD/E,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,IAEPkD,aAAclD,EAAUkD,aAAaM,OAAO,CAACrK,aAE5C,CACH,IAAIsK,EAAWxM,EAAMiM,aACrBO,EAASC,OAAOJ,EAAI,GACpB/E,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,IAEPkD,aAAcO,SAKd/D,EAAe,SAACE,EAAGC,EAAQC,GAC/B,IAAI3G,EAAI/B,OACG2I,IAAPD,GACF3G,EAAKyG,EAAED,OAAOxG,GACd/B,EAAQwI,EAAED,OAAOvI,QAEjB+B,EAAK2G,EAAG3G,GACR/B,EAAQwI,GAEV7H,QAAQC,WAAWf,EAAMkC,IACA,mBAAdlC,EAAMkC,IACbpB,QAAQC,IAAI,QACduG,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN7G,GAAMlC,EAAMkC,SAGfoF,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN7G,EAAK/B,QAmBN6I,EAAS,YFiPM,SAAC3C,EAAIrG,GACxBc,QAAQC,IAAIf,GACZ,IAAM0F,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,aACbZ,QAAS,CACLuB,OAAQN,EACR6C,aAAclJ,MAI1B,OAAOkG,MAAMtB,GAAYc,GACxBS,KAAKrB,KE/PN4H,CAAe/F,EAAQ3G,GACtBmG,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJqC,GAAa,GACXxD,EAAaf,QAAQ,sBACrBA,IAHE,2CADN,uDAMC0F,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACjBzD,QAAQyD,MAAM,mCAAoCA,OAIlD6E,EAAS,YF+FE,SAAC7C,EAAU8C,GAC1B,IAAMsD,EAAU,2BACTtD,GADS,IAEZ9C,cAEEb,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,aACbZ,QAASuH,KAGjB,OAAOzG,MAAMtB,GAAYc,GACxBS,KAAKrB,KE7GN8H,CAAWrG,EAAWvG,GACrBmG,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJqC,GAAa,GACbxD,EAAaf,QAAQ,wBACrBA,IAHI,2CADN,uDAMC0F,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACjBzD,QAAQyD,MAAM,gCAAiCA,OAIrD,OACE,eAACtB,EAAA,EAAD,CAAOC,KAAMH,EAAMI,OAAQ,WACzBkE,GAAa,GACbxE,KAFF,UAGQ,cAACI,EAAA,EAAMG,OAAP,CACCC,aAAW,EADZ,SAEI,cAACJ,EAAA,EAAMK,MAAP,UAAckI,EAAS,WAAW,gBAEtC,cAACvI,EAAA,EAAMM,KAAP,UACA,cAACiG,EAAA,EAAD,CAAMtH,GAAG,YAAYuH,YAAU,EAACrC,UAAWA,EAAWsC,SAjD3C,SAACf,GACpBA,EAAEgB,iBACF,IAAMC,EAAOjB,EAAEkB,eACc,IAAzBD,EAAKE,kBACPnB,EAAEgB,iBACFhB,EAAEoB,mBAEJ1C,GAAa,GACTuC,EAAKE,kBACJ0B,EAAUpC,IACRJ,MAuCC,SACI,gCACI,eAACQ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,uBAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,OACZvI,GAAG,WACHwI,KAAK,WACLvK,MAAOH,EAAMoL,SACbT,SAAUlC,IAEV,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,kDAMJ,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,uBAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,eAACb,EAAA,EAAKe,QAAN,CACAO,QAAM,EACNN,UAAQ,EACRP,GAAG,SACH/H,GAAG,WACHwI,KAAK,WACLvK,MAAOH,EAAM6L,SACblB,SAAUlC,EAPV,UASA,wBAAQtI,MAAO,GAAf,6BACCsL,EAAUV,KAAI,SAAC7K,GAAD,OACb,wBAAQC,MAAOD,EAAKgC,GAApB,SAAyBhC,EAAKwK,aAGhC,cAAClB,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,kDAKJ,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,kCAGA,cAACC,EAAA,EAAD,CACID,GAAI,EACJpJ,UAAU,mDAFd,SAII,cAACuI,EAAA,EAAK6B,MAAN,CACAC,QAAStL,EAAM8L,aACf5L,KAAK,SACLgC,GAAG,eACHyI,SAAUlC,SAKd,eAACe,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,uDAGA,cAACb,EAAA,EAAKW,MAAN,CACIC,QAAM,EACNC,GAAI,EACJpJ,UAAU,4BAHd,SAKI,cAAC,KAAD,CACAd,MAAOH,EAAM+L,UACbpB,SAAUlC,EACVoE,aAAe,EACfC,MACI,cAACtD,EAAA,EAAKe,QAAN,CACEC,UAAQ,EACRtI,GAAK,YACLhC,KAAK,OACLwK,KAAK,YACLD,YAAY,gBAMtB,eAACjB,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,sCAGA,cAACb,EAAA,EAAKW,MAAN,CACIC,QAAM,EACNnJ,UAAU,4BACVoJ,GAAI,EAHR,SAKI,cAAC,KAAD,CACAlK,MAAOH,EAAMgM,WACbrB,SAAUlC,EACVoE,aAAe,EACfC,MACI,cAACtD,EAAA,EAAKe,QAAN,CACEC,UAAQ,EACRtI,GAAK,aACLhC,KAAK,OACLwK,KAAK,aACLD,YAAY,gBAKtB,cAACjB,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,SACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,8BAIA,eAACb,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACI,EAAA,EAAD,CACID,GAAI,EADR,SAGGqB,EAAcX,KAAI,SAACgC,EAAKC,GAAN,OACf,8BACIA,EAAM,GAAG,EACb,cAACxD,EAAA,EAAK6B,MAAN,CACIP,QAAM,EACN5K,KAAM,WACNgC,GAAI6K,EACJzB,QAAStL,EAAMiM,aAAagB,SAASF,GACrCpC,SAAUyB,EACVc,MAAOH,IACR,YAIT,cAACzC,EAAA,EAAD,CACID,GAAI,EADR,SAGGqB,EAAcX,KAAI,SAACgC,EAAKC,GAAN,OACf,8BACIA,EAAM,GAAG,EACb,cAACxD,EAAA,EAAK6B,MAAN,CACIP,QAAM,EACN5K,KAAM,WACNgC,GAAI6K,EACJzB,QAAStL,EAAMiM,aAAagB,SAASF,GACrCpC,SAAUyB,EACVc,MAAOH,IACR,sBAQvB,eAAC9J,EAAA,EAAMO,OAAP,WACE,cAACC,EAAA,EAAD,CAAQ7B,QAAQ,YAAYJ,QAAS,WAC3C6F,GAAa,GACbxE,KAFM,oBAKA,cAACY,EAAA,EAAD,CAAQmG,KAAM,YAAYhI,QAAQ,UAAU1B,KAAK,SAAjD,2BAQK,I,8BCnTFiN,GAAb,kDACI,WAAYvK,GAAQ,IAAD,8BACf,cAAMA,IAED5C,MAAQ,CACToN,OAAQ,IAJG,EADvB,sDASI,WAAqB,IAAD,OAEhBC,KAAKC,aAAezJ,EAAaC,QAAQuJ,KAAKzK,MAAMV,IAC/CqL,WAAU,SAAAlJ,GAEP,EAAKiD,SAAS,CAAE8F,OAAO,GAAD,oBAAM,EAAKpN,MAAMoN,QAAjB,CAAyB/I,MAG/CmJ,YAAW,kBAAM,EAAKC,YAAYpJ,KAAQ,UAjB1D,kCAuBI,WAEIgJ,KAAKC,aAAaI,gBAzB1B,yBA4BI,SAAYrJ,GACRgJ,KAAK/F,SAAS,CAAE8F,OAAQC,KAAKrN,MAAMoN,OAAOnJ,QAAO,SAAAC,GAAC,OAAIA,IAAMG,SA7BpE,oBAgCI,WAAU,IAAD,OACG+I,EAAWC,KAAKrN,MAAhBoN,OACR,OAAKA,EAAOO,OAER,qBAAK1M,UAAU,WAAf,UACKH,QAAQC,IAAIqM,GACbA,EAAOrC,KAAI,SAAC1G,EAAMgI,GAAP,OACP,cAACuB,GAAA,EAAD,CAEAhM,QAASyC,EAAMnE,KACf2N,aAAe,EACfC,QAAS,WAAK,EAAKL,YAAYpJ,IAJ/B,SAKKA,EAAMF,SAJJkI,SANQ,SAlCnC,GAAgC0B,IAAMC,W,8FCE/B,SAASC,GAAuBrL,GAAQ,IACrCsL,EAA2CtL,EAA3CsL,MAAOC,EAAoCvL,EAApCuL,KAAMC,EAA8BxL,EAA9BwL,YAAaC,EAAiBzL,EAAjByL,aAkBlC,OACE,sBAAKhN,MAAO,CAACiN,WAAW,EAAGC,MAAM,GAAjC,UACE,cAACC,GAAA,EAAD,CACEhN,QAnB6B,SAACiN,GAClCJ,EAAaI,EAAO,IAmBhBvD,SAAmB,IAATiD,EACVO,aAAW,aAHb,SAKE,cAAC,KAAD,MAEF,cAACF,GAAA,EAAD,CAAYhN,QArBc,SAACiN,GAC7BJ,EAAaI,EAAON,EAAO,IAoBmBjD,SAAmB,IAATiD,EAAYO,aAAW,gBAA7E,SACG,cAAC,KAAD,MAEH,cAACF,GAAA,EAAD,CACEhN,QArBwB,SAACiN,GAC7BJ,EAAaI,EAAON,EAAO,IAqBvBjD,SAAUiD,GAAQQ,KAAKC,KAAKV,EAAQE,GAAe,EACnDM,aAAW,YAHb,SAKE,cAAC,KAAD,MAEF,cAACF,GAAA,EAAD,CACEhN,QAxB4B,SAACiN,GACjCJ,EAAaI,EAAOE,KAAKE,IAAI,EAAGF,KAAKC,KAAKV,EAAQE,GAAe,KAwB7DlD,SAAUiD,GAAQQ,KAAKC,KAAKV,EAAQE,GAAe,EACnDM,aAAW,YAHb,SAKE,cAAC,KAAD,SAMO,I,UCnDR,SAASI,GAAWlM,GAAQ,IAC1BG,EAAqEH,EAArEG,KAAMgM,EAA+DnM,EAA/DmM,aAAcxI,EAAiD3D,EAAjD2D,UAAWzD,EAAsCF,EAAtCE,QAASmI,EAA6BrI,EAA7BqI,YAAapI,EAAgBD,EAAhBC,YAD5B,EAGIsE,oBAAS,GAHb,mBAGvBC,EAHuB,KAGZC,EAHY,OAIJF,mBAAS,IAJL,mBAIvBnH,EAJuB,KAIhBsH,EAJgB,OAKJH,oBAAS,GALL,mBAKvBI,EALuB,aAMJJ,mBAAS,KANL,mBAMvBS,EANuB,KAMhBC,EANgB,OAOEV,mBAAS,IAPX,mBAOvB6H,EAPuB,KAObC,EAPa,OAQU9H,mBAAS,IARnB,mBAQvB+H,EARuB,KAQTC,EARS,OASAhI,oBAAS,GATT,mBASvBiI,EATuB,KASdC,EATc,KAWxBC,EAAI,uCAAG,WAAOC,GAAP,eAAAvK,EAAA,6DACLwK,EAAO,GACXD,EAAIE,QAAJ,uCAAY,WAAOC,GAAP,SAAA1K,EAAA,sDACRwK,EAAKE,EAAO,SAAc,EADlB,2CAAZ,uDAGAR,EAAaO,QAAb,uCAAqB,WAAOC,GAAP,SAAA1K,EAAA,sDACjBlE,QAAQC,IAAI2O,GACZF,EAAKE,IAAW,EAFC,2CAArB,uDALS,SASIF,EATJ,mFAAH,sDAwBZ1H,qBAAU,WACRT,GAAa,GACbmG,YAAW,kBAAI6B,GAAW,KAAQ,KAChB,OAAfN,GACDzH,EAAS,CACPf,YACAoJ,eAAgB,GAChB7D,cAAc,EACdlE,MAAO,KAETuH,EAAgB,KL2XI,SAAC9I,GACvB,IAAMX,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,gBACbZ,QAAS,CACP2J,aAAc1I,MAItB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,IKtYJ8K,CAAkBb,GACjB5I,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJsC,EAASpC,EAAKf,SACdgL,EAAgBjK,EAAKf,QAAQyD,OAFzB,2CADN,uDAKCY,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,uCAAwCA,QAGzD,CAACgD,IAEJO,qBAAU,WACRR,GAAS,SAACyB,GAAD,mBAAC,eACHA,GADE,IAELnB,MAAQiI,OAAOC,KAAKd,GAAW/K,QAAO,SAACkH,GAAD,OAAQ6D,EAAS7D,aAE3D,CAAC6D,IAEHlH,qBAAU,WA3CJ1B,GAAQG,EAAW,CAAC,SAAU,aAC7BJ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACF6C,EAAS3C,EAAKE,SACdkK,EAAKpK,EAAKE,SAASe,KAAnB,uCAAwB,WAAM4J,GAAN,SAAA/K,EAAA,kEACpBiK,EADoB,SACFc,EADE,6EAAxB,uDAFE,2CADN,uDAOCvH,OAAM,SAACjE,GACJV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,qCAAsCA,QAoC5D,CAAC2K,IAEH,IAAMzG,EAAe,SAACE,EAAGC,EAAQC,GAC/B,IAAI3G,EAAI/B,OACG2I,IAAPD,GACF3G,EAAKyG,EAAED,OAAOxG,GACd/B,EAAQwI,EAAED,OAAOvI,QAEjB+B,EAAK2G,EAAG3G,GACR/B,EAAQwI,GAEe,mBAAd3I,EAAMkC,IACbpB,QAAQC,IAAI,QACduG,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN7G,GAAMlC,EAAMkC,SAGfoF,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN7G,EAAK/B,QAKN6P,EAAmB,SAACrH,GACxB,IAAIzG,EAAKyG,EAAED,OAAOxG,GAClB+M,GAAY,SAAClG,GAAD,mBAAC,eACRA,GADO,kBAET7G,GAAM6G,EAAU7G,SAkBf8G,EAAS,YLqUY,SAAC3C,EAAIrG,GAC9B,IAAM0F,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,mBACbZ,QAAS,CACL2J,aAAc1I,EACd6C,aAAclJ,MAI1B,OAAOkG,MAAMtB,GAAYc,GACxBS,KAAKrB,KKlVNmL,CAAqBlB,EAAc/O,GAClCmG,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACFqC,GAAa,GACbxD,EAAaf,QAAQ,sBACrBA,IAHE,2CADN,uDAMC0F,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACjBzD,QAAQyD,MAAM,0CAA2CA,OAIzD6E,EAAS,YLuRQ,SAACC,GACtB,IAAMC,EAAY,eACXD,GAED3D,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,mBACbZ,QAASkE,KAGjB,OAAOpD,MAAMtB,GAAYc,GACxBS,KAAKrB,KKpSNoL,CAAiBlQ,GAChBmG,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACFqC,GAAa,GACfxD,EAAaf,QAAQ,wBACrBA,IAHI,2CADN,uDAMC0F,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACjBzD,QAAQyD,MAAM,uCAAwCA,OAI5D,OACE,cAACtB,EAAA,EAAD,CAAOC,KAAMH,EAAMI,OAAQ,WAC3BkE,GAAa,GACbxE,KAFA,SAGGuM,EACD,cAAClF,EAAA,EAAD,CAAKjJ,UAAU,gCAAgCI,MAAO,CAAC8O,OAAO,SAA9D,SACA,cAACC,GAAA,EAAD,CAASC,KAAK,KAAKC,UAAU,SAASC,KAAK,SAA3C,SACA,sBAAMtP,UAAU,UAAhB,4BAGE,gCACI,cAACgC,EAAA,EAAMG,OAAP,CACCC,aAAW,EADZ,SAEI,cAACJ,EAAA,EAAMK,MAAP,UAA6B,OAAfyL,EAAoB,WAAW,gBAEjD,cAAC9L,EAAA,EAAMM,KAAP,UACA,cAACiG,EAAA,EAAD,CAAMtH,GAAI,YAAYuH,YAAU,EAACrC,UAAWA,EAAWsC,SAxD5C,SAACf,GACpBA,EAAEgB,iBACF,IAAMC,EAAOjB,EAAEkB,eACc,IAAzBD,EAAKE,kBACPnB,EAAEgB,iBACFhB,EAAEoB,mBAEJ1C,GAAa,GACTuC,EAAKE,kBACW,OAAfiF,EAAqB3F,IACnBJ,MA8CC,SACI,gCACI,eAACQ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,0BAGA,cAACC,EAAA,EAAD,CACID,GAAI,EACJpJ,UAAU,mDAFd,SAII,cAACuI,EAAA,EAAKe,QAAN,CAAcrK,KAAK,OAAOuK,YAAaQ,EAAaJ,UAAQ,SAIhE,eAACrB,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,8BAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,OACZvI,GAAG,iBACHwI,KAAK,iBACLvK,MAAOH,EAAM2P,eACbhF,SAAUlC,IAEV,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,kDAMJ,cAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,SACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,qBAIA,eAACb,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACI,EAAA,EAAD,CACID,GAAI,EADR,SAGKzC,EAAMmD,KAAI,SAACI,EAAM6B,GAAP,OACP,8BACIA,EAAM,GAAG,EACb,cAACxD,EAAA,EAAK6B,MAAN,CACIP,QAAM,EACN5K,KAAM,WACNgC,GAAIiJ,EAAKxE,OACT2E,QAAS0D,EAAS7D,EAAKxE,QACvBgE,SAAUqF,EACV9C,MAAO/B,EAAKC,WACb,YAIX,cAACd,EAAA,EAAD,CACID,GAAI,EADR,SAGKzC,EAAMmD,KAAI,SAACI,EAAM6B,GAAP,OACP,8BACIA,EAAM,GAAG,EACb,cAACxD,EAAA,EAAK6B,MAAN,CACIP,QAAM,EACN5K,KAAM,WACNgC,GAAIiJ,EAAKxE,OACT2E,QAAS0D,EAAS7D,EAAKxE,QACvBgE,SAAUqF,EACV9C,MAAO/B,EAAKC,WACb,eAMX,eAAC5B,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,2BAGA,cAACC,EAAA,EAAD,CACID,GAAI,EACJpJ,UAAU,mDAFd,SAII,cAACuI,EAAA,EAAK6B,MAAN,CACAC,QAAStL,EAAM8L,aACf5L,KAAK,SACLgC,GAAG,eACHyI,SAAUlC,gBAQ1B,eAACxF,EAAA,EAAMO,OAAP,WACE,cAACC,EAAA,EAAD,CAAQ7B,QAAQ,YAAYJ,QAAS,WAC3C6F,GAAa,GACbxE,KAFM,oBAKA,cAACY,EAAA,EAAD,CAAQmG,KAAM,YAAYhI,QAAQ,UAAU1B,KAAK,SAAjD,6BCvQH,SAASsQ,GAAY5N,GAAO,IAC1BC,EAAoBD,EAApBC,YAAa4N,EAAO7N,EAAP6N,IAClB,OACA,cAACxN,EAAA,EAAD,CAAOoN,KAAK,KAAKK,UAAQ,EAACxN,KAAY,OAANuN,EAAuBtN,OAAQN,EAA/D,SACI,qBAAK4N,IAAKA,MAKH,I,4KCCR,SAASE,KAAQ,IAAD,EACGxJ,mBAAS,IADZ,gCAEKA,mBAAS,OAFd,mBAEdI,EAFc,aAGSJ,mBAAS,KAHlB,mBAGdyJ,EAHc,KAGLC,EAHK,OAIe1J,mBAAS,IAJxB,mBAId2J,EAJc,KAIFC,EAJE,OAKiB5J,mBAAS,IAL1B,mBAKdD,EALc,KAKD8J,EALC,OAMyB7J,mBAAS,IANlC,mBAMd8J,EANc,KAMGC,EANH,OAOK/J,mBAAS,MAPd,mBAOdgK,EAPc,KAOPC,EAPO,OAQOjK,mBAAS,CACnCkK,MAAM,IATa,mBAQdC,EARc,KAQNC,EARM,KAWjB7Q,EAAUC,cAER6Q,EAAS,YP0KI,SAAC/L,GAClB,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,WACbZ,QAAS,CACPa,QAAS,SACTR,cAIR,OAAOS,MAAMtB,GAAYc,GACxBS,KAAKrB,KOvLN2M,CAAa,CAAC,WAAY,aAAc,aAAa,eAAgB,WACpEtL,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJ6L,EAAW3L,EAAKE,QAAQnB,QAAO,SAACyN,GAAD,MAAgC,WAAtBA,EAAOC,cAA2C,OAAlBD,EAAO/K,WAD5E,2CADN,uDAIC6B,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,sCAAuCA,MP2drC,WAClB,IAAMmB,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,kBAGrB,OAAOE,MAAMtB,GAAYc,GACxBS,KAAKrB,IOneN8M,GACCzL,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJ+L,EAAc7L,EAAKf,SADf,2CADN,uDAICqE,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,sCAAuCA,OAIzDuD,qBAAU,WACR0J,IACAzK,GAAe,UACdZ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJkM,EAAmBhM,EAAKf,SACxB6M,EAAenB,OAAOgC,QAAQ3M,EAAKf,SAAS4G,KAAI,SAAC7K,GAAD,MAAS,CACvDgC,GAAIhC,EAAK,GACTwK,KAAMxK,EAAK,GAAGwK,UAJZ,2CADN,uDAQClC,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,uCAAwCA,QAEvD,CAACgD,IAEJ,IAYM1E,EAAc,SAACiP,GACnB,IAAIC,EAAUT,EAAOQ,GACrBP,GAAU,SAACxI,GAAD,mBAAC,eACNA,GADK,kBAEP+I,GAASC,QAId,OACA,gCACE,cAAC9K,GAAD,CACEC,YAAeA,EACfnE,KAAMuO,EAAOD,KACb1K,OAAU,KACVG,SAAYqK,EACZrO,QAAS,WACL0O,IACA3O,EAAY,SAEhBA,YAAa,WACXA,EAAY,WAGhB,cAACmP,GAAA,EAAD,CAAW/Q,UAAU,YAArB,SACE,eAACiJ,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAAC4H,GAAA,EAAD,UACE,oBAAGhR,UAAU,eAAb,UACA,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,WAAhB,SACA,cAAC,KAAD,CAAkBM,SAAS,QAAQF,MAAO,CAAC6Q,MAAM,eAHnD,SAOE,oBAAIjR,UAAU,iBAAd,sBAMN,cAACqJ,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAAC4H,GAAA,EAAD,UACE,oBAAGhR,UAAU,eAAb,UACA,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,WAAhB,SACA,cAAC,KAAD,CAAkBM,SAAS,QAAQF,MAAO,CAAC6Q,MAAM,eAHnD,SAOE,oBAAIjR,UAAU,iBAAd,sBAMN,cAACqJ,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAAC4H,GAAA,EAAD,UACE,oBAAGhR,UAAU,eAAb,UACA,qBAAKA,UAAU,mBAAf,SACE,sBAAMA,UAAU,WAAhB,SACA,cAAC,KAAD,CAAkBM,SAAS,QAAQF,MAAO,CAAC6Q,MAAM,eAHnD,SAOE,oBAAIjR,UAAU,iBAAd,sBAMN,cAACqJ,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAAC4H,GAAA,EAAD,UACE,oBAAGhR,UAAU,eAAb,UACA,qBAAKA,UAAU,qBAAf,SACE,sBAAMA,UAAU,WAAhB,SACA,cAAC,KAAD,CAAkBM,SAAS,QAAQF,MAAO,CAAC6Q,MAAM,eAHnD,uBAOE,oBAAIjR,UAAU,iBAAiBI,MAAO,CAAC6Q,MAAM,WAA7C,SACGtB,EAAQjD,qBAOrB,qBAAK1M,UAAU,UAAf,SACA,eAACiJ,EAAA,EAAD,WACA,cAACI,EAAA,EAAD,CAAKD,GAAI,EAAT,SACM,eAAC4H,GAAA,EAAD,CAAM5Q,MAAO,CAAC8Q,OAAO,SAArB,UACA,cAACC,GAAA,EAAD,CAAYnR,UAAU,YAAYW,QAAQ,KAAKyQ,UAAU,KAAzD,yBAGA,cAACC,GAAA,EAAD,CAAgBD,UAAWE,KAAOtR,UAAU,oBAAoBI,MAAO,CAAC,aAAa,QAArF,SACE,eAACmR,GAAA,EAAD,CAAO9D,aAAW,eAAlB,UACE,cAAC+D,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAwB,qCACxB,cAACD,GAAA,EAAD,CAAWC,MAAM,cAGrB,cAACC,GAAA,EAAD,UACG/B,EAAW/F,KAAI,SAAC+H,EAAK9F,GAAN,OACd,eAAC0F,GAAA,EAAD,WACA,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBE,EAAIhM,WAC7B,cAAC6L,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACI,cAACpE,GAAA,EAAD,CAAYnN,MAAO,CAAC0R,QAAQ,GAC5BvR,QAAS,WACL4P,EAAS0B,EAAIhM,UACbjE,EAAY,SAHhB,SAKE,cAAC,KAAD,UARSiQ,EAAIhM,yBAmB7B,cAACwD,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,eAAC4H,GAAA,EAAD,CAAM5Q,MAAO,CAAC8Q,OAAO,SAArB,UACA,cAACC,GAAA,EAAD,CAAYnR,UAAU,YAAYW,QAAQ,KAAKyQ,UAAU,KAAzD,kCAGA,cAACC,GAAA,EAAD,CAAgBD,UAAWE,KAAOtR,UAAU,oBAAoBI,MAAO,CAAC,aAAa,QAArF,SACE,eAACmR,GAAA,EAAD,CAAOQ,cAAY,EAACtE,aAAW,eAA/B,UACE,cAAC+D,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAwB,qCACxB,cAACD,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAwB,uCACxB,cAACD,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAwB,uCACxB,cAACD,GAAA,EAAD,CAAWC,MAAM,cAGrB,cAACC,GAAA,EAAD,UACGjC,EAAQ7F,KAAI,SAAC+H,EAAK9F,GAAN,OACX,eAAC0F,GAAA,EAAD,WACA,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBE,EAAIhM,WAC3B,cAAC6L,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBE,EAAI/K,aAC7B,cAAC4K,GAAA,EAAD,CAAWC,MAAM,OAAjB,cAA2D9J,IAAlCmI,EAAgB6B,EAAI9K,YAA0B8K,EAAI9K,WAAaiJ,EAAgB6B,EAAI9K,YAAY0C,OACxH,cAACiI,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACE,cAACpE,GAAA,EAAD,CAAYnN,MAAO,CAAC0R,QAAQ,GAC5BvR,QAAS,WA9Jd,IAACmF,IA+JemM,EAAInM,OA9JjCD,GAAYC,GACXR,KADD,uCACM,WAAOjB,GAAP,eAAAF,EAAA,sDACAuB,EAAYrB,EAAKf,QAAQoC,UAC7B7F,EAAQM,KAAK,YAAYiS,OAAO1M,GAAW,SAAS0M,OAAOtM,IAFvD,2CADN,uDAKC6B,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,qCAAsCA,OAqJpC,SAIE,cAAC,KAAD,UATSuO,EAAIhM,iCCjN9B,SAASoM,KACd,IAAM3S,EAAeC,qBAAWd,GAExBW,GADYE,EAAaP,MACZO,EAAbF,UACJK,EAAUC,cAJQ,EAKIwG,mBAAS,CACjCgM,SAAU,GACVC,SAAU,KAPU,mBAKfpT,EALe,KAKRsH,EALQ,KAShBmB,EAAe,SAACE,GAAO,IAAD,EACJA,EAAED,OAAhBxG,EADkB,EAClBA,GAAI/B,EADc,EACdA,MACZmH,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN7G,EAAK/B,QAgEV,OACE,qBAAKc,UAAU,sBAAf,SACE,qBAAKA,UAAU,iCAAf,SACE,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,gDAAf,UACE,oBAAIA,UAAU,YAAd,mBACA,mBAAGA,UAAU,kBAAb,8CAGA,iCACE,qBAAKA,UAAU,kBAAf,SACE,uBACEiB,GAAG,WACHhC,KAAK,WACLuK,YAAY,WACZD,SAAS,WACTvJ,UAAU,oDACV0J,SAAUlC,EACVtI,MAAOH,EAAMmT,aAGjB,qBAAKlS,UAAU,kBAAf,SACE,uBACEiB,GAAG,WACHhC,KAAK,WACLuK,YAAY,WACZD,SAAS,WACTvJ,UAAU,iEACV0J,SAAUlC,EACVtI,MAAOH,EAAMoT,aAGjB,mBAAGlR,GAAG,cAAcjB,UAAU,gBAC9B,wBACEf,KAAK,SACLe,UAAU,uEACVO,QAnGD,SAACmH,GAChBA,EAAEgB,iBADoB,IAEhBwJ,EAAuBnT,EAAvBmT,SAAUC,EAAapT,EAAboT,SAsCC,WAAbD,GAAsC,WAAbC,GAC3B/S,EAAS,CACPH,KAAM,UACNC,OAAO,IAETE,EAAS,CACPH,KAAM,UACNC,MAAOgT,IAETzS,EAAQM,KAAK,UACgB,IAApBmS,EAASxF,OAClB0F,SAASC,eAAe,eAAeC,UACrC,2BAC2B,IAApBH,EAASzF,OAClB0F,SAASC,eAAe,eAAeC,UACrC,2BAEFF,SAASC,eAAe,eAAeC,UACrC,gCAsCU,qCAiBH,I,kDC5HR,SAASC,GAAT,GAA6B,EAATC,MAAU,IAC/B/S,EAAUC,cADoB,EAEIwG,mBAAS,IAFb,mBAE3BuM,EAF2B,KAEdC,EAFc,OAGVxM,mBAAS,IAHC,mBAG3ByM,EAH2B,KAGrBC,EAHqB,OAIN1M,mBAAS,CACnC2M,QAAQ,EACRC,KAAK,IAN2B,mBAI3BzC,EAJ2B,KAInBC,EAJmB,OAQRpK,mBAAS,IARD,mBAQ3BgK,EAR2B,KAQpBC,EARoB,OASRjK,mBAAS,CACjC8D,YAAa,GACb+I,SAAU,GACVC,YAAa,KAZmB,mBAS3BjU,EAT2B,KASpBsH,EAToB,OAcFH,mBAAS,CACvC8D,YAAa,GACb+I,SAAU,GACVC,YAAa,KAjBmB,mBAc3BC,EAd2B,KAcjBC,EAdiB,OA+BRhN,oBAAS,GA/BD,mBA+B3BI,EA/B2B,KAgC5BiK,GAhC4B,KAgCnB,WACbhM,GAAY,CAAC,YAAa,cAAe,WAAY,gBAClDW,KADH,uCACQ,WAAOjB,GAAP,SAAAF,EAAA,sDACJlE,QAAQC,IAAImE,EAAKE,SACjBuO,EAAezO,EAAKE,SAFhB,2CADR,uDAKGoD,OAAM,SAACjE,GACNzD,QAAQyD,MAAM,sBAAuBA,QAG3CuD,qBAAU,WACR0J,MACC,CAACjK,IAEJO,qBAAU,WACR7D,MACC,CAACyP,EAAaQ,IAEjB,IAAMzL,EAAe,SAACE,GAAO,IAAD,EACJA,EAAED,OAAhBxG,EADkB,EAClBA,GAAI/B,EADc,EACdA,MACZmH,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN7G,EAAK/B,QAIJ0C,EAAc,SAACiP,GACnB,IAAIC,EAAUT,EAAOQ,GACrBP,GAAU,SAACxI,GAAD,mBAAC,eACNA,GADK,kBAEP+I,GAASC,QASR9N,EAAS,SAAC0E,GAAO,IACfsC,EAAuCiJ,EAAvCjJ,YAAa+I,EAA0BE,EAA1BF,SAAUC,EAAgBC,EAAhBD,YACzBG,EAAUV,EACd5S,QAAQC,IAAIqT,GACZP,EACEO,EAAQnQ,QACN,SAAC6O,GAAD,OACEA,EAAG,YAAgBuB,cAAc/H,QAAQrB,EAAYoJ,gBAAkB,GACvEvB,EAAG,SAAauB,cAAc/H,QAAQ0H,EAASK,gBAAkB,GACjEvB,EAAG,YAAgBuB,cAAc/H,QAAQ2H,EAAYI,gBAAkB,OAKzEC,EAAS,SAAC3L,ITyCC,WACf,IAAMjD,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,gBACbZ,QAAS,CACP6F,YAAa,GACbgJ,YAAa,GACbD,SAAU,GACVO,cAAe,GACfC,UAAW,GACXC,UAAW,OAInB,OAAOvO,MAAMtB,GAAYc,GACxBS,KAAKrB,KS1DN4P,GACGvO,KADH,+BAAAnB,EAAA,MACQ,WAAOE,GAAP,eAAAF,EAAA,sDACAqB,EAAKnB,EAAKf,QAAQoC,UACtB7F,EAAQM,KAAK,YAAcqF,GAFvB,2CADR,uDAKGmC,OAAM,SAACjE,GACNzD,QAAQyD,MAAM,sBAAuBA,OAQrCoQ,EAAG,uCAAG,WAAOpO,GAAP,SAAAvB,EAAA,sDACVyB,GAAWF,GACVJ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJwM,IACA3O,EAAY,UACZgB,EAAaf,QAAQ,mBAHjB,2CADN,uDAMC0F,OAAM,SAACjE,GACNzD,QAAQyD,MAAM,sBAAuBA,MAR7B,2CAAH,sDApGyB,EAiHVwJ,IAAM5G,SAAS,GAjHL,mBAiH3BgH,EAjH2B,KAiHrByG,EAjHqB,QAkHI7G,IAAM5G,SAAS,GAlHnB,qBAkH3BiH,GAlH2B,MAkHdyG,GAlHc,MAoH5BC,GAAY1G,GAAcO,KAAKoG,IAAI3G,GAAawF,EAAKjG,OAASQ,EAAOC,IAW3E,OACE,gCACE,cAACzL,EAAD,CACEI,KAAMuO,EAAOwC,OACbhR,QAAS,WACP6R,EAAIxD,IAENtO,YAAa,WACXA,EAAY,WAEdpB,MAAM,mBACNuB,KAAK,yBAEP,cAACL,EAAD,CACEI,KAAMuO,EAAOyC,IACbjR,QAAS,WACPwR,KAEFzR,YAAa,WACXA,EAAY,QAEdpB,MAAM,mBACNuB,KAAK,uBAGP,sBAAK/B,UAAU,UAAf,UACA,eAAC+T,GAAA,EAAD,WACE,cAACA,GAAA,EAAW1S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACwS,GAAA,EAAW1S,KAAZ,CAAiB2S,QAAM,EAAvB,yBAEA,cAACzL,EAAA,EAAD,CAAM0L,QAAM,EAACjU,UAAU,YAAYyI,SAAU,SAACf,GAAKA,EAAEgB,kBAArD,SACE,eAACO,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAACb,EAAA,EAAKe,QAAN,CACErI,GAAG,cACHuI,YAAY,OACZE,SAAUlC,EACVtI,MAAOH,EAAMiL,gBAGjB,cAACX,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAACb,EAAA,EAAKe,QAAN,CACErI,GAAG,WACHuI,YAAY,WACZE,SAAUlC,EACVtI,MAAOH,EAAMgU,aAGjB,cAAC1J,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAACb,EAAA,EAAKe,QAAN,CACErI,GAAG,cACHuI,YAAY,OACZE,SAAUlC,EACVtI,MAAOH,EAAMiU,gBAGjB,cAAC3J,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC5G,EAAA,EAAD,CAAQvD,KAAK,SAASsB,QAAS,WAAK2S,EAAYnU,IAAhD,sBAIF,cAACsK,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC5G,EAAA,EAAD,CAAQvD,KAAK,SAAS0B,QAAQ,YAAYJ,QA1KxC,WACZ8F,EAAS,CACP2D,YAAa,GACb+I,SAAU,GACVC,YAAa,KAEfE,EAAY,CACVlJ,YAAa,GACb+I,SAAU,GACVC,YAAa,MAiKL,sBAIF,cAAC3J,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC5G,EAAA,EAAD,CACExC,UAAU,kBACVf,KAAK,SACLsB,QAAS,WACPqB,EAAY,QAJhB,6BAaR,qBAAK5B,UAAU,UAAf,SACE,cAACqR,GAAA,EAAD,CAAgBD,UAAWE,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO9D,aAAW,eAAlB,UACE,cAAC+D,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,sBACA,cAACA,GAAA,EAAD,CAAWC,MAAM,OAAjB,sBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,OAAjB,kBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,0BAGJ,eAACC,GAAA,EAAD,YACIzE,GAAc,EAChBwF,EAAKuB,MAAMhH,EAAOC,GAAaD,EAAOC,GAAcA,IACpDwF,GAAM7I,KAAI,SAAC+H,GAAD,OACR,eAACJ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWN,UAAU,KAAK+C,MAAM,MAAhC,SACGtC,EAAI7H,cAEP,cAAC0H,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBE,EAAIkB,WAC7B,cAACrB,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBE,EAAImB,cAC7B,eAACtB,GAAA,EAAD,CAAWC,MAAM,QAAQvR,MAAO,CAAC0R,QAAQ,GAAzC,UACE,cAACvE,GAAA,EAAD,CAAYhN,QAAS,kBArIzB+E,EAqIoCuM,EAAIvM,eApIpD7F,EAAQM,KAAK,YAAcuF,GADhB,IAACA,GAqII,SACE,cAAC,KAAD,CACEhE,aAAYuQ,EAAIvM,UAChB8J,KAAM,GACN6B,MAAM,gBAGV,cAAC1D,GAAA,EAAD,CAAYhN,QAAS,kBA1KhB+E,EA0KoCuM,EAAIvM,UAzK7D6K,EAAS7K,QACT1D,EAAY,UAFQ,IAAC0D,GA0KL,SACE,cAAC,KAAD,CAAO2L,MAAM,MAAM7B,KAAM,YAfhByC,EAAI7H,gBAoBpB6J,GAAY,GACX,cAACpC,GAAA,EAAD,CAAUrR,MAAO,CAAE8Q,OAAQ,GAAK2C,IAAhC,SACE,cAACnC,GAAA,EAAD,CAAW0C,QAAS,SAI1B,cAACC,GAAA,EAAD,UACA,cAAC5C,GAAA,EAAD,UACE,cAAC6C,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,CAAEtI,MAAO,MAAO/M,OAAQ,IACpDkV,QAAS,EACTnH,MAAO0F,EAAKjG,OACZS,YAAaA,GACbD,KAAMA,EACNsH,YAAa,CACXC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEVtH,aA9IW,SAACI,EAAOmH,GAC/BhB,EAAQgB,IA8IIC,oBA3IkB,SAACpH,GAC/BoG,GAAeiB,SAASrH,EAAM/F,OAAOvI,MAAO,KAC5CyU,EAAQ,IA0IImB,iBAAkB9H,mBAWnB,I,4BClRR,SAAS+H,KAAe,IACvBzP,EAAa0P,cAAb1P,UADsB,EAEMY,oBAAS,GAFf,mBAErBC,EAFqB,KAEVC,EAFU,OAGFF,mBAAS,CACjC8D,YAAa,GACbgJ,YAAa,GACbD,SAAU,GACVO,cAAe,GACfC,UAAW,GACXC,UAAW,KATe,mBAGrBzU,EAHqB,KAGdsH,EAHc,OAWFH,oBAAS,GAXP,mBAWrBI,EAXqB,aAYYJ,mBAAS,KAZrB,mBAYrB+O,EAZqB,KAYPC,EAZO,KAc5BrO,qBAAU,WACRtB,GAAeD,GACZJ,KADH,uCACQ,WAAOjB,GAAP,SAAAF,EAAA,sDACJsC,EAASpC,EAAKf,SADV,2CADR,uDAIGqE,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,uCAAwCA,MAExDwC,GAAe,WACdZ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJmR,EAAgBtG,OAAOgC,QAAQ3M,EAAKf,SAAS4G,KAAI,SAAC7K,GAAD,MAAS,CACxDgC,GAAIhC,EAAK,GACTwK,KAAMxK,EAAK,GAAGwK,UAHZ,2CADN,uDAOClC,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,wCAAyCA,QAE1D,CAACgD,IAEJ,IAAMkB,EAAe,SAACE,GAAO,IAAD,EACJA,EAAED,OAAhBxG,EADkB,EAClBA,GAAI/B,EADc,EACdA,MACZmH,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN7G,EAAK/B,QAgBJ6I,EAAS,YVyNS,SAAC3C,EAAIrG,GAC3B,IAAM0F,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,gBACbZ,QAAS,CACTmB,UAAWF,EACX6C,aAAclJ,MAItB,OAAOkG,MAAMtB,GAAYc,GACxBS,KAAKrB,KUtONsR,CAAkB7P,EAAWvG,GAC1BmG,KADH,uCACQ,WAAOjB,GAAP,SAAAF,EAAA,sDACJnB,EAAaf,QAAQ,sBADjB,2CADR,uDAIG0F,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,sBAAuBA,OAI3C,OACE,gCACE,eAACyQ,GAAA,EAAD,WACE,cAACA,GAAA,EAAW1S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACwS,GAAA,EAAW1S,KAAZ,CAAiBE,KAAK,WAAtB,sBACA,cAACwS,GAAA,EAAW1S,KAAZ,CAAiB2S,QAAM,EAAvB,6BAEF,eAACzL,EAAA,EAAD,CAAMC,YAAU,EAACrC,UAAWA,EAAWsC,SA9BtB,SAACf,GACpBA,EAAEgB,iBACF,IAAMC,EAAOjB,EAAEkB,eACc,IAAzBD,EAAKE,kBACPnB,EAAEgB,iBACFhB,EAAEoB,mBAEJ1C,GAAa,GACbvG,QAAQC,IAAI6I,EAAKE,iBACbF,EAAKE,iBAAiBd,KAqBxB,UACE,eAACQ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,wBAGA,cAACC,EAAA,EAAD,CACED,GAAI,EADN,SAGE,cAACb,EAAA,EAAKe,QAAN,CAAcrK,KAAK,OAAOuK,YAAalE,EAAWsE,UAAQ,SAI9D,eAACrB,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,0BAGA,eAACC,EAAA,EAAD,CACED,GAAI,EADN,UAGE,cAACb,EAAA,EAAKe,QAAN,CACEC,UAAQ,EACRC,YAAY,OACZvI,GAAG,cACHwI,KAAK,cACLvK,MAAOH,EAAMiL,YACbN,SAAUlC,IAEZ,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,qDAMJ,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,0BAGA,eAACC,EAAA,EAAD,CACED,GAAI,EADN,UAGE,eAACb,EAAA,EAAKe,QAAN,CACEO,QAAM,EACNN,UAAQ,EACRP,GAAG,SACH/H,GAAG,cACHwI,KAAK,cACLvK,MAAOH,EAAMiU,YACbtJ,SAAUlC,EAPZ,UASE,wBAAQtI,MAAO,GAAf,6BAEE+V,EAAanL,KAAI,SAAC7K,GAAD,OACf,wBAAQC,MAAOD,EAAKgC,GAApB,SAAyBhC,EAAKwK,aAIpC,cAAClB,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,qDAMJ,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,sBAGA,eAACC,EAAA,EAAD,CACED,GAAI,EADN,UAGE,cAACb,EAAA,EAAKe,QAAN,CACEC,UAAQ,EACRtI,GAAG,WACHwI,KAAK,WACLvK,MAAOH,EAAMgU,SACbrJ,SAAUlC,IAEZ,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,iDAMJ,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,oCAGA,eAACC,EAAA,EAAD,CACED,GAAI,EADN,UAGE,cAACb,EAAA,EAAKe,QAAN,CACEC,UAAQ,EACRtI,GAAG,YACHwI,KAAK,YACLvK,MAAOH,EAAMyU,UACb9J,SAAUlC,IAEZ,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,+DAMJ,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,wBAGA,eAACC,EAAA,EAAD,CACED,GAAI,EADN,UAGE,cAACb,EAAA,EAAKe,QAAN,CACEC,UAAQ,EACRtI,GAAG,YACHwI,KAAK,YACLvK,MAAOH,EAAMwU,UACb7J,SAAUlC,IAEZ,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,mDAKJ,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,yBAGA,cAACb,EAAA,EAAKW,MAAN,CACEC,QAAM,EACNC,GAAI,EAFN,SAIE,cAAC,KAAD,CACEqL,WAAY,CACVlL,UAAU,GAEZC,YAAY,gBACZvI,GAAG,gBACHwI,KAAK,gBACL2L,QAAS,KACTlW,MAAO8S,OAAOjT,EAAMuU,eACpB5J,SAAU,SAAChC,GACTrB,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN,gBAAkB+M,SAASnN,SAGhC2N,QAAS,SAACnW,EAAOkW,GACf,OAAqB,IAAjBlW,EAAMwN,eAWlB,cAACnE,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,SACE,cAACI,EAAA,EAAD,CAAKD,GAAI,EACRpJ,UAAU,6BADX,SAEE,cAACwC,EAAA,EAAD,CAAQvD,KAAK,SAAb,8BAQG,I,+BClPR,SAASqW,GAAgB3T,GAAQ,IACjC2D,EAAa0P,cAAb1P,UADgC,EAECY,mBAAS,IAFV,mBAE9B8D,EAF8B,KAEjBuL,EAFiB,OAGXrP,mBAAS,CACjCsP,aAAc,EACdC,uBAAwB,EACxBC,kBAAkB,EAClBC,oBAAoB,EACpBC,eAAe,IARoB,mBAG9B7W,EAH8B,KAGvBsH,EAHuB,OAUXH,oBAAS,GAVE,mBAU9BI,EAV8B,UAYrCO,qBAAU,WACRtB,GAAeD,GACdJ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJwR,EAAetR,EAAKf,QAAQ8G,aADxB,2CADN,uDAICzC,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,wCAAyCA,MAkBzD+C,EAPU,CACRmP,aAAc,EACdC,uBAAwB,EACxBC,kBAAkB,EAClBC,oBAAoB,EACpBC,eAAe,MAGhB,CAACtP,IAEJ,IAAMkB,EAAe,SAACE,EAAGC,EAAQC,GAC/B,IAAI3G,EAAI/B,OACG2I,IAAPD,GACF3G,EAAKyG,EAAED,OAAOxG,GACd/B,EAAQwI,EAAED,OAAOvI,QAEjB+B,EAAK2G,EAAG3G,GACR/B,EAAQwI,GAEe,mBAAd3I,EAAMkC,GACfoF,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN7G,GAAMlC,EAAMkC,QAGfoF,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN7G,EAAK/B,QAUN6I,EAAS,aAIf,SAAS8N,EAASC,GAChB,OAAOA,EAAM,QAGf,OACE,gCACE,eAAC/B,GAAA,EAAD,WACE,cAACA,GAAA,EAAW1S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACwS,GAAA,EAAW1S,KAAZ,CAAiBE,KAAK,WAAtB,sBACA,cAACwS,GAAA,EAAW1S,KAAZ,CAAiB2S,QAAM,EAAvB,iCAEF,cAACD,GAAA,EAAD,UACA,oBAAI3T,MAAO,CAAC6Q,MAAM,WAAlB,SAA+BjH,MAE/B,eAACzB,EAAA,EAAD,CAAME,SAvBW,SAACf,GACpBA,EAAEgB,iBACFX,KAqBE,UACE,eAACQ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,mCAGA,cAACC,EAAA,EAAD,CACED,GAAI,EACJpJ,UAAU,mDAFZ,SAIE,cAAC+V,GAAA,EAAD,UACE,cAAC,KAAD,CACEC,QAAM,EACN/U,GAAG,eACHgV,OAAQJ,EACR7V,UAAU,eACVd,MAAOH,EAAMyW,aACb1B,IAAK,EACLlG,IAAK,IACLlE,SAAUlC,WAMlB,eAACe,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,0DAGA,cAACC,EAAA,EAAD,CACED,GAAI,EACJpJ,UAAU,mDAFZ,SAIE,cAAC+V,GAAA,EAAD,UACE,cAAC,KAAD,CACEC,QAAM,EACN/U,GAAG,yBACHgV,OAAQJ,EACR7V,UAAU,eACVd,MAAOH,EAAM0W,uBACb3B,IAAK,EACLlG,IAAK,IACLlE,SAAUlC,WAMlB,eAACe,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,mDAGA,cAACC,EAAA,EAAD,CACED,GAAI,EACJpJ,UAAU,mDAFZ,SAIE,cAACuI,EAAA,EAAK6B,MAAN,CACEC,QAAStL,EAAM2W,iBACfzW,KAAK,SACLgC,GAAG,mBACHyI,SAAUlC,SAKhB,eAACe,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,4DAGA,cAACC,EAAA,EAAD,CACED,GAAI,EACJpJ,UAAU,oDAFZ,SAIE,cAACuI,EAAA,EAAK6B,MAAN,CACEC,QAAStL,EAAM6W,cACf3W,KAAK,SACLgC,GAAG,gBACHyI,SAAUlC,SAKhB,eAACe,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,6CAGA,cAACC,EAAA,EAAD,CACED,GAAI,EACJpJ,UAAU,oDAFZ,SAIE,cAACuI,EAAA,EAAK6B,MAAN,CACEC,QAAStL,EAAM4W,mBACf1W,KAAK,SACLgC,GAAG,qBACHyI,SAAUlC,SAKhB,cAACe,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,SACE,cAACI,EAAA,EAAD,CAAKD,GAAI,EACRpJ,UAAU,6BADX,SAEE,cAACwC,EAAA,EAAD,CAAQvD,KAAK,SAAb,8BAQG,I,oDC5LR,SAASiX,KAAW,IAAD,EACKlB,cAArB1P,EADgB,EAChBA,UAAWI,EADK,EACLA,OADK,GAERhG,cACGyW,cAAZC,SACiBlQ,mBAAS,KAJT,mBAIjByM,EAJiB,KAIXC,EAJW,OAKI1M,mBAAS,CACnC2M,QAAQ,EACRzC,MAAM,IAPgB,mBAKjBC,EALiB,KAKTC,EALS,OAScpK,mBAAS,IATvB,mBASjB8D,EATiB,KASJuL,EATI,OAUQrP,mBAAS,IAVjB,mBAUjBiE,EAViB,KAUPkM,EAVO,OAWEnQ,oBAAS,GAXX,gCAYEA,mBAAS,OAZX,mBAYjBgK,EAZiB,KAYVC,EAZU,OAaEjK,oBAAS,GAbX,mBAajBI,EAbiB,aAccJ,mBAAS,KAdvB,mBAcjBD,EAdiB,KAcJ8J,EAdI,OAesB7J,mBAAS,IAf/B,mBAejB8J,EAfiB,KAeAC,EAfA,KAgBlBM,EAAS,WACbhL,GAAeD,GACdJ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJwR,EAAetR,EAAKf,QAAQ8G,aADxB,2CADN,uDAICzC,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,wCAAyCA,MAEzDmC,GAAYC,GACXR,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJsS,EAAYpS,EAAKf,QAAQiH,UADrB,2CADN,uDAIC5C,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,qCAAsCA,MZoIxC,SAAC8B,EAAIZ,GACnB,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,WACbZ,QAAS,CACPa,QAAS,SACTR,UACAa,QAAQ,CACNK,OAAQN,OAKlB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,IYnJNyS,CAAU5Q,EAAQ,CAAC,WAAY,aAAc,aAAc,iBACxDR,KADH,uCACQ,WAAOjB,GAAP,SAAAF,EAAA,sDACJlE,QAAQC,IAAImE,EAAKE,SACjByO,EAAQ3O,EAAKE,SAFT,2CADR,uDAKGoD,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,kCAAmCA,MAEnDwC,GAAe,UAChBZ,KADC,uCACI,WAAOjB,GAAP,SAAAF,EAAA,sDACJkM,EAAmBhM,EAAKf,SACxB6M,EAAenB,OAAOgC,QAAQ3M,EAAKf,SAAS4G,KAAI,SAAC7K,GAAD,MAAS,CACvDgC,GAAIhC,EAAK,GACTwK,KAAMxK,EAAK,GAAGwK,UAJZ,2CADJ,uDAQDlC,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,uCAAwCA,OAG1DuD,qBAAU,WACR0J,MACC,CAACjK,IAEJ,IAAM1E,EAAc,SAACiP,GACnB,IAAIC,EAAUT,EAAOQ,GACrBP,GAAU,SAACxI,GAAD,mBAAC,eACNA,GADK,kBAEP+I,GAASC,QAIR4C,EAAG,uCAAG,WAAO7N,GAAP,SAAA9B,EAAA,sDACV6B,GAAUC,GACTX,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJwM,IACA3O,EAAY,UACZgB,EAAaf,QAAQ,kBAHjB,2CADN,uDAMC0F,OAAM,SAACjE,GACNzD,QAAQyD,MAAM,qCAAsCA,MAR5C,2CAAH,sDAnEe,GAgFAwJ,IAAM5G,SAAS,GAhFf,qBAgFjBgH,GAhFiB,MAgFXyG,GAhFW,SAiFc7G,IAAM5G,SAAS,GAjF7B,qBAiFjBiH,GAjFiB,MAiFJyG,GAjFI,MAmFlBC,GAAY1G,GAAcO,KAAKoG,IAAI3G,GAAawF,EAAKjG,OAASQ,GAAOC,IAW3E,OACE,gCACE,cAACzL,EAAD,CACEI,KAAMuO,EAAOwC,OACbhR,QAAS,WACP6R,EAAIxD,IAENtO,YAAa,WACXA,EAAY,WAEdpB,MAAM,mBACNuB,KAAK,wBAEP,cAACiE,GAAD,CACEC,YAAeA,EACfnE,KAAMuO,EAAOD,KACbvK,SAAYqK,EACZxK,OAAUA,EACV7D,QAAS,WACL0O,IACA3O,EAAY,SAEhBA,YAAa,WACXA,EAAY,WAIhB,sBAAK5B,UAAU,UAAf,UACA,eAAC+T,GAAA,EAAD,WACE,cAACA,GAAA,EAAW1S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACwS,GAAA,EAAW1S,KAAZ,CAAiBE,KAAK,WAAtB,sBACA,cAACwS,GAAA,EAAW1S,KAAZ,CAAiBE,KAAM,YAAY+D,EAAU,QAA7C,mBACA,cAACyO,GAAA,EAAW1S,KAAZ,CAAiB2S,QAAM,EAAvB,wBAEF,sBAAKhU,UAAU,4BAAf,UACA,qBAAII,MAAO,CAAC6Q,MAAM,WAAlB,UAA+BjH,EAA/B,MAA+CG,KAC/C,qBAAK/J,MAAO,CAAC,YAAY,OACvB,cAACmI,EAAA,EAAD,CAAM0L,QAAM,EAACjU,UAAU,YAAYyI,SAAU,SAACf,GAAKA,EAAEgB,kBAArD,SACE,cAACO,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC5G,EAAA,EAAD,CACExC,UAAU,kBACVf,KAAK,SACLsB,QAAS,WACP4P,EAAS,MACTvO,EAAY,SALhB,+BAeR,qBAAK5B,UAAU,UAAf,SACE,cAACqR,GAAA,EAAD,CAAgBD,UAAWE,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO9D,aAAW,eAAlB,UACE,cAAC+D,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAwB,qCACxB,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,uCAC1B,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,uCAC1B,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,yCAC1B,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAAyB,+CAG7B,eAACC,GAAA,EAAD,YACIzE,GAAc,EAChBwF,EAAKuB,MAAMhH,GAAOC,GAAaD,GAAOC,GAAcA,IACpDwF,GAAM7I,KAAI,SAAC+H,EAAK9F,GAAN,OACR,eAAC0F,GAAA,EAAD,WACA,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBE,EAAIhM,WAC3B,cAAC6L,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BE,EAAI/K,aAC/B,cAAC4K,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2B3B,EAAgB6B,EAAI9K,YAAY0C,OAC3D,cAACiI,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA8C,WAAnBE,EAAInB,aAC/B,cAAC6F,GAAA,EAAD,CAAS/V,MAAM,SAAf,SACA,cAAC,KAAD,CAAuBJ,MAAO,CAAE6Q,MAAO,eAGvC,cAACsF,GAAA,EAAD,CAAS/V,MAAM,UAAf,SACA,cAAC,KAAD,CAA2CJ,MAAO,CAAE6Q,MAAO,iBAG3D,eAACS,GAAA,EAAD,CAAWC,MAAM,QAAQvR,MAAO,CAAC0R,QAAQ,GAAzC,UACA,cAACyE,GAAA,EAAD,CAAS/V,MAAM,OAAf,SACE,cAAC+M,GAAA,EAAD,CAAYhN,QAAS,WACjB4P,EAAS0B,EAAIhM,UACbjE,EAAY,SAFhB,SAIE,cAAC,KAAD,CACEwN,KAAM,GACN6B,MAAM,aAIZ,cAACsF,GAAA,EAAD,CAAS/V,MAAM,SAAf,SACE,cAAC+M,GAAA,EAAD,CAAYhN,QAAS,WACjB4P,EAAS0B,EAAIhM,UACbjE,EAAY,WAFhB,SAIE,cAAC,KAAD,CAAOqP,MAAM,MAAM7B,KAAM,cA9BhByC,EAAI1H,aAoCpB0J,GAAY,GACX,cAACpC,GAAA,EAAD,CAAUrR,MAAO,CAAE8Q,OAAQ,GAAK2C,IAAhC,SACE,cAACnC,GAAA,EAAD,CAAW0C,QAAS,SAI1B,cAACC,GAAA,EAAD,UACA,cAAC5C,GAAA,EAAD,UACE,cAAC6C,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,CAAEtI,MAAO,MAAO/M,OAAQ,IACpDkV,QAAS,EACTnH,MAAO0F,EAAKjG,OACZS,YAAaA,GACbD,KAAMA,GACNsH,YAAa,CACXC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEVtH,aAtIW,SAACI,EAAOmH,GAC/BhB,GAAQgB,IAsIIC,oBAnIkB,SAACpH,GAC/BoG,GAAeiB,SAASrH,EAAM/F,OAAOvI,MAAO,KAC5CyU,GAAQ,IAkIImB,iBAAkB9H,mBAWnB,I,oBC1OR,SAASwJ,KAAS,IACflR,EAAa0P,cAAb1P,UACF7F,EAAUC,cACT0W,EAAYD,cAAZC,SAHe,EAIElQ,mBAAS,IAJX,mBAIfyM,EAJe,KAITC,EAJS,OAKY1M,mBAAS,IALrB,mBAKfsE,EALe,KAKJiM,EALI,OAMoBvQ,mBAAS,IAN7B,mBAMfwQ,EANe,KAMAC,EANA,OAOgBzQ,mBAAS,IAPzB,mBAOf8D,EAPe,KAOFuL,EAPE,OAQMrP,mBAAS,CACnC2M,QAAQ,EACRzC,MAAM,IAVc,mBAQfC,EARe,KAQPC,EARO,OAYIpK,oBAAS,GAZb,mBAYf2K,EAZe,KAYR+F,EAZQ,OAaI1Q,mBAAS,IAbb,mBAafgK,EAbe,KAaRC,EAbQ,OAcIjK,oBAAS,GAdb,mBAcfI,EAde,KAehBiK,GAfgB,KAeP,WACbhL,GAAeD,GACdJ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJwR,EAAetR,EAAKf,QAAQ8G,aADxB,2CADN,uDAICzC,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,wCAAyCA,MAEzD6B,GAAQG,EAAW,CAAC,SAAU,WAAY,aACzCJ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJlE,QAAQC,IAAImE,EAAKE,SACjByO,EAAQ3O,EAAKE,SAFT,2CADN,uDAKCoD,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,gCAAiCA,MAEjDwC,GAAe,QACdZ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJ4S,EAAiB1S,EAAKf,SACtBuT,EAAa7H,OAAOgC,QAAQ3M,EAAKf,SAAS4G,KAAI,SAAC7K,GAAD,MAAS,CACrDgC,GAAIhC,EAAK,GACTwK,KAAMxK,EAAK,GAAGwK,UAJZ,2CADN,uDAQClC,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,qCAAsCA,QAGxDuD,qBAAU,WACR0J,MACC,CAACjK,IAEJ,IAAMuQ,EAAe,SAACnR,EAAQyE,Ib+af,SAACzE,GACd,IAAMjB,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,WACbZ,QAAQ,CACJuB,aAIZ,OAAOT,MAAMtB,GAAYc,GACxBS,KAAKrB,Ka3bNiT,CAASpR,GACRR,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJnB,EAAaf,QAAQ,eAAesI,GADhC,2CADN,uDAIC5C,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,gCAAiCA,OAI7C1B,EAAc,SAACiP,GACnB,IAAIC,EAAUT,EAAOQ,GACrBP,GAAU,SAACxI,GAAD,mBAAC,eACNA,GADK,kBAEP+I,GAASC,QAQR4C,EAAG,uCAAG,WAAOhO,GAAP,SAAA3B,EAAA,sDACV4B,GAAQD,GACPR,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJwM,IACA3O,EAAY,UACZgB,EAAaf,QAAQ,gBAHjB,2CADN,uDAMC0F,OAAM,SAACjE,GACNzD,QAAQyD,MAAM,mCAAoCA,MAR1C,2CAAH,sDAzEa,EAsFEwJ,IAAM5G,SAAS,GAtFjB,oBAsFfgH,GAtFe,MAsFTyG,GAtFS,SAuFgB7G,IAAM5G,SAAS,GAvF/B,qBAuFfiH,GAvFe,MAuFFyG,GAvFE,MAyFhBC,GAAY1G,GAAcO,KAAKoG,IAAI3G,GAAawF,EAAKjG,OAASQ,GAAOC,IAW3E,OACE,gCACE,cAACzL,EAAD,CACEI,KAAMuO,EAAOwC,OACbhR,QAAS,WACP6R,EAAIxD,IAENtO,YAAa,WACXA,EAAY,WAEdpB,MAAM,mBACNuB,KAAK,sBAEP,cAACuI,GAAD,CACEE,UAAaA,EACb1I,KAAMuO,EAAOD,KACb1K,OAAUwK,EACV3F,SAAYsG,EACZvL,UAAaA,EACbzD,QAAS,WACL0O,IACA3O,EAAY,SAEhBA,YAAa,WACXA,EAAY,WAIhB,sBAAK5B,UAAU,UAAf,UACA,eAAC+T,GAAA,EAAD,WACE,cAACA,GAAA,EAAW1S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACwS,GAAA,EAAW1S,KAAZ,CAAiBE,KAAK,WAAtB,sBACA,cAACwS,GAAA,EAAW1S,KAAZ,CAAiB2S,QAAM,EAAvB,sBAEF,sBAAKhU,UAAU,4BAAf,UACA,oBAAII,MAAO,CAAC6Q,MAAM,WAAlB,SAA+BjH,IAC/B,qBAAK5J,MAAO,CAAC,YAAY,OACvB,cAACmI,EAAA,EAAD,CAAM0L,QAAM,EAACxL,SAAU,SAACf,GAAKA,EAAEgB,kBAA/B,SACE,cAACO,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC5G,EAAA,EAAD,CACExC,UAAU,kBACVf,KAAK,SACLsB,QAAS,WACLqW,GAAS,GACXhV,EAAY,SALhB,+BAeR,qBAAK5B,UAAU,UAAf,SACE,cAACqR,GAAA,EAAD,CAAgBD,UAAWE,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO9D,aAAW,eAAlB,UACE,cAAC+D,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAwB,qCACxB,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,uCAC1B,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,uCAC1B,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAAyB,+CAG7B,eAACC,GAAA,EAAD,YACIzE,GAAc,EAChBwF,EAAKuB,MAAMhH,GAAOC,GAAaD,GAAOC,GAAcA,IACpDwF,GAAM7I,KAAI,SAAC+H,EAAK9F,GAAN,OACR,eAAC0F,GAAA,EAAD,WACA,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBE,EAAInM,SAC3B,cAACgM,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BE,EAAI1H,WAC/B,cAACuH,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2B+E,EAAc7E,EAAIjH,UAAUnB,OACvD,eAACiI,GAAA,EAAD,CAAWC,MAAM,QAAQvR,MAAO,CAAC0R,QAAQ,GAAzC,UACA,cAACyE,GAAA,EAAD,CAAS/V,MAAM,UAAf,SACE,cAAC+M,GAAA,EAAD,CACAnN,MAAO,CAAC0R,QAAQ,OAChBvR,QAAS,WA7GX,IAACmF,IA8GamM,EAAInM,OA7GhCjG,EAAQM,KAAKqW,EAAU,IAAKpE,OAAOtM,KA0GnB,SAKE,cAAC,KAAD,CACE0J,KAAM,GACN6B,MAAM,kBAIV,cAACsF,GAAA,EAAD,CAAS/V,MAAM,YAAf,SACA,cAAC+M,GAAA,EAAD,CACAnN,MAAO,CAAC0R,QAAQ,OACfvR,QAAS,WACNsW,EAAahF,EAAInM,OAAQmM,EAAI1H,WAHjC,SAKE,cAAC,KAAD,CACEiF,KAAM,GACN6B,MAAM,gBAIZ,cAACsF,GAAA,EAAD,CAAS/V,MAAM,OAAf,SACE,cAAC+M,GAAA,EAAD,CACAnN,MAAO,CAAC0R,QAAQ,OACfvR,QAAS,WACN4P,EAAS0B,EAAInM,QACbkR,GAAS,GACThV,EAAY,SALhB,SAOE,cAAC,KAAD,CACEwN,KAAM,GACN6B,MAAM,aAIZ,cAACsF,GAAA,EAAD,CAAS/V,MAAM,SAAf,SACE,cAAC+M,GAAA,EAAD,CACAnN,MAAO,CAAC0R,QAAQ,OACfvR,QAAS,WACN4P,EAAS0B,EAAInM,QACb9D,EAAY,WAJhB,SAME,cAAC,KAAD,CAAOqP,MAAM,MAAM7B,KAAM,cAlDhByC,EAAI1H,aAwDpB0J,GAAY,GACX,cAACpC,GAAA,EAAD,CAAUrR,MAAO,CAAE8Q,OAAQ,GAAK2C,IAAhC,SACE,cAACnC,GAAA,EAAD,CAAW0C,QAAS,SAI1B,cAACC,GAAA,EAAD,UACA,cAAC5C,GAAA,EAAD,UACE,cAAC6C,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,CAAEtI,MAAO,MAAO/M,OAAQ,IACpDkV,QAAS,EACTnH,MAAO0F,EAAKjG,OACZS,YAAaA,GACbD,KAAMA,GACNsH,YAAa,CACXC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEVtH,aAzJW,SAACI,EAAOmH,GAC/BhB,GAAQgB,IAyJIC,oBAtJkB,SAACpH,GAC/BoG,GAAeiB,SAASrH,EAAM/F,OAAOvI,MAAO,KAC5CyU,GAAQ,IAqJImB,iBAAkB9H,mBAWnB,I,oDC/PR,SAAS+J,GAAUpV,GAAQ,IAC3B2D,EAAa0P,cAAb1P,UAD0B,EAEPY,mBAAS,IAFF,mBAExByM,EAFwB,KAElBC,EAFkB,OAGL1M,mBAAS,MAHJ,mBAGxBgK,EAHwB,KAGjBC,EAHiB,OAIOjK,mBAAS,IAJhB,mBAIxB8D,EAJwB,KAIXuL,EAJW,OAKLrP,mBAAS,CACjC8Q,QAAS,GACTC,SAAU,GACVC,QAAS,KARoB,mBAKxBnY,EALwB,KAKjBsH,EALiB,OAULH,oBAAS,GAVJ,mBAUxBI,EAVwB,UA6B/BO,qBAAU,WAjBRtB,GAAeD,GACdJ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJwR,EAAetR,EAAKf,QAAQ8G,aADxB,2CADN,uDAICzC,OAAM,SAACjE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,wCAAyCA,MAmDzDsP,EAtCU,CACN,CACI3R,GAAI,EACJ+V,QAAS,YACTC,SAAU,WACVC,QAAS,aAEb,CACIjW,GAAI,EACJ+V,QAAS,YACTC,SAAU,WACVC,QAAS,aAEb,CACIjW,GAAI,EACJ+V,QAAS,YACTC,SAAU,WACVC,QAAS,aAEb,CACIjW,GAAI,EACJ+V,QAAS,YACTC,SAAU,WACVC,QAAS,aAEb,CACIjW,GAAI,EACJ+V,QAAS,YACTC,SAAU,WACVC,QAAS,aAEb,CACIjW,GAAI,EACJ+V,QAAS,YACTC,SAAU,WACVC,QAAS,iBAIhB,CAAC5Q,IAEJ,IAAMkB,EAAe,SAACE,GAAO,IAAD,EACJA,EAAED,OAAhBxG,EADkB,EAClBA,GAAI/B,EADc,EACdA,MACZmH,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN7G,EAAK/B,QA5EqB,EA8FP4N,IAAM5G,SAAS,GA9FR,mBA8FxBgH,EA9FwB,KA8FlByG,EA9FkB,OA+FO7G,IAAM5G,SAAS,GA/FtB,mBA+FxBiH,EA/FwB,KA+FXyG,EA/FW,KAiGzBC,EAAY1G,EAAcO,KAAKoG,IAAI3G,EAAawF,EAAKjG,OAASQ,EAAOC,GAY3E,OACE,gCACE,sBAAKnN,UAAU,UAAf,UACA,eAAC+T,GAAA,EAAD,WACE,cAACA,GAAA,EAAW1S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACwS,GAAA,EAAW1S,KAAZ,CAAiBE,KAAK,WAAtB,sBACA,cAACwS,GAAA,EAAW1S,KAAZ,CAAiB2S,QAAM,EAAvB,kCAEF,cAACD,GAAA,EAAD,UACA,oBAAI3T,MAAO,CAAC6Q,MAAM,WAAlB,SAA+BjH,SAG/B,qBAAKhK,UAAU,UAAf,SACE,cAACqR,GAAA,EAAD,CAAgBD,UAAWE,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO9D,aAAW,eAAlB,UACE,cAAC+D,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,SAAjB,qBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,2BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,0BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,0BAGJ,eAACC,GAAA,EAAD,YACIzE,EAAc,EAChBwF,EAAKuB,MAAMhH,EAAOC,EAAaD,EAAOC,EAAcA,GACpDwF,GAAM7I,KAAI,SAAC+H,GAAD,OACR,eAACJ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWN,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAA5C,SACGE,EAAImF,UAEP,cAACtF,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACGzB,IAAU2B,EAAI5Q,GACf,cAACkW,GAAA,EAAD,CACIlW,GAAG,WACHgL,MAAM,WACN/M,MAASH,EAAMkY,SACfvN,SAAYlC,IACfqK,EAAIoF,WAGP,cAACvF,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACGzB,IAAU2B,EAAI5Q,GACf,cAACkW,GAAA,EAAD,CACIlW,GAAG,UACHgL,MAAM,WACN/M,MAASH,EAAMmY,QACfxN,SAAYlC,IACfqK,EAAIqF,UAGP,cAACxF,GAAA,EAAD,CAAWC,MAAM,QAASvR,MAAO,CAAC0R,QAAQ,GAA1C,SACa,OAAV5B,EACI,cAAC3C,GAAA,EAAD,CAAYhN,QAAS,kBA7E/B,SAAC6W,GAAS,IACdnW,EAAkCmW,EAAlCnW,GAAI+V,EAA8BI,EAA9BJ,QAASC,EAAqBG,EAArBH,SAAUC,EAAWE,EAAXF,QAC9B7Q,EAAS,CACL2Q,UACAC,WACAC,YACJ/G,EAASlP,GAuEuCmP,CAAKyB,IAAhC,SACG,cAAC,KAAD,CACAzC,KAAM,GACN6B,MAAM,gBAIVf,IAAU2B,EAAI5Q,GACd,gCACI,cAACsM,GAAA,EAAD,CAAYhN,QAAS,aAArB,SACI,cAAC,KAAD,CACA6O,KAAM,GACN6B,MAAM,cAGV,cAAC1D,GAAA,EAAD,CAAYhN,QAAS,kBAAM4P,EAAS,OAApC,SACI,cAAC,KAAD,CACAf,KAAM,GACN6B,MAAM,eAKb,cAAC1D,GAAA,EAAD,CAAYtD,UAAY,EAAxB,SACG,cAAC,KAAD,CACAmF,KAAM,WAnDHyC,EAAI5Q,OA0DpB4S,EAAY,GACX,cAACpC,GAAA,EAAD,CAAUrR,MAAO,CAAE8Q,OAAQ,GAAK2C,GAAhC,SACE,cAACnC,GAAA,EAAD,CAAW0C,QAAS,SAI1B,cAACC,GAAA,EAAD,UACA,cAAC5C,GAAA,EAAD,UACE,cAAC6C,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,CAAEtI,MAAO,MAAO/M,OAAQ,IACpDkV,QAAS,EACTnH,MAAO0F,EAAKjG,OACZS,YAAaA,EACbD,KAAMA,EACNsH,YAAa,CACXC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEVtH,aAjHW,SAACI,EAAOmH,GAC/BxE,EAAS,MACTwD,EAAQgB,IAgHIC,oBA7GkB,SAACpH,GAC/BoG,EAAeiB,SAASrH,EAAM/F,OAAOvI,MAAO,KAC5CyU,EAAQ,IA4GImB,iBAAkB9H,mBAWnB,I,UC1NR,SAASqK,GAAY1V,GAC1B,IAAIlC,EAAUC,cADmB,EAEb4X,cAAd1X,EAF2B,EAE3BA,KAAM2X,EAFqB,EAErBA,IAERrK,EADaiJ,cAAZC,SACeoB,MAAM,KAAK,GACzB7X,EAAS,SAACC,GACdH,EAAQM,KAAKwX,EAAI3X,IAEnB,OACE,qBAAKI,UAAU,WAAWI,MAAO,CAACqX,WAAW,eAA7C,SACE,cAACC,GAAA,EAAIC,UAAL,CAAe1W,GAAG,oBAAlB,SACE,eAACgI,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKuO,GAAG,OAAR,SACE,eAAC1W,EAAA,EAAD,CAAKP,QAAQ,QAAQX,UAAU,cAA/B,UACE,cAACkB,EAAA,EAAIG,KAAL,UACE,cAACH,EAAA,EAAIC,KAAL,CAAUZ,QAAS,WAAKZ,EAAO,UAAWqU,OAAiB,SAAP9G,EAApD,0BAEF,cAAChM,EAAA,EAAIG,KAAL,UACE,cAACH,EAAA,EAAIC,KAAL,CAAUZ,QAAS,WAAKZ,EAAO,cAAeqU,OAAiB,aAAP9G,EAAxD,wBAEF,cAAChM,EAAA,EAAIG,KAAL,UACE,cAACH,EAAA,EAAIC,KAAL,CAAUZ,QAAS,WAAKZ,EAAO,UAAWqU,OAAiB,SAAP9G,EAApD,qBAEF,cAAChM,EAAA,EAAIG,KAAL,UACE,cAACH,EAAA,EAAIC,KAAL,CAAUZ,QAAS,WAAKZ,EAAO,eAAgBqU,OAAiB,cAAP9G,EAAzD,+BAIN,cAAC7D,EAAA,EAAD,CAAKD,GAAI,EAAT,SACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyO,OAAK,EAACjY,KAAI,UAAKA,EAAL,SAAjB,SACE,cAACmV,GAAD,MAEF,cAAC,IAAD,CAAO8C,OAAK,EAACjY,KAAI,UAAKA,EAAL,aAAjB,SACE,cAAC0V,GAAD,MAEF,cAAC,IAAD,CAAOuC,OAAK,EAACjY,KAAI,UAAKA,EAAL,iBAAjB,SACE,cAACsW,GAAD,MAEF,cAAC,IAAD,CAAO2B,OAAK,EAACjY,KAAI,UAAKA,EAAL,SAAjB,SACE,cAAC4W,GAAD,MAEF,cAAC,IAAD,CAAOqB,OAAK,EAACjY,KAAI,UAAKA,EAAL,cAAjB,SACE,cAACmX,GAAD,MAEF,cAAC,IAAD,CAAOnX,KAAMA,EAAb,SACE,cAAC,IAAD,CAAUkY,GAAE,UAAKP,EAAL,yBCtDnB,SAASQ,GAAT,GAA+B,EAATvF,MAAU,IAAD,EACEtM,mBAAS,IADX,mBAC7BuM,EAD6B,KAChBC,EADgB,OAEFxM,oBAAS,GAFP,mBAE7BC,EAF6B,KAElBC,EAFkB,OAGVF,mBAAS,IAHC,mBAG7BgK,EAH6B,KAGtBC,EAHsB,OAIZjK,mBAAS,IAJG,mBAI7ByM,EAJ6B,KAIvBC,EAJuB,OAKR1M,mBAAS,CACnC2M,QAAQ,EACRC,KAAK,EACL1C,MAAM,IAR4B,mBAK7BC,EAL6B,KAKrBC,EALqB,OAUVpK,mBAAS,CACjCZ,UAAW0S,IACXC,YAAa,KAZqB,mBAU7BlZ,EAV6B,KAUtBsH,EAVsB,OAcJH,mBAAS,CACvCZ,UAAW0S,IACXC,YAAa,KAhBqB,mBAc7BhF,EAd6B,KAcnBC,EAdmB,OA4BdhN,mBAAS,CAC7BZ,UAAW0S,IACXE,WAAY,GACZD,YAAa,KA/BqB,mBA4B7B3J,EA5B6B,KA4BxB6J,EA5BwB,OAiCVjS,oBAAS,GAjCC,mBAiC7BI,EAjC6B,aAkCJJ,mBAAS,KAlCL,mBAkC7BK,EAlC6B,KAkCnBC,EAlCmB,QAmCIN,mBAAS,IAnCb,qBAmC7BkS,GAnC6B,MAmCfC,GAnCe,MAoC9B9H,GAAS,YhBEO,SAAC/L,EAASa,GAC9B,IAAMZ,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,WACbZ,QAAS,CACPa,QAAS,eACTR,UACAa,cAIR,OAAOJ,MAAMtB,GAAYc,GACxBS,KAAKrB,KgBhBNyU,CAAgB,CAAC,YAAa,aAAc,gBACzCpT,KADH,uCACQ,WAAOjB,GAAP,SAAAF,EAAA,sDACJlE,QAAQC,IAAImE,EAAKE,SACjBuO,EAAezO,EAAKE,SAFhB,2CADR,uDAKGoD,OAAM,SAACjE,GACNzD,QAAQyD,MAAM,sBAAuBA,OAGrC+K,GAAI,uCAAG,WAAOC,GAAP,eAAAvK,EAAA,6DACPwK,EAAO,GACXD,EAAIE,QAAJ,uCAAY,WAAOC,GAAP,SAAA1K,EAAA,sDACVwK,EAAKE,EAAQnJ,WAAamJ,EAAQzE,YADxB,2CAAZ,uDAFW,SAKEuE,EALF,mFAAH,sDAOV1H,qBAAU,WACRtC,GAAY,CAAC,YAAa,gBACzBW,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJyC,EAAYvC,EAAKE,SACjBkK,GAAKpK,EAAKE,SAASe,KAAnB,uCAAwB,WAAM4J,GAAN,SAAA/K,EAAA,kEACtBsU,GADsB,SACAvJ,EADA,6EAAxB,uDAFI,2CADN,uDAOCvH,OAAM,SAACjE,GACNzD,QAAQyD,MAAM,sBAAuBA,QAEtC,CAACgD,IAEJO,qBAAU,WACR0J,OACA6H,IAEFvR,qBAAU,WACR7D,OACC,CAACyP,EAAaQ,IAEjB,IAAMzL,GAAe,SAACE,GAAO,IAAD,EACNA,EAAED,OAAhBxG,EADoB,EACpBA,GAAI/B,EADgB,EAChBA,MACF,cAAL+B,IAAiB/B,EAAQ2V,SAAS3V,IACrCmH,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN7G,EAAK/B,QAIJqZ,GAAkB,SAAC7Q,GAAM,IAAD,EACRA,EAAED,OAAhBxG,EADsB,EACtBA,GAAI/B,EADkB,EAClBA,MACF,cAAL+B,IAAiB/B,EAAQ2V,SAAS3V,IACrCiZ,GAAO,SAACrQ,GAAD,mBAAC,eACHA,GADE,kBAEJ7G,EAAK/B,QAIJ0C,GAAc,SAACiP,GACnB,IAAIC,EAAUT,EAAOQ,GACrBP,GAAU,SAACxI,GAAD,mBAAC,eACNA,GADK,kBAEP+I,GAASC,QAeR9N,GAAS,SAAC0E,GAAO,IACfpC,EAA2B2N,EAA3B3N,UAAW2S,EAAgBhF,EAAhBgF,YAEjBrF,EADcH,EAEJzP,QACN,SAAC6O,GAAD,OACG2G,OAAOC,MAAMnT,IAAcuM,EAAG,YAAkBvM,IACjD0M,OAAOH,EAAG,aAAiBuB,cAAc/H,QAAQ4M,EAAY7E,gBAAkB,OA+CjFM,GAAM,SAACzS,IhB3ES,SAACiX,GACrB,IAAMzT,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,qBACbZ,QAAS,CACL+T,iBAIZ,OAAOjT,MAAMtB,GAAYc,GACxBS,KAAKrB,KgB+DN6U,CAAgBzX,GACfiE,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJwM,KACA3O,GAAY,UAFR,2CADN,uDAKC2F,OAAM,SAACjE,GACNzD,QAAQyD,MAAM,sBAAuBA,OA5KL,GAiLZwJ,IAAM5G,SAAS,GAjLH,qBAiL7BgH,GAjL6B,MAiLvByG,GAjLuB,SAkLE7G,IAAM5G,SAAS,GAlLjB,qBAkL7BiH,GAlL6B,MAkLhByG,GAlLgB,MAoL9BC,GAAY1G,GAAcO,KAAKoG,IAAI3G,GAAawF,EAAKjG,OAASQ,GAAOC,IAW3E,OACE,gCACE,cAACzL,EAAD,CACEI,KAAMuO,EAAOwC,OACbhR,QAAS,WACP6R,GAAIxD,IAENtO,YAAa,WACXA,GAAY,WAEdpB,MAAM,mBACNuB,KAAK,uBAEP,eAACC,EAAA,EAAD,CAAOC,KAAMoO,EAAOyC,IAAK5Q,OAAQ,kBAAIN,GAAY,QACjD6N,UAAQ,EADR,UAEA,cAACzN,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,uCAEF,cAACL,EAAA,EAAMM,KAAP,UACE,eAACiG,EAAA,EAAD,CAAMC,YAAU,EAACrC,UAAWA,EAAWsC,SAvF9B,SAACf,GACdA,EAAEgB,iBACF,IAAMC,EAAOjB,EAAEkB,eACc,IAAzBD,EAAKE,kBACPnB,EAAEgB,iBACFhB,EAAEoB,mBAEJ1C,GAAa,GACbvG,QAAQC,IAAI6I,EAAKE,iBACbF,EAAKE,iBhBxDW,SAAC9J,GACrB,IAAM0F,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,qBACbZ,QAASpF,KAGf,OAAOkG,MAAMtB,GAAYc,GACxBS,KAAKrB,IgB8CJ8U,CAAgBrK,GACfpJ,KADD,+BAAAnB,EAAA,MACM,WAAOE,GAAP,SAAAF,EAAA,sDACJwM,KACA3O,GAAY,OAFR,2CADN,uDAKC2F,OAAM,SAACjE,GACNzD,QAAQyD,MAAM,sBAAuBA,OAuErC,UACA,eAACiF,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,0BAGA,eAACC,EAAA,EAAD,CAAKD,GAAI,EAAT,UACI,eAACb,EAAA,EAAKe,QAAN,CACEO,QAAM,EACNN,UAAQ,EACRP,GAAK,SACL/H,GAAG,YACHuI,YAAY,OACZE,SAAU6O,GACVrZ,MAAOoP,EAAIhJ,UAPb,UASI,wBAAQpG,MAAO,KAAf,kCACCqH,EAASuD,KAAI,SAACC,GAAD,OACV,wBAAQ7K,MAAO6K,EAAQzE,UAAvB,SAAmCyE,EAAQC,oBAGnD,cAACzB,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,qDAKF,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,6BAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,QACZvI,GAAG,aACHwI,KAAK,aACLvK,MAAOoP,EAAI4J,WACXxO,SAAU6O,KAEV,cAAChQ,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,8CAKJ,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,0BAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,eACZvI,GAAG,cACHwI,KAAK,cACLvK,MAAOoP,EAAI2J,YACXvO,SAAU6O,KAEV,cAAChQ,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,qDAKJ,eAAC+C,EAAA,EAAMO,OAAP,WACI,cAACC,EAAA,EAAD,CAAQ7B,QAAQ,YAAYJ,QAAS,kBAAIqB,GAAY,QAArD,oBAGA,cAACY,EAAA,EAAD,CAAQ7B,QAAQ,UAAU1B,KAAK,SAA/B,gCAOZ,eAAC+C,EAAA,EAAD,CAAOC,KAAMoO,EAAOD,KAAMlO,OAAQ,kBAAIN,GAAY,SAChD6N,UAAQ,EADV,UAEE,cAACzN,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,wCAEF,cAACL,EAAA,EAAMM,KAAP,UACE,eAACiG,EAAA,EAAD,CAAMC,YAAU,EAACrC,UAAWA,EAAWsC,SApJhC,SAACf,GACZA,EAAEgB,iBACF,IAAMC,EAAOjB,EAAEkB,eACc,IAAzBD,EAAKE,kBACPnB,EAAEgB,iBACFhB,EAAEoB,mBAEJ1C,GAAa,GACbvG,QAAQC,IAAI6I,EAAKE,iBACbF,EAAKE,iBhB/Cc,SAAC9J,GACxB,IAAM0F,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,qBACbZ,QAAS,CACT+T,WAAYnZ,EAAMmZ,WAClBjQ,aAAclJ,MAItB,OAAOkG,MAAMtB,GAAYc,GACxBS,KAAKrB,IgBkCF+U,CAAmBtK,GAClBpJ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJwM,KACA3O,GAAY,QAFR,2CADN,uDAKC2F,OAAM,SAACjE,GACNzD,QAAQyD,MAAM,sBAAuBA,OAoIvC,UACI,eAACiF,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,6BAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,QACZvI,GAAG,aACHwI,KAAK,aACLvK,MAAOoP,EAAI4J,WACXxO,SAAU6O,KAEV,cAAChQ,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,8CAKJ,eAACsJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,0BAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,eACZvI,GAAG,cACHwI,KAAK,cACLvK,MAAOoP,EAAI2J,YACXvO,SAAU6O,KAEV,cAAChQ,EAAA,EAAKe,QAAQK,SAAd,CAAuB1K,KAAK,UAA5B,qDAKJ,eAAC+C,EAAA,EAAMO,OAAP,WACI,cAACC,EAAA,EAAD,CAAQ7B,QAAQ,YAAYJ,QAAS,kBAAIqB,GAAY,SAArD,oBAGA,cAACY,EAAA,EAAD,CAAQ7B,QAAQ,UAAU1B,KAAK,SAA/B,gCAOV,sBAAKe,UAAU,UAAf,UACA,eAAC+T,GAAA,EAAD,WACE,cAACA,GAAA,EAAW1S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACwS,GAAA,EAAW1S,KAAZ,CAAiB2S,QAAM,EAAvB,4BAEA,cAACzL,EAAA,EAAD,CAAM0L,QAAM,EAACjU,UAAU,YAAYyI,SAAU,SAACf,GAAKA,EAAEgB,kBAArD,SACE,eAACO,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,eAACb,EAAA,EAAKe,QAAN,CACEO,QAAM,EACNb,GAAK,SACL/H,GAAG,YACHuI,YAAY,OACZE,SAAUlC,GACVtI,MAAOH,EAAMuG,UANf,UAQI,wBAAQpG,MAAO,KAAf,0BACCqH,EAASuD,KAAI,SAACC,GAAD,OACV,wBAAQ7K,MAAO6K,EAAQzE,UAAvB,SAAmCyE,EAAQC,sBAIrD,cAACX,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAACb,EAAA,EAAKe,QAAN,CACErI,GAAG,cACHuI,YAAY,eACZE,SAAUlC,GACVtI,MAAOH,EAAMkZ,gBAGjB,cAAC5O,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC5G,EAAA,EAAD,CAAQvD,KAAK,SAASsB,QAAS,WAAK2S,EAAYnU,IAAhD,sBAIF,cAACsK,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC5G,EAAA,EAAD,CAAQvD,KAAK,SAAS0B,QAAQ,YAAYJ,QA1WxC,WACZ8F,EAAS,CACPf,UAAW0S,IACXC,YAAa,KAEf/E,EAAY,CACV5N,UAAW0S,IACXC,YAAa,MAmWL,sBAIF,cAAC5O,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC5G,EAAA,EAAD,CACExC,UAAU,kBACVf,KAAK,SACLsB,QAAS,WACT4X,EAAO,CACH7S,UAAW,GACX4S,WAAY,GACZD,YAAa,KAEf7R,GAAa,GACbxE,GAAY,QAVhB,6BAmBR,qBAAK5B,UAAU,UAAf,SACE,cAACqR,GAAA,EAAD,CAAgBD,UAAWE,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO9D,aAAW,eAAlB,UACE,cAAC+D,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,SAAjB,qBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,4BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,0BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,0BAGJ,eAACC,GAAA,EAAD,YACIzE,GAAc,EAChBwF,EAAKuB,MAAMhH,GAAOC,GAAaD,GAAOC,GAAcA,IACpDwF,GAAM7I,KAAI,SAAC+H,GAAD,OACR,eAACJ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWN,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAA5C,SACGyG,GAAavG,EAAIvM,aAEpB,cAACoM,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACE,qBAAK3R,UAAU,aAAf,SACE,qBAAKA,UAAU,aAAf,SACE,4BAAI6R,EAAIqG,mBAId,cAACxG,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACE,qBAAK3R,UAAU,aAAf,SACE,qBAAKA,UAAU,aAAf,SACE,4BAAI6R,EAAIoG,oBAId,eAACvG,GAAA,EAAD,CAAWC,MAAM,QAAQvR,MAAO,CAAC0R,QAAQ,GAAzC,UACE,cAACvE,GAAA,EAAD,CAAYhN,QAAS,YAlVjB,SAAC6H,GAAY,IAC5B9C,EAAsC8C,EAAtC9C,UAAW4S,EAA2B9P,EAA3B8P,WAAYD,EAAe7P,EAAf6P,YAC5B7R,GAAa,GACb+R,EAAO,CACH7S,YACA4S,aACAD,gBAEJrW,GAAY,QA0UgCiX,CAAchH,IAA1C,SACE,cAAC,KAAD,CACEzC,KAAM,GACN6B,MAAM,gBAGV,cAAC1D,GAAA,EAAD,CAAYhN,QAAS,WACjB4P,EAAS0B,EAAIqG,YACbtW,GAAY,WAFhB,SAIE,cAAC,KAAD,CAAOqP,MAAM,MAAM7B,KAAM,YA7BhByC,EAAIqG,eAkCpBrE,GAAY,GACX,cAACpC,GAAA,EAAD,CAAUrR,MAAO,CAAE8Q,OAAQ,GAAK2C,IAAhC,SACE,cAACnC,GAAA,EAAD,CAAW0C,QAAS,SAI1B,cAACC,GAAA,EAAD,UACA,cAAC5C,GAAA,EAAD,UACE,cAAC6C,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,CAAEtI,MAAO,MAAO/M,OAAQ,IACpDkV,QAAS,EACTnH,MAAO0F,EAAKjG,OACZS,YAAaA,GACbD,KAAMA,GACNsH,YAAa,CACXC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEVtH,aAjSW,SAACI,EAAOmH,GAC/BhB,GAAQgB,IAiSIC,oBA9RkB,SAACpH,GAC/BoG,GAAeiB,SAASrH,EAAM/F,OAAOvI,MAAO,KAC5CyU,GAAQ,IA6RImB,iBAAkB9H,mBAWnB,IC/eA,OAA0B,sCCA1B,OAA0B,qC,qBCSlC,SAAS8L,GAAT,GAA4B,EAATtG,MAAU,IAAD,MACKtM,mBAAS,IADd,mBAC1BuM,EAD0B,KACbC,EADa,OAECxM,oBAAS,GAFV,gCAGTA,mBAAS,KAHA,mBAG1ByM,EAH0B,KAGpBC,EAHoB,OAID1M,mBAAS,MAJR,mBAI1B6S,EAJ0B,KAIhBC,EAJgB,KAa3BC,EAAmB,CACvBjP,YAAa,eACbkP,YAAa,eACbC,SAAU,YACVhP,SAAU,YACVS,SAAU,YACVwO,cAAe,iBACfC,eAAgB,eAChBC,cAAe,iBACfC,cAAe,iBACfC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,WAAY,eAERC,EAAS,CACb,cACA,cACA,WACA,WACA,WACA,gBACA,gBACA,gBACA,iBACA,SACA,SACA,SACA,cAEIC,EAAc,CAClB7P,YAAa,QACbkP,YAAa,QACbC,SAAU,QACVhP,SAAU,QACVS,SAAU,QACVwO,cAAe,QACfC,eAAgB,QAChBC,cAAe,QACfC,cAAe,QACfC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,WAAY,QAERG,EACI,OADJA,EAEI,OAFJA,EAGI,OAHJA,EAIQ,OAJRA,EAKM,OA/DqB,EAiEP5T,mBAAS,CACjC6T,SAAU,cACVzL,IAAK,GACL0L,UAAW,KACXC,QAAS,OArEsB,mBAiE1Blb,EAjE0B,KAiEnBsH,EAjEmB,OAuEDH,mBAAS,CACvC6T,SAAU,cACVzL,IAAK,GACL0L,UAAW,KACXC,QAAS,OA3EsB,mBAuE1BhH,EAvE0B,KAuEhBC,EAvEgB,OA6EPhN,oBAAS,GA7EF,mBA6E1BI,EA7E0B,aA8EDJ,mBAAS,KA9ER,mBA+E3BqK,GA/E2B,UA+ElB,YnBzDO,SAAC/L,EAASa,GAC9B,IAAMZ,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,WACbZ,QAAS,CACPa,QAAS,cACTR,UACAa,cAIR,OAAOJ,MAAMtB,GAAYc,GACxBS,KAAKrB,KmB2CNqW,CAAgBN,EAAOtO,OAAO,SAAU,IACrCpG,KADH,uCACQ,WAAOjB,GAAP,SAAAF,EAAA,sDACJlE,QAAQC,IAAImE,EAAKE,QAAQ+P,MAAM,EAAE,IACjCxB,EAAezO,EAAKE,SAFhB,2CADR,uDAKGoD,OAAM,SAACjE,GACNzD,QAAQyD,MAAM,sBAAuBA,QAG3CuD,qBAAU,WACR0J,MACC,CAACjK,IAEJO,qBAAU,WACR7D,MACC,CAACyP,EAAaQ,IAEjB,IAAMzL,EAAe,SAACE,GAAO,IAAD,EACJA,EAAED,OAAhBxG,EADkB,EAClBA,GAAI/B,EADc,EACdA,MAEVmH,EADM,aAALpF,EACQ,SAAC6G,GAAD,MAAgB,CACvBiS,SAAU7a,EACVoP,IAAK,KAGE,SAACxG,GAAD,mBAAC,eACLA,GADI,kBAEN7G,EAAK/B,OAKN8D,EAAS,SAAC0E,GAAO,IACfqS,EAAkB9G,EAAlB8G,SAAUzL,EAAQ2E,EAAR3E,IAEhBsE,EADcH,EAEJzP,QACN,SAAC6O,GAAD,OACEA,EAAIkI,GAAU3G,cAAc/H,QAAQiD,EAAI8E,gBAAkB,KAC5D+G,MACA,SAACpW,EAAEqW,GAAH,OAASrW,EAAEuV,cAAgBc,EAAEd,cAAiB,GAAK,OAKnDe,EAAK,uCAAG,WAAO3S,GAAP,SAAA3D,EAAA,sDACZsC,EAAS,CACP0T,SAAU,cACVzL,IAAK,GACL0L,UAAW,KACXC,QAAS,OAEX/G,EAAY,CACV6G,SAAU,cACVzL,IAAK,GACL0L,UAAW,KACXC,QAAS,OAXC,2CAAH,sDA7HsB,GA4ITnN,IAAM5G,SAAS,GA5IN,qBA4I1BgH,GA5I0B,MA4IpByG,GA5IoB,SA6IK7G,IAAM5G,SAAS,GA7IpB,qBA6I1BiH,GA7I0B,MA6IbyG,GA7Ia,MA+I3BC,GAAY1G,GAAcO,KAAKoG,IAAI3G,GAAawF,EAAKjG,OAASQ,GAAOC,IAW3E,OACE,gCACE,cAACoC,GAAD,CACAC,IAAOuJ,EACPnX,YAAa,WACXoX,EAAY,SAGd,sBAAKhZ,UAAU,UAAf,UACA,eAAC+T,GAAA,EAAD,WACE,cAACA,GAAA,EAAW1S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACwS,GAAA,EAAW1S,KAAZ,CAAiB2S,QAAM,EAAvB,mCAEA,cAACzL,EAAA,EAAD,CAAM0L,QAAM,EAACjU,UAAU,YAAYyI,SAAU,SAACf,GAAKA,EAAEgB,kBAArD,SACE,eAACO,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAACb,EAAA,EAAKe,QAAN,CACEO,QAAM,EACNb,GAAK,SACL/H,GAAG,WACHyI,SAAUlC,EACVtI,MAAOH,EAAMgb,SALf,SArKS,CACnB,cACA,cACA,WACA,WACA,gBACA,kBAsK2BjQ,KAAI,SAACwQ,GAAD,OACb,wBAAQpb,MAAOob,EAAf,SAA4BrB,EAAiBqB,YAIvD,cAACjR,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAACb,EAAA,EAAKe,QAAN,CACErI,GAAG,MACHuI,YAAayP,EAAiBla,EAAMgb,UACpCrQ,SAAUlC,EACVtI,MAAOH,EAAMuP,QAGjB,cAACjF,EAAA,EAAD,CAAKD,GAAG,OAAOpJ,UAAU,SAAzB,SACA,cAACuI,EAAA,EAAKW,MAAN,sBAEA,cAACG,EAAA,EAAD,CAAKD,GAAG,OAAR,SACA,cAAC,MAAD,GACAmR,aAAW,EACTva,UAAU,aACVwa,SAAUzb,EAAMib,UAChBS,QAAS1b,EAAMkb,QACfS,gBAAgB,kBALlB,0BAMY,gBANZ,gCAOkB,uBAPlB,0BAQY,SAAAC,GAAI,OAAInT,EAAa,CAC7BC,OAAO,CACLvI,MAAMyb,EACN1Z,GAAI,kBAXV,8DAea,cAfb,2BAgBa,YAhBb,8BAiBiB,IAjBjB,4BAkBc,QAlBd,2BAmBa,uBAnBb,sBAoBQ,cApBR,qCAqBuB,iBArBvB,MAwBA,cAACoI,EAAA,EAAD,CAAKD,GAAG,OAAOpJ,UAAU,SAAzB,SACA,cAACuI,EAAA,EAAKW,MAAN,oBAEA,cAACG,EAAA,EAAD,CAAKD,GAAG,OAAR,SACA,cAAC,MAAD,GACAmR,aAAW,EACTva,UAAU,aACVwa,SAAUzb,EAAMkb,QAChBW,QAAS7b,EAAMib,UACfU,gBAAgB,kBALlB,0BAMY,gBANZ,gCAOkB,uBAPlB,0BAQY,SAAAC,GAAI,OAAInT,EAAa,CAC7BC,OAAO,CACLvI,MAAMyb,EACN1Z,GAAI,gBAXV,8DAea,cAfb,2BAgBa,YAhBb,8BAiBiB,IAjBjB,4BAkBc,QAlBd,2BAmBa,uBAnBb,sBAoBQ,cApBR,qCAqBuB,iBArBvB,MAwBA,cAACoI,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC5G,EAAA,EAAD,CAAQvD,KAAK,SAASsB,QAAS,WAAK2S,EAAYnU,IAAhD,sBAIF,cAACsK,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC5G,EAAA,EAAD,CAAQvD,KAAK,SAAS0B,QAAQ,YAAYJ,QAAS8Z,EAAnD,8BAOR,sBAAKra,UAAU,UAAf,UACE,cAACqR,GAAA,EAAD,CAAgBD,UAAWE,KAAOtR,UAAU,gBAA5C,SACE,eAACuR,GAAA,EAAD,CAAO9D,aAAW,eAAlB,UACE,cAAC+D,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACGmI,EAAO9P,KAAI,SAAC+Q,GAAD,OACV,cAACnJ,GAAA,EAAD,CAAWC,MAAM,SAASvR,MAAO,CAAC,YAAYyZ,EAAYgB,IAA1D,SAAoE5B,EAAiB4B,YAI3F,eAACjJ,GAAA,EAAD,YACIzE,GAAc,EAChBwF,EAAKuB,MAAMhH,GAAOC,GAAaD,GAAOC,GAAcA,IACpDwF,GAAM7I,KAAI,SAAC+H,GAAD,OACR,eAACJ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAW1R,UAAU,YAAYoR,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAAlE,SACGE,EAAI7H,cAEP,cAAC0H,GAAA,EAAD,CAAW1R,UAAU,YAAYoR,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAAlE,SACGE,EAAIqH,cAEP,cAACxH,GAAA,EAAD,CAAW1R,UAAU,YAAYoR,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAAlE,UACoB,IAAjBE,EAAIsH,SACL,qBAAK/Y,MAAO,CAAC,OAAS0Z,GAAuBtK,IAAKsH,GAAU9W,UAAU,sBACtE,qBAAKI,MAAO,CAAC,OAAS0Z,GAAuBtK,IAAKsL,GAAW9a,UAAU,uBAEzE,cAAC0R,GAAA,EAAD,CAAW1R,UAAU,YAAYoR,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAAlE,SACGE,EAAI1H,WAEP,cAACuH,GAAA,EAAD,CAAW1R,UAAU,YAAYoR,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAAlE,SACGE,EAAIjH,WAEP,cAAC8G,GAAA,EAAD,CAAW1R,UAAU,YAAYoR,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAAlE,SACGE,EAAIyH,gBAEP,cAAC5H,GAAA,EAAD,CAAW1R,UAAU,YAAYoR,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAAlE,SACGE,EAAI0H,gBAEP,cAAC7H,GAAA,EAAD,CAAW1R,UAAU,YAAY2R,MAAM,SAAvC,SACE,qBAAK3R,UAAU,aAAf,SACE,qBAAKA,UAAU,aAAf,SACE,4BAAI6R,EAAIuH,sBAId,cAAC1H,GAAA,EAAD,CAAW1R,UAAU,YAAY2R,MAAM,SAAvC,SACwB,OAArBE,EAAIwH,eAAsB,KAC3B,qBAAKrZ,UAAU,aAAf,SACE,qBAAKA,UAAU,aAAf,SACE,4BAAI6R,EAAIwH,uBAId,cAAC3H,GAAA,EAAD,CAAW1R,UAAU,YAAY2R,MAAM,SAAvC,SACE,qBACA3R,UAAU,aACVO,QAAW,kBAAIyY,EAAYnH,EAAI2H,SAC/BpZ,MAAO,CAAC,OAAS0Z,GACjBtK,IAAKqC,EAAI2H,WAEX,cAAC9H,GAAA,EAAD,CAAW1R,UAAU,YAAY2R,MAAM,SAAvC,SACE,qBACA3R,UAAU,aACVO,QAAW,kBAAIyY,EAAYnH,EAAI4H,SAC/BrZ,MAAO,CAAC,OAAS0Z,GACjBtK,IAAKqC,EAAI4H,WAEX,cAAC/H,GAAA,EAAD,CAAW1R,UAAU,YAAY2R,MAAM,SAAvC,SACE,qBACA3R,UAAU,aACVO,QAAW,kBAAIyY,EAAYnH,EAAI6H,SAC/BtZ,MAAO,CAAC,OAAS0Z,GACjBtK,IAAKqC,EAAI6H,WAEX,cAAChI,GAAA,EAAD,CAAW1R,UAAU,YAAY2R,MAAM,SAAvC,SACE,qBACA3R,UAAU,aACVO,QAAW,kBAAIyY,EAAYnH,EAAI8H,aAC/BvZ,MAAO,CAAC,OAAS0Z,GACjBtK,IAAKqC,EAAI8H,iBAjEE9H,EAAIkJ,UAqEpBlH,GAAY,GACX,cAACpC,GAAA,EAAD,CAAUrR,MAAO,CAAE8Q,OAAQ,GAAK2C,IAAhC,SACE,cAACnC,GAAA,EAAD,CAAW0C,QAAS,cAM9B,cAAC3C,GAAA,EAAD,CAAUzR,UAAU,gCAApB,SACI,cAACsU,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BH,QAAS,GACTnH,MAAO0F,EAAKjG,OACZS,YAAaA,GACbD,KAAMA,GACNsH,YAAa,CACXC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEVtH,aAxNa,SAACI,EAAOmH,GAC/BhB,GAAQgB,IAwNEC,oBArNoB,SAACpH,GAC/BoG,GAAeiB,SAASrH,EAAM/F,OAAOvI,MAAO,KAC5CyU,GAAQ,IAoNEmB,iBAAkB9H,aClXzB,SAASgO,GAAT,GAAgC,EAATxI,MAC5B,OAAQ,qBAAKxS,UAAU,gCAAf,SAA+C,+CCOlD,SAASib,KAAgB,IAAD,EACL/U,mBAAS,IADJ,mBACtByM,EADsB,KAChBC,EADgB,OAED1M,mBAAS,CACnC2M,QAAQ,EACRzC,MAAM,IAJqB,mBAEtBC,EAFsB,KAEdC,EAFc,OAMApK,mBAAS,MANT,mBAMtB6D,EANsB,KAMdmR,EANc,OAOHhV,mBAAS,IAPN,mBAOtBgK,EAPsB,KAOfC,EAPe,OAQHjK,oBAAS,GARN,mBAQtBI,EARsB,aASWJ,mBAAS,KATpB,mBAStBkS,EATsB,KASRC,EATQ,OAUKnS,mBAAS,IAVd,mBAUtBiV,EAVsB,KAUXC,EAVW,OAWElV,mBAAS,IAXX,mBAWtBK,EAXsB,KAWbC,EAXa,KAYvB6H,EAAI,uCAAG,WAAOC,EAAK+M,EAAYC,GAAxB,eAAAvX,EAAA,6DACPwK,EAAO,GACXD,EAAIE,QAAJ,uCAAY,WAAOC,GAAP,SAAA1K,EAAA,sDACVwK,EAAKE,EAAQ4M,IAAe5M,EAAQ6M,GAD1B,2CAAZ,uDAFW,SAKE/M,EALF,mFAAH,0DAoBV1H,qBAAU,WAZRtC,GAAY,CAAC,YAAa,gBACvBW,KADH,uCACQ,WAAOjB,GAAP,SAAAF,EAAA,sDACJlE,QAAQC,IAAImE,EAAKE,SACjBqC,EAAYvC,EAAKE,SACjBkK,EAAKpK,EAAKE,QAAS,YAAa,eAAee,KAA/C,uCAAoD,WAAM4J,GAAN,SAAA/K,EAAA,kEAClDsU,EADkD,SAC5BvJ,EAD4B,6EAApD,uDAHI,2CADR,uDAQGvH,OAAM,SAACjE,GACNzD,QAAQyD,MAAM,gCAAiCA,QAKlD,CAACgD,IAEJ,IAAMiK,EAAS,YrBqBK,SAACjL,EAAWd,GAC9B,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,WACbZ,QAAS,CACPa,QAAS,aACTR,UACAa,QAAQ,CACJC,iBAKZ,OAAOL,MAAMtB,GAAYc,GACxBS,KAAKrB,KqBrCN0X,CAAcxR,EAAS,CAAC,eAAgB,iBAAkB,eAAgB,UACzE7E,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJlE,QAAQC,IAAImE,EAAKE,SACjByO,EAAQ3O,EAAKE,SAFT,2CADN,uDAKCoD,OAAM,SAACjE,GACNzD,QAAQyD,MAAM,gCAAiCA,OAgBnDuD,qBAAU,WACR0J,IACa,OAAVxG,GAbH5E,GAAQ4E,EAAQ,CAAC,SAAS,aACvB7E,KADH,uCACQ,WAAOjB,GAAP,SAAAF,EAAA,sDACJsK,EAAKpK,EAAKE,QAAS,SAAU,YAAYe,KAAzC,uCAA8C,WAAM4J,GAAN,SAAA/K,EAAA,kEAC5CqX,EAD4C,SACzBtM,EADyB,6EAA9C,uDADI,2CADR,uDAMGvH,OAAM,SAACjE,GACNzD,QAAQyD,MAAM,gCAAiCA,QAOnD,CAACyG,IAEH,IAAMnI,EAAc,SAACiP,GACnB,IAAIC,EAAUT,EAAOQ,GACrBP,GAAU,SAACxI,GAAD,mBAAC,eACNA,GADK,kBAEP+I,GAASC,QAIR4C,EAAG,uCAAG,WAAO5F,GAAP,SAAA/J,EAAA,0FAAH,sDAxEoB,EAqFL+I,IAAM5G,SAAS,GArFV,mBAqFtBgH,EArFsB,KAqFhByG,EArFgB,OAsFS7G,IAAM5G,SAAS,GAtFxB,mBAsFtBiH,GAtFsB,KAsFTyG,GAtFS,KAwFvBC,GAAY1G,GAAcO,KAAKoG,IAAI3G,GAAawF,EAAKjG,OAASQ,EAAOC,IAW3E,OACE,gCACE,cAACzL,EAAD,CACEI,KAAMuO,EAAOwC,OACbhR,QAAS,WACP6R,EAAIxD,IAENtO,YAAa,WACXA,EAAY,WAEdpB,MAAM,mBACNuB,KAAK,sBAENsO,EAAOD,KACR,cAACvC,GAAD,CACE/L,KAAMuO,EAAOD,KACb9K,UAAayE,EACbC,YAAeoO,EAAarO,GAC5B+D,aAAgBoC,EAChBrO,QAAS,WACL0O,IACA3O,EAAY,SAEhBA,YAAa,WACXA,EAAY,WAEb,KAEH,sBAAK5B,UAAU,UAAf,UACA,eAAC+T,GAAA,EAAD,WACE,cAACA,GAAA,EAAW1S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACwS,GAAA,EAAW1S,KAAZ,CAAiB2S,QAAM,EAAvB,6BAEA,cAACzL,EAAA,EAAD,CAAM0L,QAAM,EAACjU,UAAU,YAAYyI,SAAU,SAACf,GAAKA,EAAEgB,kBAArD,SACE,eAACO,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,eAACb,EAAA,EAAKe,QAAN,CACEO,QAAM,EACNb,GAAK,SACL/H,GAAG,YACHyI,SAAU,SAAChC,GACTwT,EAAWxT,EAAED,OAAOvI,QAEtBA,MAAO6K,EAPT,UASE,wBAAQ7K,MAAM,GAAd,kCACGqH,EAASuD,KAAI,SAACwE,GAAD,OACV,wBAAQpP,MAAOoP,EAAIhJ,UAAnB,SAA+BgJ,EAAItE,sBAI7C,cAACX,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC5G,EAAA,EAAD,CACExC,UAAU,kBACVf,KAAK,SACLsB,QAAS,WACP4P,EAAS,MACTvO,EAAY,SALhB,6BAcR,qBAAK5B,UAAU,UAAf,SACE,cAACqR,GAAA,EAAD,CAAgBD,UAAWE,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO9D,aAAW,eAAlB,UACE,cAAC+D,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAwB,0CACxB,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,uCAC1B,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,wCAC1B,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,6CAC1B,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAAyB,+CAG7B,eAACC,GAAA,EAAD,YACIzE,GAAc,EAChBwF,EAAKuB,MAAMhH,EAAOC,GAAaD,EAAOC,GAAcA,IACpDwF,GAAM7I,KAAI,SAAC+H,EAAK9F,GAAN,OACR,eAAC0F,GAAA,EAAD,WACA,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyByG,EAAarO,KACpC,cAAC2H,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BE,EAAInD,iBAC/B,cAACgD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA4BE,EAAIlL,MAAOmD,KAAI,SAACI,GAAD,OACzC,gCAAMiR,EAAUjR,GAAhB,IAAuB,+BAEzB,cAACwH,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BE,EAAIhH,eAC/B,eAAC6G,GAAA,EAAD,CAAWC,MAAM,QAAQvR,MAAO,CAAC0R,QAAQ,GAAzC,UACE,cAACvE,GAAA,EAAD,CAAYhN,QAAS,WACjB4P,EAAS0B,EAAI/D,cACblM,EAAY,SAFhB,SAIE,cAAC,KAAD,CACEwN,KAAM,GACN6B,MAAM,WAGV,cAAC1D,GAAA,EAAD,CAAYhN,QAAS,WACjB4P,EAAS0B,EAAI/D,cACblM,EAAY,WAFhB,SAIE,cAAC,KAAD,CAAOqP,MAAM,MAAM7B,KAAM,YArBhByC,EAAI1H,aA0BpB0J,GAAY,GACX,cAACpC,GAAA,EAAD,CAAUrR,MAAO,CAAE8Q,OAAQ,GAAK2C,IAAhC,SACE,cAACnC,GAAA,EAAD,CAAW0C,QAAS,SAI1B,cAACC,GAAA,EAAD,UACA,cAAC5C,GAAA,EAAD,UACE,cAAC6C,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,CAAEtI,MAAO,MAAO/M,OAAQ,IACpDkV,QAAS,EACTnH,MAAO0F,EAAKjG,OACZS,YAAaA,GACbD,KAAMA,EACNsH,YAAa,CACXC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEVtH,aAvIW,SAACI,EAAOmH,GAC/BhB,EAAQgB,IAuIIC,oBApIkB,SAACpH,GAC/BoG,GAAeiB,SAASrH,EAAM/F,OAAOvI,MAAO,KAC5CyU,EAAQ,IAmIImB,iBAAkB9H,mBC7NRwO,KAmD1B,SAASC,GAAT,GAA8C,IAAtB5c,EAAqB,EAArBA,SAAa6c,EAAQ,4BAErClc,EADeD,qBAAWd,GACCM,MAC7BT,EAAOkB,EAAYlB,KACnBE,EAAUgB,EAAYhB,QAC1B,OACE,cAAC,IAAD,2BACMkd,GADN,IAEEC,OAAQ,SAACha,GAAD,OACNrD,EACE,sBAAK0B,UAAU,QAAf,UACI,cAAC,GAAD,IACF,cAACX,EAAD,IACA,qBAAK4B,GAAG,eAAejB,UAAWxB,EAAQ,yBAAyB,sBAAnE,SACGsO,IAAM8O,aAAa/c,EAAU,CAAEgd,OAAQla,EAAM6Q,MAAMqJ,cAIxD,cAAC,IAAD,CACE/D,GAAI,CACF1B,SAAU,IACVrX,MAAO,CAAE+c,KAAMna,EAAMoR,iBASnC,SAASgJ,GAAT,GAA6C,IAAtBld,EAAqB,EAArBA,SAAa6c,EAAQ,4BAGtCpd,EAFiBiB,qBAAWd,GACCM,MACVT,KACvB,OACE,cAAC,IAAD,2BACMod,GADN,IAEEC,OAAQ,gBAAG5I,EAAH,EAAGA,SAAH,OACNzU,EACE,cAAC,IAAD,CACEwZ,GAAI,CACF1B,SAAU,QACVrX,MAAO,CAAE+c,KAAM/I,MAIrB,cAAC,GAAD,IACElU,OAOKmd,OAzFR,WACL,OAEE,aADA,CACC,KAAD,UACE,eAAC,IAAD,WACE,cAACP,GAAD,CAAc7b,KAAK,QAAnB,SACE,cAAC,GAAD,MAEF,cAAC6b,GAAD,CAAc7b,KAAK,sBAAnB,SACE,cAACyX,GAAD,MAEF,cAACoE,GAAD,CAAc7b,KAAK,WAAnB,SACE,cAAC2S,GAAD,MAEF,cAACkJ,GAAD,CAAc7b,KAAK,SAAnB,SACE,cAACmY,GAAD,MAEF,cAAC0D,GAAD,CAAc7b,KAAK,WAAnB,SACE,cAACkZ,GAAD,MAEF,cAAC2C,GAAD,CAAc7b,KAAK,WAAnB,SACE,cAACob,GAAD,MAEF,cAACS,GAAD,CAAc7b,KAAK,eAAnB,SACE,cAACqb,GAAD,MAEF,cAACc,GAAD,CAAanc,KAAK,IAAlB,SACE,cAACqS,GAAD,YCrDJgK,GAAc7J,SAASC,eAAe,QAC5C6J,IAASP,OACP,cAAC,EAAD,UACE,cAAC,aAAD,UACE,cAAC,GAAD,QAGJM,M","file":"static/js/main.9129a1d7.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  auth: true,\r\n  user: \"huajun\",\r\n  toggled: false\r\n};\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"setAuth\":\r\n        return {\r\n          ...state,\r\n          auth: action.value\r\n        };\r\n      case \"setUser\":\r\n        return {\r\n          ...state,\r\n          user: action.value\r\n        };\r\n      case \"setToggled\":\r\n        return {\r\n          ...state,\r\n          toggled: !state.toggled\r\n        };\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { store, StateProvider };\r\n","import {\r\n  SidebarContent,\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SubMenu\r\n} from \"react-pro-sidebar\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport { List } from \"react-bootstrap-icons\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { store } from \"../store.js\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalParkingIcon from '@material-ui/icons/LocalParking';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nexport function NavBar() {\r\n  const storeContext = useContext(store);\r\n  const { dispatch } = storeContext;\r\n  const globalState = storeContext.state;\r\n  const {toggled, user}  = globalState;\r\n  let history = useHistory();\r\n  const logout = () => {\r\n    dispatch({\r\n      type: \"setAuth\",\r\n      value: false\r\n    });\r\n    dispatch({\r\n      type: \"setUser\",\r\n      value: \"\"\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n  const direct = (path) => {\r\n    console.log(\"clicked\", path);\r\n    history.push(path);\r\n  };\r\n  const toggleSideBar = () => {\r\n    dispatch({\r\n      type: \"setToggled\"\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"h-100 fixed-top clickThrough\">\r\n      <ProSidebar\r\n        className=\"clickAble navbar-default navbar-static-top sideBar\"\r\n        collapsed={toggled}\r\n        width=\"250px\"\r\n        //collapsedWidth=\"px\"\r\n      >\r\n        <SidebarContent>\r\n          <Menu iconShape=\"circle\">\r\n            <MenuItem \r\n              style={{\"background\":\"#2c3b41\",\"height\":\"60px\", \"pointer-events\":\"none\"}}\r\n              className=\"d-flex justify-content-center align-items-center\">\r\n              <div style={{\"padding-top\":\"10px\", \"color\":\"white\"}}>\r\n                <h5>Admin</h5>\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem \r\n              icon={<AccountCircleIcon fontSize='large'/>}\r\n              style={{\"pointer-events\":\"none\", \"border-bottom\":\"1px solid gray\"}}>\r\n              <div style={{ \"color\":\"white\"}}>\r\n                Welcome, {user}\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<HomeIcon onClick={()=>direct(\"/home\")}/>}>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<InfoIcon onClick={()=>direct(\"/project\")} />}>\r\n              <div onClick={()=>direct(\"/project\")}>\r\n                Project\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<CodeIcon onClick={()=>direct(\"/regex\")} />}>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<StorageIcon onClick={()=>direct(\"/records\")} />}>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n                Exit/Entry Records\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<LocalParkingIcon onClick={()=>direct(\"/parking\")} />}>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </MenuItem>\r\n            <SubMenu title=\"Access\" icon={<PaymentIcon/>}>\r\n              <MenuItem  onClick={()=>direct(\"/accessRules\")} >Access Rules</MenuItem>\r\n              <MenuItem>Tracking</MenuItem>\r\n            </SubMenu>\r\n          </Menu>\r\n        </SidebarContent>\r\n      </ProSidebar>\r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" className={\"clickAble navBar\"+(toggled?\" navBar-collapsed\":\" navBar-expand\")}>\r\n        <Navbar.Brand \r\n        className=\"sideBar\" \r\n        onClick={toggleSideBar}>\r\n          <List />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"nav-dropdown\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto nav-dropdown\">\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/project\")}>\r\n                Project\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n                Log Records\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </Nav.Link>\r\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item data-value=\"/home\" onClick={direct}>\r\n                Action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Navbar.Text>\r\n            <Nav.Link onClick={logout}>Signout</Nav.Link>\r\n          </Navbar.Text>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { NavBar };\r\n","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nexport function ConfirmModal(props) {\r\n  let toggleModal = props.toggleModal;\r\n  let success = props.success;\r\n  let hide = props.hide;\r\n  let body = props.body;\r\n  let title = props.title;\r\n  return (\r\n    <Modal show={hide} onHide={toggleModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{body}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={toggleModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={()=>{\r\n          success();\r\n        }}>\r\n          Confirm\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { ConfirmModal};\r\n","import { Button, Modal, Form } from \"react-bootstrap\";\r\nimport {useState} from 'react';\r\n\r\nexport function QueryModal(props) {\r\n    let toggleModal = props.toggleModal;\r\n    let success = props.success;\r\n    let hide = props.hide;\r\n    let body = props.body;\r\n    let title = props.title;\r\n    const [value,setValue] = useState(\"\");\r\n    const handleChange = (e) =>{\r\n      setValue(e.target.value);\r\n    }\r\n    const exit = () =>{\r\n      setValue(\"\");\r\n      toggleModal();\r\n    }\r\n    return (\r\n      <Modal show={hide} onHide={exit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Label>{body}</Form.Label>\r\n            <Form.Control \r\n            value={value}\r\n            onChange={handleChange}\r\n            />\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={exit}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>{\r\n              success(value);\r\n              exit();\r\n              }}>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default {QueryModal};","import { Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nconst alertSubject = new Subject();\r\nconst defaultId = 'default-alert';\r\n\r\nexport const alertService = {\r\n    onAlert,\r\n    success,\r\n    error,\r\n    info,\r\n    warn,\r\n    alert,\r\n    clear\r\n};\r\n\r\nexport const alertType = {\r\n    success: 'success',\r\n    error: 'danger',\r\n    info: 'info',\r\n    warning: 'warning'\r\n}\r\n\r\n// enable subscribing to alerts observable\r\nfunction onAlert(id = defaultId) {\r\n    return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\r\n}\r\n\r\n// convenience methods\r\nfunction success(message, options) {\r\n    alert({ ...options, type: alertType.success, message });\r\n}\r\n\r\nfunction error(message, options) {\r\n    alert({ ...options, type: alertType.error, message });\r\n}\r\n\r\nfunction info(message, options) {\r\n    alert({ ...options, type: alertType.info, message });\r\n}\r\n\r\nfunction warn(message, options) {\r\n    alert({ ...options, type: alertType.warning, message });\r\n}\r\n\r\n// core alert method\r\nfunction alert(alert) {\r\n    alert.id = alert.id || defaultId;\r\n    alertSubject.next(alert);\r\n}\r\n\r\n// clear alerts\r\nfunction clear(id = defaultId) {\r\n    alertSubject.next({ id });\r\n}","import { alertService } from './index.js';\r\n\r\nconst server_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst returnFunc = async (response) => {\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.content) || response.status;\r\n        return Promise.reject(error);\r\n    }\r\n    return data;\r\n}\r\n\r\nconst getProjects = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"project\",\r\n            columns\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getMovementLogs = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"movementLog\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getSpecialPlate = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"specialPlate\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAccessRule = (projectID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"accessRule\",\r\n            columns,\r\n            filters:{\r\n                projectID\r\n            }\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createSpecialPlate\",\r\n          content: state\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delSpecialPlate = (matchPlate) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteSpecialPlate\",\r\n            content: {\r\n                matchPlate\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifySpecialPlate\",\r\n            content: {\r\n            matchPlate: state.matchPlate,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addProject = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createProject\",\r\n          content: {\r\n            projectName: \"\",\r\n            projectType: \"\",\r\n            location: \"\",\r\n            contactNumber: \"\",\r\n            maCompany: \"\",\r\n            equipManu: \"\"\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGate = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getTable\",\r\n            content: {\r\n            objName: \"gate\",\r\n            columns,\r\n            filters:{\r\n                projectID: ID\r\n            }\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDevice = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"device\",\r\n            columns,\r\n            filters:{\r\n              gateID: ID\r\n            }\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAllDevice = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"device\",\r\n            columns\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createGate = (projectID,values) =>{\r\n    const newGateReq = {\r\n        ...values,\r\n        projectID\r\n    };\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createGate\",\r\n            content: newGateReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createDevice = (gateID, values) =>{\r\n    const newDeviceReq = {\r\n        ...values,\r\n        gateID\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createDevice\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getProjectInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getProject\",\r\n            content: {\r\n            projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delProject = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteProject\",\r\n            content: {\r\n                projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateProjectInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyProject\",\r\n            content: {\r\n            projectID: ID,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getBusinessInfo = (ID) =>{\r\n    //Pending Function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateBusinessInfo = (ID, state) =>{\r\n    //Pending function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGateInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delGate = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateGateInfo = (ID, state) =>{\r\n    console.log(state);\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyGate\",\r\n            content: {\r\n                gateID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDeviceInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delDevice = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateDeviceInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyDevice\",\r\n            content: {\r\n                deviceID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createAccessRule = (values) =>{\r\n    const newDeviceReq = {\r\n        ...values\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createAccessRule\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAccessRuleInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getAccessRule\",\r\n          content: {\r\n            accessRuleID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateAccessRuleInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyAccessRule\",\r\n            content: {\r\n                accessRuleID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getObjectTypes = (obj) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getObjectTypes\",\r\n            content: {\r\n                objName: obj\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getWhitelistTags = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getWhitelistTags\"\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst openGate = (gateID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"openGate\",\r\n            content:{\r\n                gateID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getNewDevices = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getNewDevice\"\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nexport {\r\n    getGate,\r\n    getDevice,\r\n    createGate,\r\n    createDevice,\r\n    getProjectInfo,\r\n    updateProjectInfo,\r\n    getBusinessInfo,\r\n    updateBusinessInfo,\r\n    getGateInfo,\r\n    updateGateInfo,\r\n    getDeviceInfo,\r\n    updateDeviceInfo,\r\n    getProjects,\r\n    addProject,\r\n    delProject,\r\n    delGate,\r\n    delDevice,\r\n    getMovementLogs,\r\n    getSpecialPlate,\r\n    delSpecialPlate,\r\n    updateSpecialPlate,\r\n    addSpecialPlate,\r\n    getAccessRule,\r\n    createAccessRule,\r\n    getAccessRuleInfo,\r\n    updateAccessRuleInfo,\r\n    getObjectTypes,\r\n    getWhitelistTags,\r\n    openGate,\r\n    getAllDevice,\r\n    getNewDevices\r\n};","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport { alertService, createDevice, getDeviceInfo, updateDeviceInfo, getGate, getProjects } from '../services/index.js';\r\n\r\nexport function DeviceModal(props) {\r\n    let {hide, gateID, toggleModal, success, deviceID, deviceTypes } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [projects, setProjects] = useState([]);\r\n    const [curProject, setCurProject] = useState(\"\");\r\n    const [gates, setGates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    if(deviceID===null){\r\n      setState({\r\n        gateID,\r\n        deviceID: \"\",\r\n        deviceName: \"\",\r\n        deviceType: \"\",\r\n        deviceCarpark: \"\",\r\n        manufacturer: \"\",\r\n        manufacturerCode: \"\",\r\n        direction: \"\",\r\n        isPrimaryDevice: false,\r\n        isGateControl: false\r\n      });\r\n    }else{\r\n      getDeviceInfo(deviceID)\r\n      .then(async (data) => {\r\n        console.log(data.message);\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Device, There was an error!\", error);\r\n      });\r\n      if(gateID===null){\r\n        handleChange({\r\n          target:{\r\n            id: \"gateID\",\r\n            value: \"\"\r\n          }\r\n        });\r\n        getProjects([\"projectID\",\"projectName\"])\r\n        .then(async (data) => {\r\n          setCurProject(\"\");\r\n          setProjects(data.content);\r\n        })\r\n        .catch((error) => {\r\n          alertService.error(\"There was an error!\");\r\n          console.error(\"Get Projects, There was an error!\", error);\r\n        });\r\n      }\r\n    }\r\n  }, [dummy,hide]);\r\n\r\n  useEffect(()=>{\r\n    handleChange({\r\n      target:{\r\n        id: \"gateID\",\r\n        value: \"\"\r\n      }\r\n    });\r\n    if(curProject === null)setGates([]);\r\n    else{\r\n      getGate(curProject,[\"gateID\",\"gateName\"])\r\n      .then(async (data) => {\r\n        setGates(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gates, There was an error!\", error);\r\n      });\r\n    }\r\n  },[curProject])\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(deviceID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    let tempState = state;\r\n    delete tempState[\"deviceStatus\"];\r\n    updateDeviceInfo(deviceID, tempState)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createDevice(gateID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Device, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{deviceID===null?\"Add Device\":\"Edit Device\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id =\"deviceModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device ID\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >{deviceID===null?\r\n                        <div><Form.Control\r\n                        required\r\n                        placeholder=\"ID\"\r\n                        id=\"deviceID\"\r\n                        name=\"deviceID\"\r\n                        type =\"text\"\r\n                        value={state.deviceID}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device ID is a required field.\r\n                        </Form.Control.Feedback></div>:<Form.Control type=\"text\" placeholder={state.deviceID} readOnly />}\r\n                    </Col>\r\n                    </Form.Group>\r\n                    {gateID===null?\r\n                    <div>\r\n                      <Form.Group as={Row}>\r\n                        <Form.Label column sm={6}>\r\n                            Project\r\n                        </Form.Label>\r\n                        <Col\r\n                            sm={6}\r\n                        >\r\n                          <Form.Control\r\n                            custom\r\n                            required\r\n                            as=\"select\"\r\n                            id=\"project\"\r\n                            name=\"project\"\r\n                            value={curProject}\r\n                            onChange={(e)=>{\r\n                              setCurProject(e.target.value);\r\n                            }}\r\n                            >\r\n                            <option value={\"\"}>--Select Project--</option>\r\n                            {projects.map((project)=>(\r\n                              <option value={project.projectID}>{project.projectName}</option>\r\n                            ))}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            Project is a required field.\r\n                          </Form.Control.Feedback>\r\n                        </Col>\r\n                      </Form.Group>\r\n                      <Form.Group as={Row}>\r\n                        <Form.Label column sm={6}>\r\n                            Gate\r\n                        </Form.Label>\r\n                        <Col\r\n                            sm={6}\r\n                        >\r\n                          <Form.Control\r\n                            disabled = {curProject===\"\"}\r\n                            custom\r\n                            required\r\n                            as=\"select\"\r\n                            id=\"gateID\"\r\n                            name=\"gateID\"\r\n                            value={state.gateID}\r\n                            onChange={handleChange}\r\n                            >\r\n                            <option value={\"\"}>--Select Project--</option>\r\n                            {gates.map((gate)=>(\r\n                              <option value={gate.gateID}>{gate.gateName}</option>\r\n                            ))}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            Gate is a required field.\r\n                          </Form.Control.Feedback>\r\n                        </Col>\r\n                      </Form.Group>\r\n                      </div>\r\n                      :null\r\n                    }\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"deviceName\"\r\n                        name=\"deviceName\"\r\n                        value={state.deviceName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"deviceType\"\r\n                        name=\"deviceType\"\r\n                        value={state.deviceType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        {deviceTypes.map((type)=>(\r\n                          <option value={type.id}>{type.name}</option>\r\n                        ))}\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Carpark\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Carpark\"\r\n                        id=\"deviceCarpark\"\r\n                        name=\"deviceCarpark\"\r\n                        value={state.deviceCarpark}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Capark is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Manufacturer\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer\"\r\n                        id=\"manufacturer\"\r\n                        name=\"manufacturer\"\r\n                        value={state.manufacturer}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Manufacturer Code\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer Code\"\r\n                        id=\"manufacturerCode\"\r\n                        name=\"manufacturerCode\"\r\n                        value={state.manufacturerCode}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer Code is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Direction\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Direction\"\r\n                        id=\"direction\"\r\n                        name=\"direction\"\r\n                        value={state.direction}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Direction is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Primary Device?\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isPrimaryDevice}\r\n                        type=\"switch\"\r\n                        id=\"isPrimaryDevice\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Control Gate?\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isGateControl}\r\n                        type=\"switch\"\r\n                        id=\"isGateControl\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"deviceModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { DeviceModal };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport TimeField from 'react-simple-timefield';\r\nimport { alertService, createGate, getGateInfo, updateGateInfo, getWhitelistTags } from '../services/index.js';\r\n\r\nexport function GateModal(props) {\r\n    let {hide, gateID, toggleModal, success, newState, projectID, gateTypes } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [whiteListTags, setWhiteListTags] = useState([]);\r\n    const newInitialState = {\r\n      gateName: \"\",\r\n      gateType: \"\",\r\n      isChargeable: false,\r\n      ledOnTime: \"00:00:00\",\r\n      ledOffTime: \"00:00:00\",\r\n      allowedTypes: []\r\n    };\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    console.log(\"gateModal\", gateID, projectID, newState);\r\n    if(!hide){\r\n      setState(newInitialState);\r\n    }else if(newState){\r\n      setState(newInitialState);\r\n    }else{\r\n      getGateInfo(gateID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n        console.log(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gate, There was an error!\", error);\r\n      });\r\n    }\r\n    getWhitelistTags()\r\n    .then(async (data) => {\r\n      setWhiteListTags(data.message.whitelistTags);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get WhiteList Tags, There was an error!\", error);\r\n    });\r\n  }, [dummy,hide]);\r\n\r\n  const handleTagChange = (e) =>{\r\n    let {id, value} = e.target;\r\n    let idx = state.allowedTypes.indexOf(id);\r\n    if(idx==-1){\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        allowedTypes: prevState.allowedTypes.concat([id])\r\n      }));\r\n    }else{\r\n      let tempList = state.allowedTypes;\r\n      tempList.splice(idx,1);\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        allowedTypes: tempList\r\n      }));\r\n    }\r\n  }\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    console.log(typeof state[id]);\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(newState) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateGateInfo(gateID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createGate(projectID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Gate, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n      setValidated(false);\r\n      toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{newState?\"Add Gate\":\"Edit Gate\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id='gateModal' noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"gateName\"\r\n                        name=\"gateName\"\r\n                        value={state.gateName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"gateType\"\r\n                        name=\"gateType\"\r\n                        value={state.gateType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        {gateTypes.map((type)=>(\r\n                          <option value={type.id}>{type.name}</option>\r\n                        ))}\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Charge fee for entry\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                    Time to turn on the LPR camera’s LED\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex\"\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOnTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOnTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOnTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Time to turn off the LPR\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        className=\"align-items-center d-flex\"\r\n                        sm={6}\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOffTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOffTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOffTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Whitelist Tags\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                      <Col\r\n                          sm={6}\r\n                      >\r\n                        {whiteListTags.map((tag, index)=>(\r\n                            <div>{\r\n                                index%2==0?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={tag}\r\n                                checked={state.allowedTypes.includes(tag)}\r\n                                onChange={handleTagChange}\r\n                                label={tag}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                      </Col>\r\n                      <Col\r\n                          sm={6}\r\n                      >\r\n                        {whiteListTags.map((tag, index)=>(\r\n                            <div>{\r\n                                index%2==1?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={tag}\r\n                                checked={state.allowedTypes.includes(tag)}\r\n                                onChange={handleTagChange}\r\n                                label={tag}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                      </Col>\r\n                    </Form.Group>\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"gateModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { GateModal };\r\n","import React from 'react';\r\n\r\nimport { alertService, alertType } from '../services/index.js';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nexport class AlertGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            alerts: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // subscribe to new alert notifications\r\n        this.subscription = alertService.onAlert(this.props.id)\r\n            .subscribe(alert => {\r\n                // add alert to array\r\n                this.setState({ alerts: [...this.state.alerts, alert] });\r\n\r\n                // auto close alert if required\r\n                setTimeout(() => this.removeAlert(alert), 3000);\r\n            });\r\n\r\n        // clear alerts on location change\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // unsubscribe & unlisten to avoid memory leaks\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert) {\r\n        this.setState({ alerts: this.state.alerts.filter(x => x !== alert) })\r\n    }\r\n\r\n    render() {\r\n        const { alerts } = this.state;\r\n        if (!alerts.length) return null;\r\n        return (\r\n            <div className=\"alertGrp\">\r\n                {console.log(alerts),\r\n                alerts.map((alert,idx) =>\r\n                    <Alert \r\n                    key = {idx} \r\n                    variant={alert.type}\r\n                    dismissible = {true}\r\n                    onClose={()=>{this.removeAlert(alert)}}>\r\n                        {alert.message}\r\n                    </Alert>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default {AlertGroup} ;","import {IconButton} from '@material-ui/core';\r\n\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nexport function TablePaginationActions(props) {\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div style={{flexShrink:0, right:0}}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        <FirstPageIcon />\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n         <KeyboardArrowLeft />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        <KeyboardArrowRight />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        <LastPageIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default {TablePaginationActions};","import { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, createAccessRule, getAccessRuleInfo, updateAccessRuleInfo, getGate } from '../services/index.js';\r\n\r\nexport function RulesModal(props) {\r\n    let {hide, accessRuleID, projectID, success, projectName, toggleModal } = props;\r\n    let cnt = 0;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [gates, setGates] = useState([]);\r\n    const [curGates, setCurGates] = useState({});\r\n    const [initialGates, setInitialGates] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const func = async (val) =>{\r\n        let temp = {};\r\n        val.forEach(async (element)=>{\r\n            temp[element[\"gateID\"]] = false;\r\n        });\r\n        initialGates.forEach(async (element)=>{\r\n            console.log(element);\r\n            temp[element] = true;\r\n        });\r\n        return await temp;\r\n    };\r\n    const loadGates = () =>{\r\n        getGate(projectID, [\"gateID\", \"gateName\"])\r\n        .then(async (data) => {\r\n            setGates(data.content);\r\n            func(data.content).then(async(list)=>{\r\n                setCurGates(await list);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            alertService.error(\"There was an error!\");\r\n            console.error(\"Get Gate Rule, There was an error!\", error);\r\n        });\r\n    }\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    setTimeout(()=>setLoading(false), 600);\r\n    if(accessRuleID===null){\r\n      setState({\r\n        projectID,\r\n        accessRuleName: \"\",\r\n        isChargeable: false,\r\n        gates: []\r\n      });\r\n      setInitialGates([]);\r\n    }else{\r\n      getAccessRuleInfo(accessRuleID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n        setInitialGates(data.message.gates);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Access Rule, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    setState((prevState)=>({\r\n        ...prevState,\r\n        gates: (Object.keys(curGates)).filter((gate)=>curGates[gate])\r\n      }));\r\n  },[curGates]);\r\n\r\n  useEffect(()=>{\r\n    loadGates();\r\n  },[initialGates]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleGateChange = (e) =>{\r\n    let id = e.target.id;\r\n    setCurGates((prevState) => ({\r\n      ...prevState,\r\n      [id]: !prevState[id]\r\n    }));\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(accessRuleID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateAccessRuleInfo(accessRuleID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Access Rule, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createAccessRule(state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Access Rule, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n      {loading?\r\n      <Row className=\"d-flex justify-content-center\" style={{margin:\"200px\"}}>\r\n      <Spinner size=\"lg\" animation=\"border\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n    </Row>:\r\n        <div>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{accessRuleID===null?\"Add Rule\":\"Edit Rule\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id =\"ruleModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Project Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={projectName} readOnly />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Access Rule Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"accessRuleName\"\r\n                        name=\"accessRuleName\"\r\n                        value={state.accessRuleName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Rule Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gates\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        {gates.map((gate, index)=>(\r\n                            <div>{\r\n                                index%2==0?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={gate.gateID}\r\n                                checked={curGates[gate.gateID]}\r\n                                onChange={handleGateChange}\r\n                                label={gate.gateName}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                    </Col>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        {gates.map((gate, index)=>(\r\n                            <div>{\r\n                                index%2==1?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={gate.gateID}\r\n                                checked={curGates[gate.gateID]}\r\n                                onChange={handleGateChange}\r\n                                label={gate.gateName}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Is Chargeable\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"ruleModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n        </div>\r\n      }\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { RulesModal };\r\n","import {Modal} from 'react-bootstrap';\r\n\r\nexport function ImageModal (props){\r\n    let {toggleModal, src} = props;\r\n    return(\r\n    <Modal size=\"lg\" centered show={src===null?false:true} onHide={toggleModal}>\r\n        <img src={src}/>\r\n    </Modal>\r\n    );\r\n}\r\n\r\nexport default {ImageModal};","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {Jumbotron, Row, Col, Card } from 'react-bootstrap';\r\nimport {getAllDevice, getObjectTypes, alertService, getGateInfo, getNewDevices} from '../services/index.js';\r\nimport {IconButton, Typography  , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, TableHead, TableRow, Paper, CardActions } from '@material-ui/core';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { TablePaginationActions , DeviceModal} from \"../components/index.js\";\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nexport function Home() {\r\n  const [rows, setRows] = useState([]);\r\n  const [dummy, setDummy] = useState(null);\r\n  const [devices, setDevices] = useState([]);\r\n  const [newDevices, setNewDevices] = useState([]);\r\n  const [deviceTypes, setDeviceTypes] = useState([]);\r\n  const [deviceTypeNames, setDeviceTypeNames] = useState({});\r\n  const [curID, setCurID] = useState(null);\r\n  const [toggle, setToggle] = useState({\r\n    edit: false\r\n  });\r\n  let history = useHistory();\r\n\r\n  const reload = () =>{\r\n    getAllDevice([\"deviceID\", \"deviceName\", \"deviceType\",\"deviceStatus\", \"gateID\"])\r\n    .then(async (data) => {\r\n      setDevices(data.content.filter((device)=>device.deviceStatus!==\"online\"&&device.gateID !== null));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get All Device, there was an error!\", error);\r\n    });\r\n    getNewDevices()\r\n    .then(async (data) => {\r\n      setNewDevices(data.message);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get All Device, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n    getObjectTypes(\"device\")\r\n    .then(async (data) => {\r\n      setDeviceTypeNames(data.message);\r\n      setDeviceTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Device Types!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  const direct = (gateID) =>{\r\n    getGateInfo(gateID)\r\n    .then(async (data) => {\r\n      let projectID = data.message.projectID;\r\n      history.push('/project/'+String(projectID)+'/gate/'+String(gateID));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate Info, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  return (\r\n  <div>\r\n    <DeviceModal\r\n      deviceTypes = {deviceTypes}\r\n      hide={toggle.edit}\r\n      gateID = {null}\r\n      deviceID = {curID}\r\n      success={() => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n      }}\r\n      toggleModal={() => {\r\n        toggleModal(\"edit\");\r\n      }}\r\n    />\r\n    <Jumbotron className=\"dashboard\">\r\n      <Row>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv success\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Sample\r\n              <h3 className=\"cardHomeNumber\" >\r\n                ~\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv warning\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Sample\r\n              <h3 className=\"cardHomeNumber\" >\r\n              ~\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv info\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Sample\r\n              <h3 className=\"cardHomeNumber\" >\r\n              ~\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv danger\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Disconnected Devices\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#ef5350\"}}>\r\n                {devices.length}\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Jumbotron>\r\n    <div className=\"content\">\r\n    <Row>\r\n    <Col sm={4}>\r\n          <Card style={{height:\"465px\"}}>\r\n          <Typography className=\"cardTitle\" variant=\"h6\" component=\"h2\">\r\n            New Devices\r\n          </Typography>\r\n          <TableContainer component={Paper} className=\"scrollbar-primary\" style={{\"box-shadow\":\"none\"}}>\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead >\r\n                <TableRow>\r\n                  <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                  <TableCell align=\"left\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {newDevices.map((row, index) => (\r\n                  <TableRow key={row.deviceID}>\r\n                  <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                      <IconButton style={{padding:0}}\r\n                      onClick={() => {\r\n                          setCurID(row.deviceID);\r\n                          toggleModal(\"edit\");\r\n                      }}>\r\n                        <BuildIcon\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={8}>\r\n          <Card style={{height:\"465px\"}} >\r\n          <Typography className=\"cardTitle\" variant=\"h6\" component=\"h2\">\r\n             Disconnected Devices\r\n          </Typography>\r\n          <TableContainer component={Paper} className=\"scrollbar-primary\" style={{\"box-shadow\":\"none\"}}>\r\n            <Table stickyHeader aria-label=\"simple table\">\r\n              <TableHead >\r\n                <TableRow>\r\n                  <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                  <TableCell align=\"left\"><b>Name</b></TableCell>\r\n                  <TableCell align=\"left\"><b>Type</b></TableCell>\r\n                  <TableCell align=\"left\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {devices.map((row, index) => (\r\n                  <TableRow key={row.deviceID}>\r\n                  <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                    <TableCell align=\"left\">{row.deviceName}</TableCell>\r\n                    <TableCell align=\"left\">{deviceTypeNames[row.deviceType]===undefined ? row.deviceType : deviceTypeNames[row.deviceType].name}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <IconButton style={{padding:0}}\r\n                      onClick={() => {\r\n                          direct(row.gateID);\r\n                      }}>\r\n                        <OpenInNewIcon\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default { Home };\r\n","import React, { useState, useContext } from \"react\";\r\nimport { store } from \"../store.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport function Login() {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  const { dispatch } = storeContext;\r\n  let history = useHistory();\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n  const reqLogin = (e) => {\r\n    e.preventDefault();\r\n    let { username, password } = state;\r\n    /*\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    };\r\n    \r\n    fetch(server_URL + \"/login\", requestOptions)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n  \r\n      // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      }\r\n  \r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      return(\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/home\"\r\n          }}\r\n        />\r\n      );\r\n    })\r\n    .catch((error) => {\r\n      this.setState({ errorMessage: error.toString() });\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    if (username === \"huajun\" && password === \"huajun\") {\r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      dispatch({\r\n        type: \"setUser\",\r\n        value: username\r\n      });\r\n      history.push(\"/home\");\r\n    } else if (username.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Username cannot be blank\";\r\n    } else if (password.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Password cannot be blank\";\r\n    } else {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Invalid Username or Password\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"maincontainer h-100\">\r\n      <div className=\"container-fluid bg-light h-100\">\r\n        <div className=\"login d-flex align-items-center py-5\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-10 col-sm-6 col-md-5 col-xl-4 mx-auto \">\r\n                <h3 className=\"display-4\">Login</h3>\r\n                <p className=\"text-muted mb-4\">\r\n                  Enter your credentials to login.\r\n                </p>\r\n                <form>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"username\"\r\n                      type=\"username\"\r\n                      placeholder=\"Username\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4\"\r\n                      onChange={handleChange}\r\n                      value={state.username}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\r\n                      onChange={handleChange}\r\n                      value={state.password}\r\n                    />\r\n                  </div>\r\n                  <p id=\"login-error\" className=\"text-danger\"></p>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block text-uppercase mb-2 rounded-pill shadow-sm\"\r\n                    onClick={reqLogin}\r\n                  >\r\n                    Sign in\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Login };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, addProject, delProject, alertService } from '../services/index.js';\r\n\r\nexport function Projects({ match }) {\r\n  let history = useHistory();\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false\r\n  });\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n    setCurState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n  }\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (projectID) => {\r\n    setCurID(projectID);\r\n    toggleModal(\"delete\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectName, location, projectType } = curState;\r\n    let curRows = initialRows;\r\n    console.log(curRows);\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[\"projectName\"].toLowerCase().indexOf(projectName.toLowerCase()) >= 0 &&\r\n          row[\"location\"].toLowerCase().indexOf(location.toLowerCase()) >= 0 &&\r\n          row[\"projectType\"].toLowerCase().indexOf(projectType.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const insert = (e) => {\r\n    addProject()\r\n      .then(async (data) => {\r\n        let ID = data.message.projectID;\r\n        history.push(\"/project/\" + ID);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  const edit = (projectID) => {\r\n    history.push(\"/project/\" + projectID);\r\n  };\r\n\r\n  const del = async (projectID) => {\r\n    delProject(projectID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Project Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this project?\"\r\n      />\r\n      <ConfirmModal\r\n        hide={toggle.add}\r\n        success={() => {\r\n          insert();\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"add\");\r\n        }}\r\n        title=\"Confirm Addition\"\r\n        body=\"Add a new project?\"\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Projects</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectName\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectName}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"location\"\r\n                placeholder=\"Location\"\r\n                onChange={handleChange}\r\n                value={state.location}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectType\"\r\n                placeholder=\"Type\"\r\n                onChange={handleChange}\r\n                value={state.projectType}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Project</TableCell>\r\n                <TableCell align=\"left\">Location</TableCell>\r\n                <TableCell align=\"left\">Type</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.projectName}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.location}</TableCell>\r\n                  <TableCell align=\"left\">{row.projectType}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => edit(row.projectID)}>\r\n                      <PencilSquare\r\n                        data-value={row.projectID}\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => activateModal(row.projectID)}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Projects };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { alertService, getProjectInfo, updateProjectInfo , getObjectTypes} from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function ProjectForm() {\r\n  let { projectID }= useParams();\r\n  const [validated, setValidated] = useState(false);\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    projectType: \"\",\r\n    location: \"\",\r\n    contactNumber: \"\",\r\n    maCompany: \"\",\r\n    equipManu: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectTypes, setProjectTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Project Info!\", error);\r\n      });\r\n      getObjectTypes(\"project\")\r\n      .then(async (data) => {\r\n        setProjectTypes(Object.entries(data.message).map((type)=>({\r\n          id: type[0],\r\n          name: type[1].name\r\n        })));\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Project Types!\", error);\r\n      });\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()) update();\r\n  };\r\n\r\n  const update = () => {\r\n    updateProjectInfo(projectID, state)\r\n      .then(async (data) => {\r\n        alertService.success('Update Successful!');\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Project Info</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project ID\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control type=\"text\" placeholder={projectID} readOnly />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project Name\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              placeholder=\"Name\"\r\n              id=\"projectName\"\r\n              name=\"projectName\"\r\n              value={state.projectName}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Name is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project Type\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              custom\r\n              required\r\n              as=\"select\"\r\n              id=\"projectType\"\r\n              name=\"projectType\"\r\n              value={state.projectType}\r\n              onChange={handleChange}\r\n            >\r\n              <option value={''}>--Select Type--</option>\r\n              {\r\n                projectTypes.map((type)=>(\r\n                  <option value={type.id}>{type.name}</option>\r\n                ))\r\n              }\r\n            </Form.Control>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Type is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Location\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"location\"\r\n              name=\"location\"\r\n              value={state.location}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Location is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Equipment Manufacturer\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"equipManu\"\r\n              name=\"equipManu\"\r\n              value={state.equipManu}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Equipment Manufacturer is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n      </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            MA Company\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"maCompany\"\r\n              name=\"maCompany\"\r\n              value={state.maCompany}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              MA Company is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Contact No.\r\n          </Form.Label>\r\n          <Form.Label\r\n            column\r\n            sm={4}\r\n          >\r\n            <PhoneInput\r\n              inputProps={{\r\n                required: true\r\n              }}\r\n              placeholder=\"+XX-XXXX-XXXX\"\r\n              id=\"contactNumber\"\r\n              name=\"contactNumber\"\r\n              country={\"sg\"}\r\n              value={String(state.contactNumber)}\r\n              onChange={(e)=>{\r\n                setState((prevState) => ({\r\n                  ...prevState,\r\n                  [\"contactNumber\"]: parseInt(e)\r\n                }));\r\n              }}\r\n              isValid={(value, country) => {\r\n                if (value.length === 0) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              }}\r\n            />\r\n          </Form.Label>\r\n        </Form.Group>\r\n\r\n        \r\n        <Form.Group as={Row}>\r\n          <Col sm={8}\r\n           className=\"d-flex justify-content-end\">\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ProjectForm };\r\n","import { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, InputGroup, Breadcrumb } from \"react-bootstrap\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport { alertService, getBusinessInfo, updateBusinessInfo, getProjectInfo } from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function BusinessDetails(props) {\r\n  let {projectID} = useParams();\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    barrierDelay: 5,\r\n    networkWarningDuration: 5,\r\n    instantImgUpload: false,\r\n    vehicleColorDetect: false,\r\n    localImgStore: false\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    /*   \r\n    getBusinessInfo(projectID)\r\n    .then(async (data) => {\r\n      setState(data.message)\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    let res = {\r\n      barrierDelay: 5,\r\n      networkWarningDuration: 5,\r\n      instantImgUpload: false,\r\n      vehicleColorDetect: false,\r\n      localImgStore: false\r\n    };\r\n    setState(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    update();\r\n  };\r\n\r\n  const update = () => {\r\n    /* Pending API for project details update*/\r\n  };\r\n\r\n  function myFormat(num) {\r\n    return num + \" mins\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Business Details</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Breadcrumb>\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      </Breadcrumb>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Barrier Opening Delay\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"barrierDelay\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.barrierDelay}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Duration before issuing network down warning\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"networkWarningDuration\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.networkWarningDuration}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Instant Image Upload to Server\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.instantImgUpload}\r\n              type=\"switch\"\r\n              id=\"instantImgUpload\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Local Storage of images after uploading\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.localImgStore}\r\n              type=\"switch\"\r\n              id=\"localImgStore\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Vehicle Colour Detection\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.vehicleColorDetect}\r\n              type=\"switch\"\r\n              id=\"vehicleColorDetect\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col sm={8}\r\n           className=\"d-flex justify-content-end\">\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { BusinessDetails };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, DeviceModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getDevice, alertService, delDevice, getObjectTypes, getProjectInfo, getGateInfo} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport SignalCellularConnectedNoInternet0BarIcon from '@material-ui/icons/SignalCellularConnectedNoInternet0Bar';\r\n\r\nexport function Devices (){\r\n    let { projectID, gateID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [gateName, setGateName] = useState(\"\");\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(null);\r\n  const [dummy, setDummy] = useState(false);\r\n  const [deviceTypes, setDeviceTypes] = useState([]);\r\n  const [deviceTypeNames, setDeviceTypeNames] = useState([]);\r\n  const reload = () =>{\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    getGateInfo(gateID)\r\n    .then(async (data) => {\r\n      setGateName(data.message.gateName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate Info, there was an error!\", error);\r\n    });\r\n    getDevice(gateID, [\"deviceID\", \"deviceName\", \"deviceType\", \"deviceStatus\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Device, there was an error!\", error);\r\n      });\r\n      getObjectTypes(\"device\")\r\n    .then(async (data) => {\r\n      setDeviceTypeNames(data.message);\r\n      setDeviceTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Device Types!\", error);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (deviceID) => {\r\n    delDevice(deviceID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Device Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this device?\"\r\n      />\r\n      <DeviceModal\r\n        deviceTypes = {deviceTypes}\r\n        hide={toggle.edit}\r\n        deviceID = {curID}\r\n        gateID = {gateID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item href={\"/project/\"+projectID+\"/gate\"}>Gates</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Devices</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"d-flex align-items-center\">\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName} / {gateName}</h5>\r\n      <div style={{\"flex-grow\":\"1\"}}></div>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"center\"><b>Status</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceName}</TableCell>\r\n                  <TableCell align=\"center\">{deviceTypeNames[row.deviceType].name}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceStatus==='online'?\r\n                  <Tooltip title=\"Online\">\r\n                  <SignalCellularAltIcon style={{ color: \"#4caf50\" }}/>\r\n                  </Tooltip>\r\n                  :\r\n                  <Tooltip title=\"Offline\">\r\n                  <SignalCellularConnectedNoInternet0BarIcon style={{ color: \"#f44336\" }}/>\r\n                  </Tooltip>\r\n                  }</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"gold\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Devices };","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu, DoorOpenFill } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, GateModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getGate, alertService, delGate, getObjectTypes, openGate, getProjectInfo, getProjects} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\n\r\nexport function Gates (){\r\n    let { projectID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [gateTypes, setGateTypes] = useState([]);\r\n  const [gateTypeNames, setGateTypeNames] = useState([]);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    getGate(projectID, [\"gateID\", \"gateName\", \"gateType\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate, there was an error!\", error);\r\n    });\r\n    getObjectTypes(\"gate\")\r\n    .then(async (data) => {\r\n      setGateTypeNames(data.message);\r\n      setGateTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Gate Types!\", error);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const openGateFunc = (gateID, gateName) =>{\r\n    openGate(gateID)\r\n    .then(async (data) => {\r\n      alertService.success(\"Opened Gate \"+gateName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Open Gate!\", error);\r\n    });\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const devices = (gateID) => {\r\n    history.push(pathname +\"/\"+ String(gateID));\r\n  };\r\n\r\n  const del = async (gateID) => {\r\n    delGate(gateID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Gate Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this gate?\"\r\n      />\r\n      <GateModal\r\n        gateTypes = {gateTypes}\r\n        hide={toggle.edit}\r\n        gateID = {curID}\r\n        newState = {modal}\r\n        projectID = {projectID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Gates</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"d-flex align-items-center\">\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      <div style={{\"flex-grow\":\"1\"}}></div>\r\n        <Form inline onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    setModal(true);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.gateID}</TableCell>\r\n                  <TableCell align=\"center\">{row.gateName}</TableCell>\r\n                  <TableCell align=\"center\">{gateTypeNames[row.gateType].name}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Devices\">\r\n                    <IconButton \r\n                    style={{padding:\"5px\"}}\r\n                    onClick={() => {\r\n                        devices(row.gateID);\r\n                    }}>\r\n                      <Cpu\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Open Gate\">\r\n                    <IconButton\r\n                    style={{padding:\"5px\"}}\r\n                     onClick={() => {\r\n                        openGateFunc(row.gateID, row.gateName);\r\n                    }}>\r\n                      <DoorOpenFill\r\n                        size={21}\r\n                        color=\"#28a745\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton\r\n                    style={{padding:\"5px\"}}\r\n                     onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        setModal(false);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"gold\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton\r\n                    style={{padding:\"5px\"}}\r\n                     onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Gates };","import React, { useState, useEffect } from \"react\";\r\nimport { Breadcrumb } from \"react-bootstrap\";\r\nimport {Input , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { TablePaginationActions } from \"../../components/index.js\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getProjectInfo, alertService} from '../../services/index.js';\r\n\r\nimport { PencilSquare } from \"react-bootstrap-icons\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport function LedConfig(props) {\r\n  let {projectID} = useParams();\r\n  const [rows, setRows] = useState([]);\r\n  const [curID, setCurID] = useState(null);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    trigger: \"\",\r\n    voiceMsg: \"\",\r\n    textMsg: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    /*getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setInitialRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n    let res = [\r\n        {\r\n            id: 1,\r\n            trigger: \"Trigger 1\",\r\n            voiceMsg: \"Sample 1\",\r\n            textMsg: \"Sample 01\"\r\n        },\r\n        {\r\n            id: 2,\r\n            trigger: \"Trigger 2\",\r\n            voiceMsg: \"Sample 2\",\r\n            textMsg: \"Sample 02\"\r\n        },\r\n        {\r\n            id: 3,\r\n            trigger: \"Trigger 3\",\r\n            voiceMsg: \"Sample 3\",\r\n            textMsg: \"Sample 03\"\r\n        },\r\n        {\r\n            id: 4,\r\n            trigger: \"Trigger 4\",\r\n            voiceMsg: \"Sample 4\",\r\n            textMsg: \"Sample 04\"\r\n        },\r\n        {\r\n            id: 5,\r\n            trigger: \"Trigger 5\",\r\n            voiceMsg: \"Sample 5\",\r\n            textMsg: \"Sample 05\"\r\n        },\r\n        {\r\n            id: 6,\r\n            trigger: \"Trigger 6\",\r\n            voiceMsg: \"Sample 6\",\r\n            textMsg: \"Sample 06\"\r\n        }\r\n    ];\r\n    setRows(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const save = () =>{\r\n    // API\r\n    //reload();\r\n  }\r\n\r\n  const edit = (vals) =>{\r\n    const {id, trigger, voiceMsg, textMsg} = vals;\r\n    setState({\r\n        trigger, \r\n        voiceMsg, \r\n        textMsg});\r\n    setCurID(id);\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setCurID(null);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>LED Configuration</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Breadcrumb>\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      </Breadcrumb>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Trigger</TableCell>\r\n                <TableCell align=\"center\">Voice Message</TableCell>\r\n                <TableCell align=\"center\">Text Message</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.trigger}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"voiceMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.voiceMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.voiceMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"textMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.textMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.textMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"right\"  style={{padding:0}}>\r\n                    {curID === null?\r\n                        (<IconButton onClick={() => edit(row)}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            color=\"royalblue\"\r\n                            />\r\n                        </IconButton>)\r\n                        :(\r\n                        curID === row.id?\r\n                        <div>\r\n                            <IconButton onClick={() => save()}>\r\n                                <SaveIcon\r\n                                size={21}\r\n                                color=\"primary\"\r\n                                />\r\n                            </IconButton>\r\n                            <IconButton onClick={() => setCurID(null)}>\r\n                                <CloseIcon\r\n                                size={21}\r\n                                color=\"error\"\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                        :\r\n                        (<IconButton disabled = {true}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            />\r\n                        </IconButton>)\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { LedConfig };\r\n","import {\r\n  ProjectForm,\r\n  BusinessDetails,\r\n  Devices,\r\n  LedConfig,\r\n  Gates\r\n} from \"./projectSubPages/index.js\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport {Nav, Tab} from \"react-bootstrap\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nexport function EditProject(props) {\r\n  let history = useHistory();\r\n  let { path, url } = useRouteMatch();\r\n  let {pathname} = useLocation();\r\n  let page = pathname.split('/')[3];\r\n  const direct = (path) =>{\r\n    history.push(url+path);\r\n  }\r\n  return (\r\n    <div className=\"tabModal\" style={{background:\"transparent\"}}>\r\n      <Tab.Container id=\"left-tabs-example\" >\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/info\")}} active = {page===\"info\"}>Infomation</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/business\")}} active = {page===\"business\"}>Business</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/gate\")}} active = {page===\"gate\"}>Gates</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/ledconfig\")}} active = {page===\"ledconfig\"}>LED Config</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n          <Switch>\r\n            <Route exact path={`${path}/info`}>\r\n              <ProjectForm />\r\n            </Route>\r\n            <Route exact path={`${path}/business`}>\r\n              <BusinessDetails />\r\n            </Route>\r\n            <Route exact path={`${path}/gate/:gateID`}>\r\n              <Devices />\r\n            </Route>\r\n            <Route exact path={`${path}/gate`}>\r\n              <Gates />\r\n            </Route>\r\n            <Route exact path={`${path}/ledconfig`}>\r\n              <LedConfig />\r\n            </Route>\r\n            <Route path={path}>\r\n              <Redirect to={`${url}/info`} />\r\n            </Route>\r\n          </Switch>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { EditProject };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Modal } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, \r\n  getSpecialPlate,\r\n  delSpecialPlate,\r\n  updateSpecialPlate,\r\n  addSpecialPlate } from '../services/index.js';\r\n\r\nexport function PlateRegex({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false,\r\n    edit: false\r\n  });\r\n  const [state, setState] = useState({\r\n    projectID: NaN,\r\n    actualPlate: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectID: NaN,\r\n    actualPlate: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectID: NaN,\r\n      actualPlate: \"\"\r\n    });\r\n    setCurState({\r\n      projectID: NaN,\r\n      actualPlate: \"\"\r\n    });\r\n  }\r\n  const [val, setVal] = useState({\r\n    projectID: NaN,\r\n    matchPlate: \"\",\r\n    actualPlate: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const reload = () =>{\r\n    getSpecialPlate([\"projectID\", \"matchPlate\", \"actualPlate\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  const func = async (val) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element.projectID] = element.projectName;\r\n    });\r\n    return await temp;\r\n  };\r\n  useEffect(() => {\r\n    getProjects([\"projectID\", \"projectName\"])\r\n    .then(async (data) => {\r\n      setProjects(data.content);\r\n      func(data.content).then(async(list)=>{\r\n        setProjectNames(await list);\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },projectNames);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleChangeVal = (e) =>{\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setVal((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (values) => {\r\n    let {projectID, matchPlate, actualPlate} = values;\r\n    setValidated(false);\r\n    setVal({\r\n        projectID,\r\n        matchPlate,\r\n        actualPlate\r\n      });\r\n    toggleModal(\"edit\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectID, actualPlate } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          (Number.isNaN(projectID) || row[\"projectID\"] === projectID) &&\r\n          String(row[\"actualPlate\"]).toLowerCase().indexOf(actualPlate.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const insert = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n      addSpecialPlate(val)\r\n      .then(async (data) => {\r\n        reload();\r\n        toggleModal(\"add\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const edit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n        updateSpecialPlate(val)\r\n        .then(async (data) => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const del = (id) => {\r\n    delSpecialPlate(id)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this regex?\"\r\n      />\r\n      <Modal show={toggle.add} onHide={()=>toggleModal(\"add\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={insert}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={5}>\r\n            Project Name\r\n          </Form.Label>\r\n          <Col sm={6}>\r\n              <Form.Control\r\n                custom\r\n                required\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChangeVal}\r\n                value={val.projectID}\r\n              >\r\n                  <option value={null}>--Select a Project--</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Project Name is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n        </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"add\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    <Modal show={toggle.edit} onHide={()=>toggleModal(\"edit\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={edit}>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"edit\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Plate Regex</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectID}\r\n              >\r\n                  <option value={null}>All Projects</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"actualPlate\"\r\n                placeholder=\"Actual Plate\"\r\n                onChange={handleChange}\r\n                value={state.actualPlate}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                setVal({\r\n                    projectID: \"\",\r\n                    matchPlate: \"\",\r\n                    actualPlate: \"\"\r\n                    });\r\n                  setValidated(false);\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Project</TableCell>\r\n                <TableCell align=\"center\">Regex of Plate</TableCell>\r\n                <TableCell align=\"center\">Actual Plate</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.matchPlate}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {projectNames[row.projectID]}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.matchPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.actualPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {activateModal(row)}}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.matchPlate);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { PlateRegex };\r\n","export default __webpack_public_path__ + \"static/media/closeGate.4cf57ce2.png\";","export default __webpack_public_path__ + \"static/media/openGate.46e4da23.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { ImageModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getMovementLogs } from '../services/index.js';\r\nimport closeGate from '../assets/closeGate.png';\r\nimport openGate from '../assets/openGate.jpg';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nexport function Records({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const  queryFields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\"\r\n  ];\r\n  const fieldPlaceholder = {\r\n    projectName: \"Project Name\",\r\n    vehicleType: \"Vehicle Type\",\r\n    isOpened: \"Is Opened\",\r\n    gateName: \"Gate Name\",\r\n    gateType: \"Gate Type\",\r\n    originalPlate: \"Original Plate\",\r\n    confirmedPlate: \"Actual Plate\",\r\n    detectionTime: \"Detection Time\",\r\n    confirmedTime: \"Confirmed Time\",\r\n    image1: \"Image 1\",\r\n    image2: \"Image 2\",\r\n    image3: \"Image 3\",\r\n    plateImage: \"Plate Image\"\r\n  };\r\n  const fields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"isOpened\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"detectionTime\",\r\n    \"confirmedTime\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\",\r\n    \"image1\",\r\n    \"image2\",\r\n    \"image3\",\r\n    \"plateImage\"\r\n  ];\r\n  const fieldLength = {\r\n    projectName: \"120px\",\r\n    vehicleType: \"120px\",\r\n    isOpened: \"120px\",\r\n    gateName: \"120px\",\r\n    gateType: \"120px\",\r\n    originalPlate: \"120px\",\r\n    confirmedPlate: \"120px\",\r\n    detectionTime: \"230px\",\r\n    confirmedTime: \"230px\",\r\n    image1: \"90px\",\r\n    image2: \"90px\",\r\n    image3: \"90px\",\r\n    plateImage: \"90px\"\r\n  };\r\n  const fieldHeight = {\r\n    image1: \"50px\",\r\n    image2: \"50px\",\r\n    image3: \"50px\",\r\n    plateImage: \"50px\",\r\n    isOpened: \"30px\"\r\n  }\r\n  const [state, setState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\",\r\n    startTime: null,\r\n    endTime: null\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\",\r\n    startTime: null,\r\n    endTime: null\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const reload = () =>{\r\n    getMovementLogs(fields.concat(\"logID\"), [])\r\n      .then(async (data) => {\r\n        console.log(data.content.slice(0,6));\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    if(id===\"curField\"){\r\n      setState((prevState) => ({\r\n        curField: value,\r\n        val: \"\"\r\n      }));\r\n    }else{\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { curField, val } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[curField].toLowerCase().indexOf(val.toLowerCase()) >= 0 \r\n      ).sort(\r\n        (a,b)=> (a.detectionTime < b.detectionTime) ? 1 : -1\r\n      )\r\n    );\r\n  };\r\n  \r\n  const reset = async (e) =>{\r\n    setState({\r\n      curField: \"projectName\",\r\n      val: \"\",\r\n      startTime: null,\r\n      endTime: null\r\n    });\r\n    setCurState({\r\n      curField: \"projectName\",\r\n      val: \"\",\r\n      startTime: null,\r\n      endTime: null\r\n    });\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ImageModal\r\n      src = {imageSrc}\r\n      toggleModal={()=>{\r\n        setImageSrc(null);\r\n      }}\r\n      />\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Entry Exit Records</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"curField\"\r\n                onChange={handleChange}\r\n                value={state.curField}\r\n              >\r\n                  {queryFields.map((queryField)=>(\r\n                      <option value={queryField}>{fieldPlaceholder[queryField]}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"val\"\r\n                placeholder={fieldPlaceholder[state.curField]}\r\n                onChange={handleChange}\r\n                value={state.val}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\" className=\"d-flex\">\r\n            <Form.Label>From:</Form.Label>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n            <DatePicker\r\n            isClearable\r\n              className=\"dateRecord\"\r\n              selected={state.startTime}\r\n              maxDate={state.endTime}\r\n              popperClassName=\"dateTimePopper\"\r\n              className=\"form-control\"\r\n              placeholderText=\"YYYY-MM-DD HH:MM:SS\"\r\n              onChange={date => handleChange({\r\n                target:{\r\n                  value:date,\r\n                  id: \"startTime\"\r\n                }\r\n              })}\r\n              showTimeSelect\r\n              dateFormat=\"yyyy-MM-dd\"\r\n              timeFormat=\"HH:mm:ss\"\r\n              timeIntervals={15}\r\n              timeCaption=\"time\"\r\n              dateFormat=\"yyyy-MM-dd HH:mm:ss\"\r\n              title=\"Start Time\"\r\n              clearButtonClassName=\"dateTimeClear\"\r\n            />\r\n            </Col>\r\n            <Col sm=\"auto\" className=\"d-flex\">\r\n            <Form.Label>To:</Form.Label>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n            <DatePicker\r\n            isClearable\r\n              className=\"dateRecord\"\r\n              selected={state.endTime}\r\n              minDate={state.startTime}\r\n              popperClassName=\"dateTimePopper\"\r\n              className=\"form-control\"\r\n              placeholderText=\"YYYY-MM-DD HH:MM:SS\"\r\n              onChange={date => handleChange({\r\n                target:{\r\n                  value:date,\r\n                  id: \"endTime\"\r\n                }\r\n              })}\r\n              showTimeSelect\r\n              dateFormat=\"yyyy-MM-dd\"\r\n              timeFormat=\"HH:mm:ss\"\r\n              timeIntervals={15}\r\n              timeCaption=\"time\"\r\n              dateFormat=\"yyyy-MM-dd HH:mm:ss\"\r\n              title=\"Start Time\"\r\n              clearButtonClassName=\"dateTimeClear\"\r\n            />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper} className=\"overflowTable\">\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {fields.map((field) =>(\r\n                  <TableCell align=\"center\" style={{\"min-width\":fieldLength[field]}}>{fieldPlaceholder[field]}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.logID}>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.vehicleType}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.isOpened === true?\r\n                    <img style={{\"height\":fieldHeight.isOpened}} src={openGate} className=\"success-transform\"/>:\r\n                    <img style={{\"height\":fieldHeight.isOpened}} src={closeGate} className=\"danger-transform\"/>}\r\n            </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.gateName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.gateType}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.detectionTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.confirmedTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.originalPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.confirmedPlate===null?null:\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.confirmedPlate}</u>\r\n                      </div>\r\n                    </div>}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image1)} \r\n                    style={{\"height\":fieldHeight.image1}} \r\n                    src={row.image1}/>\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image2)} \r\n                    style={{\"height\":fieldHeight.image2}} \r\n                    src={row.image2} />\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image3)} \r\n                    style={{\"height\":fieldHeight.image3}} \r\n                    src={row.image3} />\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.plateImage)} \r\n                    style={{\"height\":fieldHeight.plateImage}} \r\n                    src={row.plateImage} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TableRow className=\"d-flex justify-content-center\">\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 50]}\r\n              colSpan={13}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n        </TableRow>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Records };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport function ParkRecords({ match }) {\r\n  return (<div className=\"d-flex justify-content-center\"><h1>Pending API</h1></div>);\r\n}\r\n\r\nexport default { ParkRecords };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, RulesModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getGate, alertService, delGate, getProjects, getAccessRule} from '../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\n\r\nexport function ParkingRules (){\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [project,setProject] = useState(null);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const [gateNames, setGateNames] = useState({});\r\n  const [projects,setProjects] = useState([]);\r\n  const func = async (val, inputField, outputField) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element[inputField]] = element[outputField];\r\n    });\r\n    return await temp;\r\n  };\r\n  const reloadProjects = () =>{\r\n    getProjects([\"projectID\", \"projectName\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setProjects(data.content);\r\n        func(data.content, \"projectID\", \"projectName\").then(async(list)=>{\r\n          setProjectNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reloadProjects();\r\n  }, [dummy]);\r\n\r\n  const reload = () =>{\r\n    getAccessRule(project, [\"accessRuleID\", \"accessRuleName\", \"isChargeable\", \"gates\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Get Gate, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  const reloadGates = () =>{\r\n    getGate(project,[\"gateID\",\"gateName\"])\r\n      .then(async (data) => {\r\n        func(data.content, \"gateID\", \"gateName\").then(async(list)=>{\r\n          setGateNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n    if(project!==null)reloadGates();\r\n  },[project]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (accessRuleID) => {\r\n    /*\r\n    delGate(gateID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Rule Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Rule, There was an error!\", error);\r\n    });*/\r\n  };\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this rule?\"\r\n      />\r\n      {toggle.edit?\r\n      <RulesModal\r\n        hide={toggle.edit}\r\n        projectID = {project}\r\n        projectName = {projectNames[project]}\r\n        accessRuleID = {curID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />:null}\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Access Rules</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                onChange={(e)=>{\r\n                  setProject(e.target.value);\r\n                }}\r\n                value={project}\r\n              >\r\n                <option value=\"\">--Select a Project--</option>\r\n                  {projects.map((val)=>(\r\n                      <option value={val.projectID}>{val.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>Project</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Gates</b></TableCell>\r\n                <TableCell align=\"center\"><b>Chargeable</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{projectNames[project]}</TableCell>\r\n                  <TableCell align=\"center\">{row.accessRuleName}</TableCell>\r\n                  <TableCell align=\"center\">{(row.gates).map((gate)=>(\r\n                    <div>{gateNames[gate]} <br/></div> \r\n                  ))}</TableCell>\r\n                  <TableCell align=\"center\">{row.isChargeable}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.accessRuleID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"gold\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.accessRuleID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ParkingRules };","import React, { useContext } from \"react\";\nimport { store } from \"./store.js\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport \"./styles.css\";\nimport \"./assets/scrollbar.css\";\nimport { NavBar, AlertGroup } from \"./components/index.js\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport { Home, Login, Projects, EditProject, PlateRegex, Records, ParkRecords, ParkingRules } from \"./pages/index.js\";\n\nclass DebugRouter extends Router {\n  constructor(props) {\n    super(props);\n    console.log(\"initial history is: \", JSON.stringify(this.history, null, 2));\n    this.history.listen((location, action) => {\n      console.log(\n        `The current URL is ${location.pathname}${location.search}${location.hash}`\n      );\n      console.log(\n        `The last navigation action was ${action}`,\n        JSON.stringify(this.history, null, 2)\n      );\n    });\n  }\n}\n\nexport function App() {\n  return (\n    // <DebugRouter>\n    <Router>\n      <Switch>\n        <PrivateRoute path=\"/home\">\n          <Home />\n        </PrivateRoute>\n        <PrivateRoute path=\"/project/:projectID\">\n          <EditProject />\n        </PrivateRoute>\n        <PrivateRoute path=\"/project\">\n          <Projects />\n        </PrivateRoute>\n        <PrivateRoute path=\"/regex\">\n          <PlateRegex />\n        </PrivateRoute>\n        <PrivateRoute path=\"/records\">\n          <Records />\n        </PrivateRoute>\n        <PrivateRoute path=\"/parking\">\n          <ParkRecords />\n        </PrivateRoute>\n        <PrivateRoute path=\"/accessRules\">\n          <ParkingRules />\n        </PrivateRoute>\n        <PublicRoute path=\"/\">\n          <Login />\n        </PublicRoute>\n      </Switch>\n    </Router>\n    // </DebugRouter>\n  );\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  let auth = globalState.auth;\n  let toggled = globalState.toggled;\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth ? (\n          <div className=\"h-100\">\n              <AlertGroup />\n            <NavBar />\n            <div id=\"content-body\" className={toggled?\"content-body-collapsed\":\"content-body-expand\"}>\n              {React.cloneElement(children, { params: props.match.params })}\n            </div>\n          </div>\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ children, ...rest }) {\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  let auth = globalState.auth;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          <Redirect\n            to={{\n              pathname: \"/home\",\n              state: { from: location }\n            }}\n          />\n        ) : \n        <AlertGroup />(\n          children\n        )\n      }\n    />\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { StateProvider } from \"./store.js\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StateProvider>\n    <StrictMode>\n      <App />\n    </StrictMode>\n  </StateProvider>,\n  rootElement\n);\n"],"sourceRoot":""}