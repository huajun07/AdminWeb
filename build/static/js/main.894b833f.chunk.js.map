{"version":3,"sources":["store.js","services/alertService.js","services/api.js","components/NavBar.js","components/ConfirmModal.js","components/QueryModal.js","components/DeviceModal.js","components/GateModal.js","components/AlertGroup.js","components/TablePaginationActions.js","components/RulesModal.js","components/ImageModal.js","components/WhitelistModal.js","components/ExportWhitelistModal.js","components/ExportRecordModal.js","pages/Home.js","pages/Login.js","pages/Projects.js","pages/projectSubPages/ProjectForm.js","pages/projectSubPages/BusinessDetails.js","pages/projectSubPages/Devices.js","pages/projectSubPages/Gates.js","pages/projectSubPages/LedConfig.js","pages/EditProject.js","pages/PlateRegex.js","pages/Records.js","pages/ParkRecords.js","pages/ParkingRules.js","pages/Whitelist.js","App.js","index.js"],"names":["initialState","auth","user","toggled","store","createContext","Provider","StateProvider","children","useReducer","state","action","type","value","Error","dispatch","alertSubject","Subject","defaultId","alertService","onAlert","id","asObservable","pipe","filter","x","success","message","options","alert","alertType","error","info","warn","clear","next","server_URL","process","returnFunc","response","a","json","data","ok","content","status","Promise","reject","getProjects","columns","requestOptions","method","headers","body","JSON","stringify","authID","serviceName","objName","fetch","then","getMovementLogs","filters","getAccessRule","projectID","getGate","ID","getProjectInfo","delProject","getGateInfo","gateID","delGate","delDevice","deviceID","getObjectTypes","obj","getWhitelistTags","delAccessRule","accessRuleID","getWhitelistEntry","delWhitelistEntryInfo","recordID","NavBar","storeContext","useContext","globalState","history","useHistory","direct","path","console","log","push","className","collapsed","width","iconShape","style","icon","fontSize","onClick","title","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Item","IconButton","restartServer","time","setTimeout","window","location","reload","catch","Text","ConfirmModal","props","toggleModal","hide","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","DeviceModal","deviceTypes","useState","validated","setValidated","setState","dummy","projects","setProjects","curProject","setCurProject","gates","setGates","loading","setLoading","useEffect","deviceName","deviceType","deviceCarpark","manufacturer","manufacturerCode","direction","isPrimaryDevice","isGateControl","getDeviceInfo","handleChange","target","e","filler","e2","undefined","includes","boolean","checked","prevState","update","tempState","modifyParams","updateDeviceInfo","create","values","newDeviceReq","createDevice","Spinner","animation","role","Form","noValidate","onSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","Group","as","Row","Label","column","sm","align","Col","Control","required","placeholder","name","onChange","Feedback","readOnly","custom","map","project","projectName","disabled","gate","gateName","Check","GateModal","newState","gateTypes","whiteListTags","setWhiteListTags","newInitialState","gateType","isChargeable","ledOnTime","ledOffTime","allowedTypes","whitelistTags","tag","label","updateGateInfo","newGateReq","createGate","showSeconds","input","CheckPicker","sticky","searchable","defaultValue","AlertGroup","alerts","this","subscription","subscribe","removeAlert","unsubscribe","length","idx","Alert","dismissible","onClose","React","Component","TablePaginationActions","count","page","rowsPerPage","onChangePage","flexShrink","right","event","aria-label","Math","ceil","max","RulesModal","curGates","setCurGates","initialGates","setInitialGates","func","val","temp","forEach","element","accessRuleName","getAccessRuleInfo","Object","keys","String","list","updateAccessRuleInfo","parseInt","createAccessRule","margin","size","ImageModal","src","centered","pad2","n","dateToString","date","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","WhitelistModal","accessRules","setWhitelistTags","plates","setPlates","reloadPlate","getPlates","plate","plateNumber","startDateTime","endDateTime","getWhitelistEntryInfo","updateWhitelistEntryInfo","createWhitelistEntry","isValid","isInvalid","rule","whitelistTag","DatePicker","str1","str2","format","ranges","Date","exportToCSV","apiData","fileName","ws","XLSX","aoa_to_sheet","sheet_add_json","skipHeader","origin","wch","wb","book_new","book_append_sheet","excelBuffer","bookType","Blob","FileSaver","ExportWhitelistModal","projectNames","setProject","setAccessRules","row","entry","accessRule","ExportRecordModal","startTime","endTime","timeState","setTimeState","fields","handleTimeChange","InputGroup","Addon","block","appearance","detectionTime","fetchData","Home","devices","setDevices","newDevices","setNewDevices","setDeviceTypes","deviceTypeNames","setDeviceTypeNames","curID","setCurID","edit","delete","toggle","setToggle","getAllDevice","device","deviceStatus","getNewDevices","entries","modal","prevVal","del","Helmet","charSet","Jumbotron","Card","color","height","Typography","component","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","index","deviceIP","padding","colSpan","stickyHeader","Login","username","password","document","getElementById","innerText","Projects","match","initialRows","setInitialRows","rows","setRows","add","projectType","curState","setCurState","setPage","curRows","toLowerCase","indexOf","insert","contactNumber","maCompany","equipManu","addProject","setRowsPerPage","emptyRows","min","Breadcrumb","href","active","slice","scope","data-value","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","ActionsComponent","ProjectForm","useParams","projectTypes","setProjectTypes","updateProjectInfo","country","BusinessDetails","setProjectName","barrierDelay","networkWarningDuration","instantImgUpload","vehicleColorDetect","localImgStore","myFormat","num","strict","Devices","useLocation","pathname","setGateName","getDevice","inline","Tooltip","Gates","setGateTypes","gateTypeNames","setGateTypeNames","setModal","openGateFunc","openGate","LedConfig","trigger","voiceMsg","textMsg","Input","vals","EditProject","useRouteMatch","url","split","background","Tab","Container","xs","exact","to","PlateRegex","NaN","actualPlate","matchPlate","setVal","setProjectNames","getSpecialPlate","handleChangeVal","Number","isNaN","delSpecialPlate","addSpecialPlate","updateSpecialPlate","activateModal","Records","imageSrc","setImageSrc","loadImage","setLoadImage","queryFields","fieldPlaceholder","vehicleType","isOpened","originalPlate","confirmedPlate","confirmedTime","image1","plateImage","fieldLength","fieldHeight","curField","curField2","val2","curTimeState","setCurTimeState","concat","sort","b","reset","addImages","logID","queryField","field","ParkRecords","ParkingRules","gateNames","setGateNames","inputField","outputField","Whitelist","export","accessRuleVals","setAccessRuleVals","timeVar","setTimeVar","Router","PrivateRoute","rest","render","cloneElement","params","from","PublicRoute","App","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.894b833f.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  auth: true,\r\n  user: \"admin\",\r\n  toggled: false\r\n};\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"setAuth\":\r\n        return {\r\n          ...state,\r\n          auth: action.value\r\n        };\r\n      case \"setUser\":\r\n        return {\r\n          ...state,\r\n          user: action.value\r\n        };\r\n      case \"setToggled\":\r\n        return {\r\n          ...state,\r\n          toggled: !state.toggled\r\n        };\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { store, StateProvider };\r\n","import { Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nconst alertSubject = new Subject();\r\nconst defaultId = 'default-alert';\r\n\r\nexport const alertService = {\r\n    onAlert,\r\n    success,\r\n    error,\r\n    info,\r\n    warn,\r\n    alert,\r\n    clear\r\n};\r\n\r\nexport const alertType = {\r\n    success: 'success',\r\n    error: 'danger',\r\n    info: 'info',\r\n    warning: 'warning'\r\n}\r\n\r\n// enable subscribing to alerts observable\r\nfunction onAlert(id = defaultId) {\r\n    return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\r\n}\r\n\r\n// convenience methods\r\nfunction success(message, options) {\r\n    alert({ ...options, type: alertType.success, message });\r\n}\r\n\r\nfunction error(message, options) {\r\n    alert({ ...options, type: alertType.error, message });\r\n}\r\n\r\nfunction info(message, options) {\r\n    alert({ ...options, type: alertType.info, message });\r\n}\r\n\r\nfunction warn(message, options) {\r\n    alert({ ...options, type: alertType.warning, message });\r\n}\r\n\r\n// core alert method\r\nfunction alert(alert) {\r\n    alert.id = alert.id || defaultId;\r\n    alertSubject.next(alert);\r\n}\r\n\r\n// clear alerts\r\nfunction clear(id = defaultId) {\r\n    alertSubject.next({ id });\r\n}","import { alertService } from './index.js';\r\n\r\nconst server_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst returnFunc = async (response) => {\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.content) || response.status;\r\n        return Promise.reject(error);\r\n    }\r\n    return data;\r\n}\r\n\r\nconst getProjects = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"project\",\r\n            columns\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getMovementLogs = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"movementLog\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getSpecialPlate = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"specialPlate\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAccessRule = (projectID, columns) =>{\r\n    let filters = {};\r\n    if(projectID!==null)filters = {\r\n        projectID\r\n    };\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"accessRule\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createSpecialPlate\",\r\n          content: state\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delSpecialPlate = (matchPlate) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteSpecialPlate\",\r\n            content: {\r\n                matchPlate\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifySpecialPlate\",\r\n            content: {\r\n            matchPlate: state.matchPlate,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addProject = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createProject\",\r\n          content: {\r\n            projectName: \"\",\r\n            projectType: \"\",\r\n            location: \"\",\r\n            contactNumber: \"\",\r\n            maCompany: \"\",\r\n            equipManu: \"\"\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGate = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getTable\",\r\n            content: {\r\n            objName: \"gate\",\r\n            columns,\r\n            filters:{\r\n                projectID: ID\r\n            }\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDevice = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"device\",\r\n            columns,\r\n            filters:{\r\n              gateID: ID\r\n            }\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAllDevice = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"device\",\r\n            columns\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createGate = (projectID,values) =>{\r\n    const newGateReq = {\r\n        ...values,\r\n        projectID\r\n    };\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createGate\",\r\n            content: newGateReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createDevice = (gateID, values) =>{\r\n    const newDeviceReq = {\r\n        ...values,\r\n        gateID\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createDevice\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getProjectInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getProject\",\r\n            content: {\r\n            projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delProject = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteProject\",\r\n            content: {\r\n                projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateProjectInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyProject\",\r\n            content: {\r\n            projectID: ID,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getBusinessInfo = (ID) =>{\r\n    //Pending Function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateBusinessInfo = (ID, state) =>{\r\n    //Pending function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGateInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delGate = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateGateInfo = (ID, state) =>{\r\n    console.log(state);\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyGate\",\r\n            content: {\r\n                gateID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDeviceInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delDevice = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateDeviceInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyDevice\",\r\n            content: {\r\n                deviceID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createAccessRule = (values) =>{\r\n    const newDeviceReq = {\r\n        ...values\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createAccessRule\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAccessRuleInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getAccessRule\",\r\n          content: {\r\n            accessRuleID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateAccessRuleInfo = (ID, state) =>{\r\n    console.log(state);\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyAccessRule\",\r\n            content: {\r\n                accessRuleID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getObjectTypes = (obj) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getObjectTypes\",\r\n            content: {\r\n                objName: obj\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getWhitelistTags = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getWhitelistTags\"\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst openGate = (gateID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"openGate\",\r\n            content:{\r\n                gateID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getNewDevices = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getNewDevice\"\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delAccessRule = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteAccessRule\",\r\n          content: {\r\n              accessRuleID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getWhitelistEntry = (columns,filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"dbWhitelist\",\r\n            columns\r\n          },\r\n          filters\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getWhitelistEntryInfo = (recordID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getWhitelistEntry\",\r\n          content: {\r\n            recordID\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateWhitelistEntryInfo = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"editWhitelistEntry\",\r\n            content: state\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delWhitelistEntryInfo = (recordID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteWhitelistEntry\",\r\n          content: {\r\n            recordID\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createWhitelistEntry = (values) =>{\r\n    const newDeviceReq = {\r\n        ...values\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"editWhitelistEntry\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getPlates = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"plate\",\r\n            columns\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst restartServer = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"restartServer\"\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nexport {\r\n    getGate,\r\n    getDevice,\r\n    createGate,\r\n    createDevice,\r\n    getProjectInfo,\r\n    updateProjectInfo,\r\n    getBusinessInfo,\r\n    updateBusinessInfo,\r\n    getGateInfo,\r\n    updateGateInfo,\r\n    getDeviceInfo,\r\n    updateDeviceInfo,\r\n    getProjects,\r\n    addProject,\r\n    delProject,\r\n    delGate,\r\n    delDevice,\r\n    getMovementLogs,\r\n    getSpecialPlate,\r\n    delSpecialPlate,\r\n    updateSpecialPlate,\r\n    addSpecialPlate,\r\n    getAccessRule,\r\n    createAccessRule,\r\n    getAccessRuleInfo,\r\n    updateAccessRuleInfo,\r\n    getObjectTypes,\r\n    getWhitelistTags,\r\n    openGate,\r\n    getAllDevice,\r\n    getNewDevices,\r\n    delAccessRule,\r\n    getWhitelistEntry,\r\n    getWhitelistEntryInfo,\r\n    updateWhitelistEntryInfo,\r\n    delWhitelistEntryInfo,\r\n    createWhitelistEntry,\r\n    getPlates,\r\n    restartServer\r\n};","import {\r\n  SidebarContent,\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SubMenu\r\n} from \"react-pro-sidebar\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport { List } from \"react-bootstrap-icons\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { store } from \"../store.js\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalParkingIcon from '@material-ui/icons/LocalParking';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport CachedSharpIcon from '@material-ui/icons/CachedSharp';\r\nimport {IconButton} from '@material-ui/core';\r\nimport {restartServer, alertService} from '../services/index.js';\r\n\r\nexport function NavBar() {\r\n  const storeContext = useContext(store);\r\n  const { dispatch } = storeContext;\r\n  const globalState = storeContext.state;\r\n  const {toggled, user}  = globalState;\r\n  let history = useHistory();\r\n  const logout = () => {\r\n    dispatch({\r\n      type: \"setAuth\",\r\n      value: false\r\n    });\r\n    dispatch({\r\n      type: \"setUser\",\r\n      value: \"\"\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n  const direct = (path) => {\r\n    console.log(\"clicked\", path);\r\n    history.push(path);\r\n  };\r\n  const toggleSideBar = () => {\r\n    dispatch({\r\n      type: \"setToggled\"\r\n    });\r\n  };\r\n  const restart = () =>{\r\n    restartServer()\r\n    .then(async (data) => {\r\n      alertService.success(\"Restarting Server...\",{time:5000});\r\n      setTimeout(()=>{\r\n        refreshPage();\r\n      }, 5000);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  function refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-100 fixed-top clickThrough\">\r\n      <ProSidebar\r\n        className=\"clickAble navbar-default navbar-static-top sideBar\"\r\n        collapsed={toggled}\r\n        width=\"250px\"\r\n        //collapsedWidth=\"px\"\r\n      >\r\n        <SidebarContent>\r\n          <Menu iconShape=\"circle\">\r\n            <MenuItem \r\n              style={{\"background\":\"#2c3b41\",\"height\":\"60px\", \"pointer-events\":\"none\"}}\r\n              className=\"d-flex justify-content-center align-items-center\">\r\n              <div style={{\"padding-top\":\"10px\", \"color\":\"white\"}}>\r\n                <h5>Admin</h5>\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem \r\n              icon={<AccountCircleIcon fontSize='large'/>}\r\n              style={{\"pointer-events\":\"none\", \"border-bottom\":\"1px solid gray\"}}>\r\n              <div style={{ \"color\":\"white\"}}>\r\n                Welcome, {user}\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<HomeIcon onClick={()=>direct(\"/home\")}/>}>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<InfoIcon onClick={()=>direct(\"/project\")} />}>\r\n              <div onClick={()=>direct(\"/project\")}>\r\n                Project\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<CodeIcon onClick={()=>direct(\"/regex\")} />}>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<StorageIcon onClick={()=>direct(\"/records\")} />}>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n                Exit/Entry Records\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<LocalParkingIcon onClick={()=>direct(\"/parking\")} />}>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </MenuItem>\r\n            <SubMenu title=\"Access\" icon={<PaymentIcon/>}>\r\n              <MenuItem  onClick={()=>direct(\"/accessRules\")} >Access Rules</MenuItem>\r\n              <MenuItem onClick={()=>direct(\"/whitelist\")}>Whitelist Entries</MenuItem>\r\n            </SubMenu>\r\n          </Menu>\r\n        </SidebarContent>\r\n      </ProSidebar>\r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" className={\"clickAble navBar\"+(toggled?\" navBar-collapsed\":\" navBar-expand\")}>\r\n        <Navbar.Brand \r\n        className=\"sideBar\" \r\n        onClick={toggleSideBar}>\r\n          <List />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"nav-dropdown\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto nav-dropdown\">\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/project\")}>\r\n                Project\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n              Exit/Entry Records\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </Nav.Link>\r\n            <NavDropdown title=\"Access\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item onClick={()=>direct(\"/accessRules\")}>\r\n                Access Rules\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item onClick={()=>direct(\"/whitelist\")}>\r\n                Whitelist Entries\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n        <IconButton onClick={restart}>\r\n          <CachedSharpIcon/>\r\n        </IconButton>\r\n          <Navbar.Text>\r\n            <Nav.Link onClick={logout}>Signout</Nav.Link>\r\n          </Navbar.Text>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { NavBar };\r\n","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nexport function ConfirmModal(props) {\r\n  let toggleModal = props.toggleModal;\r\n  let success = props.success;\r\n  let hide = props.hide;\r\n  let body = props.body;\r\n  let title = props.title;\r\n  return (\r\n    <Modal show={hide} onHide={toggleModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{body}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={toggleModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={()=>{\r\n          success();\r\n        }}>\r\n          Confirm\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { ConfirmModal};\r\n","import { Button, Modal, Form } from \"react-bootstrap\";\r\nimport {useState} from 'react';\r\n\r\nexport function QueryModal(props) {\r\n    let toggleModal = props.toggleModal;\r\n    let success = props.success;\r\n    let hide = props.hide;\r\n    let body = props.body;\r\n    let title = props.title;\r\n    const [value,setValue] = useState(\"\");\r\n    const handleChange = (e) =>{\r\n      setValue(e.target.value);\r\n    }\r\n    const exit = () =>{\r\n      setValue(\"\");\r\n      toggleModal();\r\n    }\r\n    return (\r\n      <Modal show={hide} onHide={exit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Label>{body}</Form.Label>\r\n            <Form.Control \r\n            value={value}\r\n            onChange={handleChange}\r\n            />\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={exit}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>{\r\n              success(value);\r\n              exit();\r\n              }}>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default {QueryModal};","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, createDevice, getDeviceInfo, updateDeviceInfo, getGate, getProjects } from '../services/index.js';\r\n\r\nexport function DeviceModal(props) {\r\n    let {hide, gateID, toggleModal, success, deviceID, deviceTypes } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [projects, setProjects] = useState([]);\r\n    const [curProject, setCurProject] = useState(\"\");\r\n    const [gates, setGates] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    if(deviceID===null){\r\n      setState({\r\n        gateID,\r\n        deviceID: \"\",\r\n        deviceName: \"\",\r\n        deviceType: \"\",\r\n        deviceCarpark: \"\",\r\n        manufacturer: \"\",\r\n        manufacturerCode: \"\",\r\n        direction: \"\",\r\n        isPrimaryDevice: false,\r\n        isGateControl: false\r\n      });\r\n    }else{\r\n      setLoading(true);\r\n      getDeviceInfo(deviceID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Device, There was an error!\", error);\r\n      });\r\n      if(gateID===null){\r\n        handleChange({\r\n          target:{\r\n            id: \"gateID\",\r\n            value: \"\"\r\n          }\r\n        });\r\n        getProjects([\"projectID\",\"projectName\"])\r\n        .then(async (data) => {\r\n          setCurProject(\"\");\r\n          setProjects(data.content);\r\n        })\r\n        .catch((error) => {\r\n          alertService.error(\"There was an error!\");\r\n          console.error(\"Get Projects, There was an error!\", error);\r\n        });\r\n      }\r\n    }\r\n  }, [dummy,hide]);\r\n\r\n  useEffect(()=>{\r\n    handleChange({\r\n      target:{\r\n        id: \"gateID\",\r\n        value: \"\"\r\n      }\r\n    });\r\n    if(curProject === null)setGates([]);\r\n    else{\r\n      getGate(curProject,[\"gateID\",\"gateName\"])\r\n      .then(async (data) => {\r\n        setGates(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gates, There was an error!\", error);\r\n      });\r\n    }\r\n  },[curProject])\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (['isPrimaryDevice','isGateControl'].includes(id)) {\r\n      let boolean = e.target.checked;\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: boolean\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(deviceID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    console.log(state);\r\n    let tempState = state;\r\n    delete tempState[\"deviceStatus\"];\r\n    updateDeviceInfo(deviceID, tempState)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createDevice(gateID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Device, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{deviceID===null?\"Add Device\":\"Edit Device\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <div className={\"loadingModal\"+(loading?\"\":\" invisible\")}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n            <Modal.Body>\r\n            <Form id =\"deviceModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Device ID\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >{deviceID===null?\r\n                        <div><Form.Control\r\n                        required\r\n                        placeholder=\"ID\"\r\n                        id=\"deviceID\"\r\n                        name=\"deviceID\"\r\n                        type =\"text\"\r\n                        value={state.deviceID}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device ID is a required field.\r\n                        </Form.Control.Feedback></div>:<Form.Control type=\"text\" placeholder={state.deviceID} readOnly />}\r\n                    </Col>\r\n                    </Form.Group>\r\n                    {gateID===null?\r\n                    <div>\r\n                      <Form.Group as={Row}>\r\n                        <Form.Label column sm={4}  align=\"right\">\r\n                            Project\r\n                        </Form.Label>\r\n                        <Col\r\n                            sm={6}\r\n                        >\r\n                          <Form.Control\r\n                            custom\r\n                            required\r\n                            as=\"select\"\r\n                            id=\"project\"\r\n                            name=\"project\"\r\n                            value={curProject}\r\n                            onChange={(e)=>{\r\n                              setCurProject(e.target.value);\r\n                            }}\r\n                            >\r\n                            <option value={\"\"}>--Select Project--</option>\r\n                            {projects.map((project)=>(\r\n                              <option value={project.projectID}>{project.projectName}</option>\r\n                            ))}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            Project is a required field.\r\n                          </Form.Control.Feedback>\r\n                        </Col>\r\n                      </Form.Group>\r\n                      <Form.Group as={Row}>\r\n                        <Form.Label column sm={4}  align=\"right\">\r\n                            Gate\r\n                        </Form.Label>\r\n                        <Col\r\n                            sm={6}\r\n                        >\r\n                          <Form.Control\r\n                            disabled = {curProject===\"\"}\r\n                            custom\r\n                            required\r\n                            as=\"select\"\r\n                            id=\"gateID\"\r\n                            name=\"gateID\"\r\n                            value={state.gateID===null?\"\":state.gateID}\r\n                            onChange={handleChange}\r\n                            >\r\n                            <option value={\"\"}>--Select Project--</option>\r\n                            {gates.map((gate)=>(\r\n                              <option value={gate.gateID}>{gate.gateName}</option>\r\n                            ))}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            Gate is a required field.\r\n                          </Form.Control.Feedback>\r\n                        </Col>\r\n                      </Form.Group>\r\n                      </div>\r\n                      :null\r\n                    }\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Device Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"deviceName\"\r\n                        name=\"deviceName\"\r\n                        value={state.deviceName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Device Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"deviceType\"\r\n                        name=\"deviceType\"\r\n                        value={state.deviceType===null?null:state.deviceType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        {deviceTypes.map((type)=>(\r\n                          <option value={type.id}>{type.name}</option>\r\n                        ))}\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Carpark\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Carpark\"\r\n                        id=\"deviceCarpark\"\r\n                        name=\"deviceCarpark\"\r\n                        value={state.deviceCarpark}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Capark is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                         Manufacturer\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer\"\r\n                        id=\"manufacturer\"\r\n                        name=\"manufacturer\"\r\n                        value={state.manufacturer}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                         Manufacturer Code\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer Code\"\r\n                        id=\"manufacturerCode\"\r\n                        name=\"manufacturerCode\"\r\n                        value={state.manufacturerCode}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer Code is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                         Direction\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Direction\"\r\n                        id=\"direction\"\r\n                        name=\"direction\"\r\n                        value={state.direction}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Direction is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Primary Device?\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked = {state.isPrimaryDevice}\r\n                        type=\"switch\"\r\n                        id=\"isPrimaryDevice\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Control Gate?\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isGateControl}\r\n                        type=\"switch\"\r\n                        id=\"isGateControl\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"deviceModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { DeviceModal };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport TimeField from 'react-simple-timefield';\r\nimport { alertService, createGate, getGateInfo, updateGateInfo, getWhitelistTags } from '../services/index.js';\r\n\r\nimport { CheckPicker } from 'rsuite';\r\n\r\nexport function GateModal(props) {\r\n    let {hide, gateID, toggleModal, success, newState, projectID, gateTypes } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [whiteListTags, setWhiteListTags] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const newInitialState = {\r\n      gateName: \"\",\r\n      gateType: \"\",\r\n      isChargeable: false,\r\n      ledOnTime: \"00:00:00\",\r\n      ledOffTime: \"00:00:00\",\r\n      allowedTypes: []\r\n    };\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    console.log(\"gateModal\", gateID, projectID, newState);\r\n    if(!hide){\r\n      setState(newInitialState);\r\n    }else if(newState){\r\n      setState(newInitialState);\r\n    }else{\r\n      setLoading(true);\r\n      getGateInfo(gateID)\r\n      .then(async (data) => {\r\n        if(data.message.allowedTypes!==null){\r\n          setState(data.message);\r\n        }else{\r\n          setState({\r\n            ...data.message,\r\n            allowedTypes: []\r\n          })\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gate, There was an error!\", error);\r\n      });\r\n    }\r\n    getWhitelistTags()\r\n    .then(async (data) => {\r\n      setWhiteListTags(data.message.whitelistTags.map((tag)=>(\r\n        {\r\n          label: tag,\r\n          value: tag\r\n        }\r\n      )));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get WhiteList Tags, There was an error!\", error);\r\n    });\r\n  }, [dummy,hide]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (['isChargeable'].includes(id)) {\r\n      let boolean = e.target.checked;\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: boolean\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(newState) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateGateInfo(gateID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createGate(projectID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Gate, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n      setValidated(false);\r\n      toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{newState?\"Add Gate\":\"Edit Gate\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <div className={\"loadingModal\"+(loading?\"\":\" invisible\")}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n            <Modal.Body>\r\n            <Form id='gateModal' noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Gate Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"gateName\"\r\n                        name=\"gateName\"\r\n                        value={state.gateName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Gate Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"gateType\"\r\n                        name=\"gateType\"\r\n                        value={state.gateType===null?\"\":state.gateType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        {gateTypes.map((type)=>(\r\n                          <option value={type.id}>{type.name}</option>\r\n                        ))}\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Charge fee for entry\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                    Time to turn on the LPR camera’s LED\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex\"\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOnTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOnTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOnTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Time to turn off the LPR\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        className=\"align-items-center d-flex\"\r\n                        sm={6}\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOffTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOffTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOffTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Whitelist Tags\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <CheckPicker\r\n                          sticky\r\n                          searchable={false}\r\n                          data={whiteListTags}\r\n                          defaultValue={[]}\r\n                          style={{ width: \"100%\" }}\r\n                          value={state.allowedTypes}\r\n                          onChange={(value)=>{\r\n                            handleChange({\r\n                              target:{\r\n                                id: \"allowedTypes\",\r\n                                value\r\n                              }\r\n                            });\r\n                          }}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"gateModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { GateModal };\r\n","import React from 'react';\r\n\r\nimport { alertService, alertType } from '../services/index.js';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nexport class AlertGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            alerts: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // subscribe to new alert notifications\r\n        this.subscription = alertService.onAlert(this.props.id)\r\n            .subscribe(alert => {\r\n                // add alert to array\r\n                this.setState({ alerts: [...this.state.alerts, alert] });\r\n\r\n                // auto close alert if required\r\n                setTimeout(() => this.removeAlert(alert), alert.time===undefined ? 3000: alert.time);\r\n            });\r\n\r\n        // clear alerts on location change\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // unsubscribe & unlisten to avoid memory leaks\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert) {\r\n        this.setState({ alerts: this.state.alerts.filter(x => x !== alert) })\r\n    }\r\n\r\n    render() {\r\n        const { alerts } = this.state;\r\n        if (!alerts.length) return null;\r\n        return (\r\n            <div className=\"alertGrp\">\r\n                {console.log(alerts), \r\n                alerts.map((alert,idx) =>\r\n                    <Alert \r\n                    key = {idx} \r\n                    variant={alert.type}\r\n                    dismissible = {true}\r\n                    onClose={()=>{this.removeAlert(alert)}}>\r\n                        {alert.message}\r\n                    </Alert>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default {AlertGroup} ;","import {IconButton} from '@material-ui/core';\r\n\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nexport function TablePaginationActions(props) {\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div style={{flexShrink:0, right:0}}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        <FirstPageIcon />\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n         <KeyboardArrowLeft />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        <KeyboardArrowRight />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        <LastPageIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default {TablePaginationActions};","import { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, createAccessRule, getAccessRuleInfo, updateAccessRuleInfo, getGate } from '../services/index.js';\r\n\r\nimport { CheckPicker } from 'rsuite';\r\n\r\nexport function RulesModal(props) {\r\n    let {hide, accessRuleID, projectID, success, projectName, toggleModal } = props;\r\n    let cnt = 0;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [gates, setGates] = useState([]);\r\n    const [curGates, setCurGates] = useState({});\r\n    const [initialGates, setInitialGates] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const func = async (val) =>{\r\n        let temp = {};\r\n        val.forEach(async (element)=>{\r\n            temp[element[\"gateID\"]] = false;\r\n        });\r\n        initialGates.forEach(async (element)=>{\r\n            temp[element] = true;\r\n        });\r\n        return await temp;\r\n    };\r\n    const loadGates = () =>{\r\n        getGate(projectID, [\"gateID\", \"gateName\"])\r\n        .then(async (data) => {\r\n            setGates(data.content.map((gate)=>({\r\n              value: String(gate.gateID),\r\n              label: gate.gateName\r\n            })));\r\n            func(data.content).then(async(list)=>{\r\n                setCurGates(await list);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            alertService.error(\"There was an error!\");\r\n            console.error(\"Get Gate Rule, There was an error!\", error);\r\n        });\r\n    }\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    if(accessRuleID===null){\r\n      setLoading(false);\r\n      setState({\r\n        projectID,\r\n        accessRuleName: \"\",\r\n        isChargeable: false,\r\n        gates: []\r\n      });\r\n      setInitialGates([]);\r\n    }else{\r\n      setTimeout(()=>setLoading(false), 600);\r\n      getAccessRuleInfo(accessRuleID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n        setInitialGates(data.message.gates);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Access Rule, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    setState((prevState)=>({\r\n        ...prevState,\r\n        gates: (Object.keys(curGates)).filter((gate)=>curGates[gate])\r\n      }));\r\n  },[curGates]);\r\n\r\n  useEffect(()=>{\r\n    loadGates();\r\n  },[initialGates]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (['isChargeable'].includes(id)) {\r\n      let boolean = e.target.checked;\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: boolean\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleGateChange = (e) =>{\r\n    let id = e.target.id;\r\n    setCurGates((prevState) => ({\r\n      ...prevState,\r\n      [id]: !prevState[id]\r\n    }));\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(accessRuleID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateAccessRuleInfo(accessRuleID, {\r\n      ...state,\r\n      gates: state.gates.map((gate)=>(parseInt(gate)))\r\n    })\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Access Rule, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createAccessRule({\r\n      ...state,\r\n      gates: state.gates.map((gate)=>(parseInt(gate)))\r\n    })\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Access Rule, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n      {loading?\r\n      <Row className=\"d-flex justify-content-center\" style={{margin:\"200px\"}}>\r\n      <Spinner size=\"lg\" animation=\"border\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n    </Row>:\r\n        <div>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{accessRuleID===null?\"Add Rule\":\"Edit Rule\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id =\"ruleModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Project Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={projectName} readOnly />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Access Rule Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"accessRuleName\"\r\n                        name=\"accessRuleName\"\r\n                        value={state.accessRuleName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Rule Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Gates\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <CheckPicker\r\n                          sticky\r\n                          searchable={false}\r\n                          data={gates}\r\n                          defaultValue={[]}\r\n                          style={{ width: \"100%\" }}\r\n                          value={state.gates}\r\n                          onChange={(value)=>{\r\n                            handleChange({\r\n                              target:{\r\n                                id: \"gates\",\r\n                                value\r\n                              }\r\n                            });\r\n                          }}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Is Chargeable\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"ruleModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n        </div>\r\n      }\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { RulesModal };\r\n","import {Modal} from 'react-bootstrap';\r\n\r\nexport function ImageModal (props){\r\n    let {toggleModal, src} = props;\r\n    return(\r\n    <Modal size=\"lg\" centered show={src===null?false:true} onHide={toggleModal}>\r\n        <img src={src}/>\r\n    </Modal>\r\n    );\r\n}\r\n\r\nexport default {ImageModal};","import { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, getWhitelistEntryInfo, updateWhitelistEntryInfo, createWhitelistEntry, getWhitelistTags, getPlates } from '../services/index.js';\r\nimport {DatePicker, SelectPicker} from 'rsuite';\r\n\r\nfunction pad2(n) { return n < 10 ? '0' + n : n }\r\nfunction dateToString(date){\r\n  if(date===null)return \"\";\r\n  else return date.getFullYear().toString() +'-'+ pad2(date.getMonth() + 1) +'-'+ pad2( date.getDate()) +' '+ pad2( date.getHours() ) +':'+ pad2( date.getMinutes() ) +':'+ pad2( date.getSeconds() );\r\n}\r\n\r\nfunction minStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 > str2)return str2;\r\n  else return str1;\r\n}\r\nfunction maxStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 < str2)return str2;\r\n  else return str1;\r\n}\r\n\r\nexport function WhitelistModal(props) {\r\n    let {hide, ID, success, projectName, accessRules, toggleModal } = props;\r\n    let cnt = 0;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [whitelistTags, setWhitelistTags] = useState([]);\r\n    const [plates,setPlates] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const reloadTags = ()=>{\r\n    getWhitelistTags()\r\n    .then(async (data) => {\r\n      setWhitelistTags(data.message.whitelistTags);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get WhiteList Tags, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  const reloadPlate = ()=>{\r\n    getPlates([\"plateNumber\"])\r\n    .then(async (data) => {\r\n      setPlates(data.content.map((plate)=>plate.plateNumber));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Plate Number, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    reloadTags();\r\n    reloadPlate();\r\n    if(ID===null){\r\n      setState({\r\n        plateNumber: \"\",\r\n        accessRuleID: \"\",\r\n        tag: \"\",\r\n        startDateTime: \"\",\r\n        endDateTime: \"\"\r\n      });\r\n    }else{\r\n      setLoading(true);\r\n      getWhitelistEntryInfo(ID)\r\n      .then(async (data) => {\r\n          console.log(data.message);\r\n        setState(data.message);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Whitelist entry info, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(ID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    setLoading(true);\r\n    console.log(state);\r\n    updateWhitelistEntryInfo(state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        setLoading(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      setLoading(false);\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Whitelist Entry, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    setLoading(true);\r\n    createWhitelistEntry(state)\r\n    .then(async (data) => {\r\n      setLoading(false);\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      setLoading(false);\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Whitelist Entry, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n        <Modal.Header\r\n            closeButton>\r\n            <Modal.Title>{ID===null?\"Add Entry\":\"Edit Entry\"}</Modal.Title>\r\n        </Modal.Header>\r\n          <div className={\"loadingModal\"+(loading?\"\":\" invisible\")}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n        <Modal.Body>\r\n        <Form id =\"whitelistModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <div>\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Project Name\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                    className=\"align-items-center d-flex justify-content-center\"\r\n                >\r\n                    <Form.Control type=\"text\" placeholder={projectName} readOnly />\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Plate Number\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >  \r\n                {ID===null?\r\n                    <div>\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"plateNumber\"\r\n                        name=\"plateNumber\"\r\n                        value={state.plateNumber}\r\n                        onChange={handleChange}\r\n                        isValid={plates.includes(state.plateNumber)}\r\n                        isInvalid={!plates.includes(state.plateNumber)&&validated}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Please enter a registered plate no.\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    :<Form.Control type=\"text\" placeholder={state.plateNumber} readOnly />\r\n                }\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Access Rule\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"accessRuleID\"\r\n                        name=\"accessRuleID\"\r\n                        value={state.accessRuleID===null?\"\":state.accessRuleID}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Access Rule--</option>\r\n                        {accessRules.map((rule)=>(\r\n                            <option value={rule.accessRuleID}>{rule.accessRuleName}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                    Access Rule is a required field.\r\n                    </Form.Control.Feedback>\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4} align=\"right\">\r\n                    Tag\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <Form.Control\r\n                        custom\r\n                        as=\"select\"\r\n                        id=\"tag\"\r\n                        name=\"tag\"\r\n                        value={state.tag===null?\"\":state.tag}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>None</option>\r\n                        {whitelistTags.map((whitelistTag)=>(\r\n                            <option value={whitelistTag}>{whitelistTag}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Start Date Time\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <DatePicker\r\n                className=\"width-100\"\r\n                    value={state.startDateTime}\r\n                    onChange={(val)=>{\r\n                      handleChange({\r\n                        target:{\r\n                          id: \"startDateTime\",\r\n                          value: dateToString(val)\r\n                        }\r\n                      });\r\n                      handleChange({\r\n                        target:{\r\n                          id: \"endDateTime\",\r\n                          value: maxStr(dateToString(val),state.endDateTime)\r\n                        }\r\n                      });\r\n                    }}\r\n                      format=\"YYYY-MM-DD HH:mm:ss\"\r\n                      ranges={[\r\n                        {\r\n                          label: 'Now',\r\n                          value: new Date()\r\n                        }\r\n                      ]}\r\n                      placeholder=\"Start DateTime\"\r\n                    />\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    End Date Time\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                <DatePicker\r\n                className=\"width-100\"\r\n                    value={state.endDateTime}\r\n                    onChange={(val)=>{\r\n                      handleChange({\r\n                        target:{\r\n                          id: \"endDateTime\",\r\n                          value: dateToString(val)\r\n                        }\r\n                      });\r\n                      handleChange({\r\n                        target:{\r\n                          id: \"startDateTime\",\r\n                          value: minStr(dateToString(val),state.startDateTime)\r\n                        }\r\n                      });\r\n                    }}\r\n                  format=\"YYYY-MM-DD HH:mm:ss\"\r\n                  ranges={[\r\n                    {\r\n                      label: 'Now',\r\n                      value: new Date()\r\n                    }\r\n                  ]}\r\n                  placeholder=\"End DateTime\"\r\n                />\r\n                </Col>\r\n                </Form.Group>\r\n            </div>\r\n        </Form>\r\n        </Modal.Body>\r\n    <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n        Cancel\r\n        </Button>\r\n        <Button form =\"whitelistModal\" variant=\"primary\" type=\"submit\">\r\n        Confirm\r\n        </Button>\r\n    </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { WhitelistModal };\r\n","import React from 'react'\r\nimport { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, getAccessRule,  getWhitelistEntry } from '../services/index.js';\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\nconst fileExtension = \".xlsx\";\r\nconst exportToCSV = (apiData, fileName) => {\r\n    console.log(apiData);\r\n    const headers = [\r\n        \"Record ID\",\r\n        \"Plate Number\",\r\n        \"Project\",\r\n        \"Access Rule\",\r\n        \"Tag\",\r\n        \"Start DateTime\",\r\n        \"End DateTime\"\r\n    ];\r\n    const ws = XLSX.utils.aoa_to_sheet([headers]);\r\n    XLSX.utils.sheet_add_json(ws, apiData, {skipHeader: true,origin:1});\r\n    const wscols = [\r\n        {wch:10},  // recordID\r\n        {wch:15},  //plateNumber\r\n        {wch:15}, //project\r\n        {wch:15}, //accessRule\r\n        {wch:10}, //tag\r\n        {wch:20}, //startDateTime\r\n        {wch:20}  //endDateTime\r\n    ];\r\n    ws['!cols'] = wscols;\r\n    let wb = XLSX.utils.book_new()\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Whitelist\");\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n};\r\n\r\nexport function ExportWhitelistModal(props) {\r\n    let {hide, projects, toggleModal, projectNames } = props;\r\n    const [project, setProject] = useState(null);\r\n    const [dummy, setDummy] = useState(false);\r\n    const [accessRules, setAccessRules] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const func = async (val) =>{\r\n        let temp = {};\r\n        val.forEach(async (element)=>{\r\n            temp[element[\"accessRuleID\"]] = {\r\n                accessRuleName: element[\"accessRuleName\"],\r\n                projectID: element[\"projectID\"]\r\n            };\r\n        });\r\n        return await temp;\r\n    };\r\n\r\n    const reloadAccessRules = () =>{\r\n      getAccessRule(project,[\"accessRuleID\",\"accessRuleName\",\"projectID\"])\r\n      .then(async (data) => {\r\n        func(data.content).then(async(list)=>{\r\n            setAccessRules(await list);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Access Rule, there was an error!\", error);\r\n      });\r\n    }\r\n\r\n    useEffect(()=>{\r\n        reloadAccessRules();\r\n    },[project]);\r\n\r\n    const fetchData = () =>{\r\n        setLoading(true);\r\n        getWhitelistEntry([\"recordID\",\"plateNumber\", \"accessRuleID\", \"tag\", \"startDateTime\",\"endDateTime\"])\r\n        .then(async (data) => {\r\n            exportToCSV(\r\n                data.content.filter((entry)=>\r\n                    entry.accessRuleID !== null &&\r\n                    accessRules[entry.accessRuleID] !== undefined\r\n                ).map((entry)=>({\r\n                    recordID: entry.recordID,\r\n                    plateNumber: entry.plateNumber,\r\n                    project: projectNames[accessRules[entry.accessRuleID].projectID],\r\n                    accessRule: accessRules[entry.accessRuleID].accessRuleName,\r\n                    tag: entry.tag,\r\n                    startDateTime: entry.startDateTime,\r\n                    endDateTime: entry.endDateTime\r\n                }))\r\n            ,\"Whitelist\");\r\n            setLoading(false);\r\n            toggleModal();\r\n        })\r\n        .catch((error) => {\r\n        console.error(\"Get entry, there was an error!\", error);\r\n        });\r\n      }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    toggleModal();}}>\r\n        <Modal.Header\r\n            closeButton>\r\n            <Modal.Title>Export Whitelist Entries</Modal.Title>\r\n        </Modal.Header>\r\n          <div className={\"loadingModal\"+(loading?\"\":\" invisible\")}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n        <Modal.Body>\r\n        <Form>\r\n            <div>\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Project Name\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                    className=\"align-items-center d-flex justify-content-center\"\r\n                >\r\n                    <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"project\"\r\n                        name=\"project\"\r\n                        value={project}\r\n                        onChange={(e)=>{\r\n                            setProject(e.target.value);\r\n                        }}\r\n                        >\r\n                        <option value={null}>All Projects</option>\r\n                        {projects.map((row)=>(\r\n                            <option value={row.projectID}>{row.projectName}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Col>\r\n                </Form.Group>\r\n            </div>\r\n        </Form>\r\n        </Modal.Body>\r\n    <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={()=>{\r\n    toggleModal();}}>\r\n        Cancel\r\n        </Button>\r\n        <Button \r\n        onClick={()=>{\r\n            fetchData();\r\n        }} \r\n        variant=\"primary\">\r\n        Download\r\n        </Button>\r\n    </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { ExportWhitelistModal };\r\n","import React from 'react'\r\nimport { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService,  getMovementLogs,getProjects } from '../services/index.js';\r\n\r\nimport * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nimport { InputGroup, DatePicker } from 'rsuite';\r\n\r\nfunction pad2(n) { return n < 10 ? '0' + n : n }\r\nfunction dateToString(date){\r\n  if(date===null)return \"\";\r\n  else return date.getFullYear().toString() +'-'+ pad2(date.getMonth() + 1) +'-'+ pad2( date.getDate()) +' '+ pad2( date.getHours() ) +':'+ pad2( date.getMinutes() ) +':'+ pad2( date.getSeconds() );\r\n}\r\n\r\nfunction minStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 > str2)return str2;\r\n  else return str1;\r\n}\r\nfunction maxStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 < str2)return str2;\r\n  else return str1;\r\n}\r\n\r\nconst fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\nconst fileExtension = \".xlsx\";\r\nconst exportToCSV = (apiData, fileName) => {\r\n    console.log(apiData);\r\n    const headers = [\r\n        \"Project\",\r\n        \"Vehicle Type\",\r\n        \"Open\",\r\n        \"Gate Name\",\r\n        \"Gate Type\",\r\n        \"Detection Time\",\r\n        \"Confirmed Time\",\r\n        \"Original Plate\",\r\n        \"Actual Plate\",\r\n        \"Image\",\r\n        \"Plate Image\"\r\n    ];\r\n    const ws = XLSX.utils.aoa_to_sheet([headers]);\r\n    XLSX.utils.sheet_add_json(ws, apiData, {skipHeader: true,origin:1});\r\n    const wscols = [\r\n        {wch:15},  // Project\r\n        {wch:15},  //Vehicle Type\r\n        {wch:10}, //Open\r\n        {wch:15}, //Gate Name\r\n        {wch:10}, //Gate Type\r\n        {wch:20}, //Detection Time\r\n        {wch:20}, //Confirmed Time\r\n        {wch:15}, //Original Plate\r\n        {wch:15}, //Actual Plate\r\n        {wch:15}, //Image\r\n        {wch:15} //Plate Image\r\n    ];\r\n    ws['!cols'] = wscols;\r\n    let wb = XLSX.utils.book_new()\r\n    XLSX.utils.book_append_sheet(wb, ws, \"Records\");\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, fileName + fileExtension);\r\n};\r\n\r\nexport function ExportRecordModal(props) {\r\n    let {hide, toggleModal } = props;\r\n    const [project, setProject] = useState(null);\r\n    const [dummy, setDummy] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [timeState, setTimeState] = useState({\r\n      startTime: \"\",\r\n      endTime: \"\"\r\n    });\r\n    const [projects,setProjects] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        getProjects([\"projectName\"])\r\n        .then(async (data) => {\r\n            setProjects(data.content);\r\n        })\r\n        .catch((error) => {\r\n            console.error(\"There was an error!\", error);\r\n        });\r\n    });\r\n    \r\n    const fields = [\r\n        \"projectName\",\r\n        \"vehicleType\",\r\n        \"isOpened\",\r\n        \"gateName\",\r\n        \"gateType\",\r\n        \"detectionTime\",\r\n        \"confirmedTime\",\r\n        \"originalPlate\",\r\n        \"confirmedPlate\",\r\n        \"image1\",\r\n        \"plateImage\"\r\n    ];\r\n\r\n    const func = async (val) =>{\r\n        let temp = {};\r\n        val.forEach(async (element)=>{\r\n            temp[element[\"accessRuleID\"]] = {\r\n                accessRuleName: element[\"accessRuleName\"],\r\n                projectID: element[\"projectID\"]\r\n            };\r\n        });\r\n        return await temp;\r\n    };\r\n\r\n    const fetchData = () =>{\r\n        setLoading(true);\r\n        let filters = (timeState.startTime===\"\"&&timeState.endTime===\"\")?\r\n        {}:{\r\n            detectionTime : timeState.startTime+'|'+timeState.endTime\r\n        };\r\n        if (project!==null)filters[\"projectName\"] = project;\r\n        getMovementLogs(fields, filters)\r\n        .then(async (data) => {\r\n            setLoading(false);\r\n            exportToCSV(data.content,\"Records\");\r\n            toggleModal();\r\n        })\r\n        .catch((error) => {\r\n            alertService.error(\"There was an error!\");\r\n            console.error(\"There was an error!\", error);\r\n        });\r\n    }\r\n      \r\n  const handleTimeChange = (value, id) => {\r\n    setTimeState((prevState)=>({\r\n      ...prevState,\r\n      [id]:value\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Modal show={hide} size=\"lg\" onHide={()=>{\r\n    toggleModal();}}>\r\n        <Modal.Header\r\n            closeButton>\r\n            <Modal.Title>Export Whitelist Entries</Modal.Title>\r\n        </Modal.Header>\r\n          <div className={\"loadingModal\"+(loading?\"\":\" invisible\")}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n        <Modal.Body>\r\n        <Form>\r\n            <div>\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={3}  align=\"right\">\r\n                    Project Name\r\n                </Form.Label>\r\n                <Col\r\n                    sm={8}\r\n                    className=\"align-items-center d-flex justify-content-center\"\r\n                >\r\n                    <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"project\"\r\n                        name=\"project\"\r\n                        value={project}\r\n                        onChange={(e)=>{\r\n                            setProject(e.target.value);\r\n                        }}\r\n                        >\r\n                        <option value={null}>All Projects</option>\r\n                        {projects.map((row)=>(\r\n                            <option value={row.projectName}>{row.projectName}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={3}  align=\"right\">\r\n                    Detection Time\r\n                </Form.Label>\r\n                <Col sm={8}\r\n                    className=\"align-items-center d-flex justify-content-center\">\r\n                    <InputGroup style={{\"background-color\":\"white\"}}>\r\n                    <InputGroup.Addon>From</InputGroup.Addon>\r\n                    <DatePicker \r\n                    format=\"YYYY-MM-DD HH:mm:ss\" \r\n                    block appearance=\"subtle\"\r\n                    value={timeState.startTime}\r\n                    onChange={(val)=>{\r\n                        handleTimeChange(dateToString(val), \"startTime\");\r\n                        handleTimeChange(maxStr(dateToString(val),timeState.endTime), \"endTime\");\r\n                    }}\r\n                    ranges={[\r\n                        {\r\n                        label: 'Now',\r\n                        value: new Date()\r\n                        }\r\n                    ]}\r\n                    placeholder=\"YYYY-MM-DD HH:MM:SS\"/>\r\n                    <InputGroup.Addon>To</InputGroup.Addon>\r\n                    <DatePicker \r\n                    format=\"YYYY-MM-DD HH:mm:ss\" \r\n                    block appearance=\"subtle\"\r\n                    value={timeState.endTime}\r\n                    onChange={(val)=>{\r\n                        handleTimeChange(dateToString(val), \"endTime\");\r\n                        handleTimeChange(minStr(dateToString(val),timeState.startTime), \"startTime\");\r\n                    }} \r\n                    ranges={[\r\n                        {\r\n                        label: 'Now',\r\n                        value: new Date()\r\n                        }\r\n                    ]}\r\n                    placeholder=\"YYYY-MM-DD HH:MM:SS\"/>\r\n                    </InputGroup>\r\n                </Col>\r\n                </Form.Group>\r\n            </div>\r\n        </Form>\r\n        </Modal.Body>\r\n    <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={()=>{\r\n    toggleModal();}}>\r\n        Cancel\r\n        </Button>\r\n        <Button \r\n        onClick={()=>{\r\n            fetchData();\r\n        }} \r\n        variant=\"primary\">\r\n        Download\r\n        </Button>\r\n    </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { ExportRecordModal };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {Jumbotron, Row, Col, Card } from 'react-bootstrap';\r\nimport {delDevice, getAllDevice, getObjectTypes, alertService, getGateInfo, getNewDevices} from '../services/index.js';\r\nimport {IconButton, Typography  , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, TableHead, TableRow, Paper, CardActions } from '@material-ui/core';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { TablePaginationActions , DeviceModal, ConfirmModal} from \"../components/index.js\";\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router\";\r\nimport {Helmet} from \"react-helmet\";\r\n\r\n\r\nexport function Home() {\r\n  const [rows, setRows] = useState([]);\r\n  const [dummy, setDummy] = useState(null);\r\n  const [devices, setDevices] = useState([]);\r\n  const [newDevices, setNewDevices] = useState([]);\r\n  const [deviceTypes, setDeviceTypes] = useState([]);\r\n  const [deviceTypeNames, setDeviceTypeNames] = useState({});\r\n  const [curID, setCurID] = useState(null);\r\n  const [toggle, setToggle] = useState({\r\n    edit: false,\r\n    delete: false\r\n  });\r\n  let history = useHistory();\r\n\r\n  const reload = () =>{\r\n    getAllDevice([\"deviceID\", \"deviceName\", \"deviceType\",\"deviceStatus\", \"gateID\",\"deviceIP\"])\r\n    .then(async (data) => {\r\n      setDevices(data.content.filter((device)=>device.deviceStatus!==\"online\"&&device.gateID !== null));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get All Device, there was an error!\", error);\r\n    });\r\n    getNewDevices()\r\n    .then(async (data) => {\r\n      setNewDevices(data.message);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get All Device, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n    getObjectTypes(\"device\")\r\n    .then(async (data) => {\r\n      setDeviceTypeNames(data.message);\r\n      setDeviceTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Device Types!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  const direct = (gateID) =>{\r\n    getGateInfo(gateID)\r\n    .then(async (data) => {\r\n      let projectID = data.message.projectID;\r\n      history.push('/project/'+String(projectID)+'/gate/'+String(gateID));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate Info, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (deviceID) => {\r\n    delDevice(deviceID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Device Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  return (\r\n  <div>\r\n    <Helmet>\r\n      <meta charSet=\"utf-8\" />\r\n      <title>Home</title>\r\n    </Helmet>\r\n    <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this device?\"\r\n      />\r\n    <DeviceModal\r\n      deviceTypes = {deviceTypes}\r\n      hide={toggle.edit}\r\n      gateID = {null}\r\n      deviceID = {curID}\r\n      success={() => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n      }}\r\n      toggleModal={() => {\r\n        toggleModal(\"edit\");\r\n      }}\r\n    />\r\n    <Jumbotron className=\"dashboard\">\r\n      <Row>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv success\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Sample\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#66bb6a\"}}>\r\n                ~\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv warning\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Sample\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#ffa726\"}} >\r\n              ~\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv info\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              New Devices\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#26c6da\"}}>\r\n              {newDevices.length}\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv danger\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Disconnected Devices\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#ef5350\"}}>\r\n                {devices.length}\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Jumbotron>\r\n    <div className=\"content\">\r\n    <Row>\r\n    <Col sm={4}>\r\n          <Card style={{height:\"465px\"}}>\r\n          <Typography className=\"cardTitle\" variant=\"h6\" component=\"h2\">\r\n            New Devices\r\n          </Typography>\r\n          <TableContainer component={Paper} className=\"scrollbar-grey\" style={{\"box-shadow\":\"none\"}}>\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead >\r\n                <TableRow>\r\n                  <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                  <TableCell align=\"left\"><b>IP</b></TableCell>\r\n                  <TableCell align=\"left\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {newDevices.length > 0?\r\n                newDevices.map((row, index) => (\r\n                  <TableRow key={row.deviceID}>\r\n                  <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                  <TableCell align=\"left\">{(row.deviceIP==\"\"||row.deviceIP==null)?\"-\":row.deviceIP}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                      <IconButton style={{padding:0}}\r\n                      onClick={() => {\r\n                          setCurID(row.deviceID);\r\n                          toggleModal(\"edit\");\r\n                      }}>\r\n                        <BuildIcon\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n                :\r\n                <TableRow>\r\n                  <TableCell align=\"center\" colSpan={3}>\r\n                    No New Devices\r\n                  </TableCell>\r\n                </TableRow>\r\n                }\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={8}>\r\n          <Card style={{height:\"465px\"}} >\r\n          <Typography className=\"cardTitle\" variant=\"h6\" component=\"h2\">\r\n             Disconnected Devices\r\n          </Typography>\r\n          <TableContainer component={Paper} className=\"scrollbar-grey\" style={{\"box-shadow\":\"none\"}}>\r\n            <Table stickyHeader aria-label=\"simple table\">\r\n              <TableHead >\r\n                <TableRow>\r\n                  <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                  <TableCell align=\"left\"><b>Name</b></TableCell>\r\n                  <TableCell align=\"left\"><b>Type</b></TableCell>\r\n                  <TableCell align=\"left\"><b>IP</b></TableCell>\r\n                  <TableCell align=\"left\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {devices.length > 0?\r\n                devices.map((row, index) => (\r\n                  <TableRow key={row.deviceID}>\r\n                  <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                    <TableCell align=\"left\">{row.deviceName}</TableCell>\r\n                    <TableCell align=\"left\">{row.deviceType===null?null:(deviceTypeNames[row.deviceType]===undefined ? row.deviceType : deviceTypeNames[row.deviceType].name)}</TableCell>\r\n                  <TableCell align=\"left\">{(row.deviceIP==\"\"||row.deviceIP==null)?\"-\":row.deviceIP}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <IconButton style={{padding:\"0px 5px\"}}\r\n                      onClick={() => {\r\n                          direct(row.gateID);\r\n                      }}>\r\n                        <OpenInNewIcon\r\n                        />\r\n                      </IconButton>\r\n                      <IconButton style={{padding:0}}\r\n                      onClick={() => {\r\n                          setCurID(row.deviceID);\r\n                          toggleModal(\"delete\");\r\n                      }}>\r\n                        <DeleteOutlineIcon\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n                :\r\n                <TableRow>\r\n                  <TableCell align=\"center\" colSpan={5}>\r\n                    No Disconnected Devices\r\n                  </TableCell>\r\n                </TableRow>}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default { Home };\r\n","import React, { useState, useContext } from \"react\";\r\nimport { store } from \"../store.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {Helmet} from \"react-helmet\";\r\nexport function Login() {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  const { dispatch } = storeContext;\r\n  let history = useHistory();\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n  const reqLogin = (e) => {\r\n    e.preventDefault();\r\n    let { username, password } = state;\r\n    /*\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    };\r\n    \r\n    fetch(server_URL + \"/login\", requestOptions)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n  \r\n      // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      }\r\n  \r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      return(\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/home\"\r\n          }}\r\n        />\r\n      );\r\n    })\r\n    .catch((error) => {\r\n      this.setState({ errorMessage: error.toString() });\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    if (username === \"huajun\" && password === \"huajun\") {\r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      dispatch({\r\n        type: \"setUser\",\r\n        value: username\r\n      });\r\n      history.push(\"/home\");\r\n    } else if (username.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Username cannot be blank\";\r\n    } else if (password.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Password cannot be blank\";\r\n    } else {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Invalid Username or Password\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"maincontainer h-100\">\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Login</title>\r\n      </Helmet>\r\n      <div className=\"container-fluid bg-light h-100\">\r\n        <div className=\"login d-flex align-items-center py-5\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-10 col-sm-6 col-md-5 col-xl-4 mx-auto \">\r\n                <h3 className=\"display-4\">Login</h3>\r\n                <p className=\"text-muted mb-4\">\r\n                  Enter your credentials to login.\r\n                </p>\r\n                <form>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"username\"\r\n                      type=\"username\"\r\n                      placeholder=\"Username\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4\"\r\n                      onChange={handleChange}\r\n                      value={state.username}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\r\n                      onChange={handleChange}\r\n                      value={state.password}\r\n                    />\r\n                  </div>\r\n                  <p id=\"login-error\" className=\"text-danger\"></p>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block text-uppercase mb-2 rounded-pill shadow-sm\"\r\n                    onClick={reqLogin}\r\n                  >\r\n                    Sign in\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Login };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Spinner } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, SignpostSplitFill } from \"react-bootstrap-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, addProject, delProject, alertService } from '../services/index.js';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nexport function Projects({ match }) {\r\n  let history = useHistory();\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [loading,setLoading] = useState(false);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false\r\n  });\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n    setCurState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n  }\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    setLoading(true);\r\n    getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n      setPage(0);\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (projectID) => {\r\n    setCurID(projectID);\r\n    toggleModal(\"delete\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectName, location, projectType } = curState;\r\n    let curRows = initialRows;\r\n    console.log(curRows);\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[\"projectName\"].toLowerCase().indexOf(projectName.toLowerCase()) >= 0 &&\r\n          row[\"location\"].toLowerCase().indexOf(location.toLowerCase()) >= 0 &&\r\n          row[\"projectType\"].toLowerCase().indexOf(projectType.toLowerCase()) >= 0\r\n      )\r\n    );\r\n    setPage(0);\r\n  };\r\n\r\n  const insert = (e) => {\r\n    addProject()\r\n      .then(async (data) => {\r\n        let ID = data.message.projectID;\r\n        history.push(\"/project/\" + ID);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  const edit = (projectID) => {\r\n    history.push(\"/project/\" + projectID);\r\n  };\r\n\r\n  const gate = (projectID) =>{\r\n    history.push(\"/project/\" + projectID + \"/gate\");\r\n  };\r\n\r\n  const del = async (projectID) => {\r\n    delProject(projectID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Project Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows = (rows.length > 0&& !loading? rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage) : rowsPerPage - 1);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Projects</title>\r\n      </Helmet>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this project?\"\r\n      />\r\n      <ConfirmModal\r\n        hide={toggle.add}\r\n        success={() => {\r\n          insert();\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"add\");\r\n        }}\r\n        title=\"Confirm Addition\"\r\n        body=\"Add a new project?\"\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Projects</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Row className=\"d-flex\" style={{padding:\"10px 0px\"}}>\r\n          <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-info align-items-center d-flex\"\r\n                type=\"button\"\r\n                onClick={reload}\r\n              >\r\n              <RefreshIcon/>\r\n                &nbsp; Refresh \r\n              </Button>\r\n          </Col>\r\n          <div style={{\"flex-grow\":\"1\"}}></div>\r\n          <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n          </Col>\r\n        </Row>\r\n        <Form onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row className=\"d-flex\">\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectName\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectName}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"location\"\r\n                placeholder=\"Location\"\r\n                onChange={handleChange}\r\n                value={state.location}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectType\"\r\n                placeholder=\"Type\"\r\n                onChange={handleChange}\r\n                value={state.projectType}\r\n              />\r\n            </Col>\r\n            \r\n            <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell><b>Project</b></TableCell>\r\n                <TableCell align=\"left\"><b>Location</b></TableCell>\r\n                <TableCell align=\"left\"><b>Type</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading?\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={4}>\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n                </TableCell>\r\n              </TableRow>:\r\n              rows.length > 0?\r\n              (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.projectName}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.location}</TableCell>\r\n                  <TableCell align=\"left\">{row.projectType}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <IconButton onClick={() => gate(row.projectID)}>\r\n                      <SignpostSplitFill\r\n                        data-value={row.projectID}\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => edit(row.projectID)}>\r\n                      <PencilSquare\r\n                        data-value={row.projectID}\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => activateModal(row.projectID)}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={4}>\r\n                  No Projects Found\r\n                </TableCell>\r\n              </TableRow>\r\n            }\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Projects };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { alertService, getProjectInfo, updateProjectInfo , getObjectTypes} from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function ProjectForm() {\r\n  let { projectID }= useParams();\r\n  const [validated, setValidated] = useState(false);\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    projectType: \"\",\r\n    location: \"\",\r\n    contactNumber: \"\",\r\n    maCompany: \"\",\r\n    equipManu: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectTypes, setProjectTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Project Info!\", error);\r\n      });\r\n      getObjectTypes(\"project\")\r\n      .then(async (data) => {\r\n        setProjectTypes(Object.entries(data.message).map((type)=>({\r\n          id: type[0],\r\n          name: type[1].name\r\n        })));\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Project Types!\", error);\r\n      });\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()) update();\r\n  };\r\n\r\n  const update = () => {\r\n    updateProjectInfo(projectID, state)\r\n      .then(async (data) => {\r\n        alertService.success('Update Successful!');\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Project Info</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Project ID\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control type=\"text\" placeholder={projectID} readOnly />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Project Name\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              placeholder=\"Name\"\r\n              id=\"projectName\"\r\n              name=\"projectName\"\r\n              value={state.projectName}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Name is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Project Type\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              custom\r\n              required\r\n              as=\"select\"\r\n              id=\"projectType\"\r\n              name=\"projectType\"\r\n              value={state.projectType===null? '':state.projectType}\r\n              onChange={handleChange}\r\n            >\r\n              <option value={''}>--Select Type--</option>\r\n              {\r\n                projectTypes.map((type)=>(\r\n                  <option value={type.id}>{type.name}</option>\r\n                ))\r\n              }\r\n            </Form.Control>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Type is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Location\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"location\"\r\n              name=\"location\"\r\n              value={state.location}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Location is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Equipment Manufacturer\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"equipManu\"\r\n              name=\"equipManu\"\r\n              value={state.equipManu}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Equipment Manufacturer is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n      </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            MA Company\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"maCompany\"\r\n              name=\"maCompany\"\r\n              value={state.maCompany}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              MA Company is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Contact No.\r\n          </Form.Label>\r\n          <Form.Label\r\n            column\r\n            sm={4}\r\n          >\r\n            <PhoneInput\r\n              inputProps={{\r\n                required: true\r\n              }}\r\n              placeholder=\"+XX-XXXX-XXXX\"\r\n              id=\"contactNumber\"\r\n              name=\"contactNumber\"\r\n              country={\"sg\"}\r\n              value={String(state.contactNumber)}\r\n              onChange={(e)=>{\r\n                setState((prevState) => ({\r\n                  ...prevState,\r\n                  [\"contactNumber\"]: parseInt(e)\r\n                }));\r\n              }}\r\n              isValid={(value, country) => {\r\n                if (value.length === 0) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              }}\r\n            />\r\n          </Form.Label>\r\n        </Form.Group>\r\n\r\n        \r\n        <Form.Group as={Row}>\r\n          <Col sm={8}\r\n           className=\"d-flex justify-content-end\">\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ProjectForm };\r\n","import { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, InputGroup, Breadcrumb } from \"react-bootstrap\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport { alertService, getBusinessInfo, updateBusinessInfo, getProjectInfo } from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function BusinessDetails(props) {\r\n  let {projectID} = useParams();\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    barrierDelay: 5,\r\n    networkWarningDuration: 5,\r\n    instantImgUpload: false,\r\n    vehicleColorDetect: false,\r\n    localImgStore: false\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    /*   \r\n    getBusinessInfo(projectID)\r\n    .then(async (data) => {\r\n      setState(data.message)\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    let res = {\r\n      barrierDelay: 5,\r\n      networkWarningDuration: 5,\r\n      instantImgUpload: false,\r\n      vehicleColorDetect: false,\r\n      localImgStore: false\r\n    };\r\n    setState(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    update();\r\n  };\r\n\r\n  const update = () => {\r\n    /* Pending API for project details update*/\r\n  };\r\n\r\n  function myFormat(num) {\r\n    return num + \" mins\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Business Details</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Breadcrumb>\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      </Breadcrumb>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Barrier Opening Delay\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"barrierDelay\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.barrierDelay}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Duration before issuing network down warning\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"networkWarningDuration\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.networkWarningDuration}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Instant Image Upload to Server\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.instantImgUpload}\r\n              type=\"switch\"\r\n              id=\"instantImgUpload\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Local Storage of images after uploading\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.localImgStore}\r\n              type=\"switch\"\r\n              id=\"localImgStore\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Vehicle Colour Detection\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.vehicleColorDetect}\r\n              type=\"switch\"\r\n              id=\"vehicleColorDetect\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col sm={8}\r\n           className=\"d-flex justify-content-end\">\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { BusinessDetails };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Spinner } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, DeviceModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getDevice, alertService, delDevice, getObjectTypes, getProjectInfo, getGateInfo} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport SignalCellularConnectedNoInternet0BarIcon from '@material-ui/icons/SignalCellularConnectedNoInternet0Bar';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nexport function Devices (){\r\n    let { projectID, gateID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [loading,setLoading] = useState(false);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [gateName, setGateName] = useState(\"\");\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(null);\r\n  const [dummy, setDummy] = useState(false);\r\n  const [deviceTypes, setDeviceTypes] = useState([]);\r\n  const [deviceTypeNames, setDeviceTypeNames] = useState([]);\r\n  const reload = () =>{\r\n    setLoading(true);\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    getGateInfo(gateID)\r\n    .then(async (data) => {\r\n      setGateName(data.message.gateName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate Info, there was an error!\", error);\r\n    });\r\n    getDevice(gateID, [\"deviceID\", \"deviceName\", \"deviceType\", \"deviceStatus\",\"deviceIP\"])\r\n      .then(async (data) => {\r\n        setLoading(false);\r\n        console.log(data.content);\r\n        setRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Device, there was an error!\", error);\r\n      });\r\n      getObjectTypes(\"device\")\r\n    .then(async (data) => {\r\n      setDeviceTypeNames(data.message);\r\n      setDeviceTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Device Types!\", error);\r\n    });\r\n    setPage(0);\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (deviceID) => {\r\n    delDevice(deviceID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Device Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Delete Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows = (rows.length > 0 && !loading? rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage) : rowsPerPage - 1);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this device?\"\r\n      />\r\n      <DeviceModal\r\n        deviceTypes = {deviceTypes}\r\n        hide={toggle.edit}\r\n        deviceID = {curID}\r\n        gateID = {gateID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item href={\"/project/\"+projectID+\"/gate\"}>Gates</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Devices</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"d-flex align-items-center\">\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName} / {gateName}</h5>\r\n      <div style={{\"flex-grow\":\"1\"}}></div>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n          <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-info align-items-center d-flex\"\r\n                type=\"button\"\r\n                onClick={reload}\r\n              >\r\n              <RefreshIcon/>\r\n                &nbsp; Refresh \r\n              </Button>\r\n          </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"center\"><b>IP</b></TableCell>\r\n                <TableCell align=\"center\"><b>Status</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading?\r\n              <TableRow>\r\n              <TableCell align=\"center\" colSpan={6}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n              </TableCell>\r\n            </TableRow>:\r\n            rows.length > 0?\r\n              (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceName}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                  {row.deviceType===null?null: (deviceTypeNames[row.deviceType]===undefined? null: deviceTypeNames[row.deviceType].name)}\r\n                   </TableCell>\r\n                  <TableCell align=\"center\">{(row.deviceIP==\"\"||row.deviceIP==null)?\"-\":row.deviceIP}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceStatus==='online'?\r\n                  <Tooltip title=\"Online\">\r\n                  <SignalCellularAltIcon style={{ color: \"#4caf50\" }}/>\r\n                  </Tooltip>\r\n                  :\r\n                  <Tooltip title=\"Offline\">\r\n                  <SignalCellularConnectedNoInternet0BarIcon style={{ color: \"#f44336\" }}/>\r\n                  </Tooltip>\r\n                  }</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={6}>\r\n                  No Devices Found\r\n                </TableCell>\r\n              </TableRow>}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Devices };","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Spinner } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu, Unlock } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, GateModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getGate, alertService, delGate, getObjectTypes, openGate, getProjectInfo, getProjects} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nexport function Gates (){\r\n    let { projectID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [loading,setLoading] = useState(false);\r\n  const [gateTypes, setGateTypes] = useState([]);\r\n  const [gateTypeNames, setGateTypeNames] = useState([]);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    setLoading(true);\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    getGate(projectID, [\"gateID\", \"gateName\", \"gateType\"])\r\n    .then(async (data) => {\r\n      setLoading(false);\r\n      console.log(data.content);\r\n      setRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate, there was an error!\", error);\r\n    });\r\n    getObjectTypes(\"gate\")\r\n    .then(async (data) => {\r\n      setGateTypeNames(data.message);\r\n      setGateTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Gate Types!\", error);\r\n    });\r\n    setPage(0);\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const openGateFunc = (gateID, gateName) =>{\r\n    openGate(gateID)\r\n    .then(async (data) => {\r\n      alertService.success(\"Opened Gate \"+gateName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Open Gate!\", error);\r\n    });\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const devices = (gateID) => {\r\n    history.push(pathname +\"/\"+ String(gateID));\r\n  };\r\n\r\n  const del = async (gateID) => {\r\n    delGate(gateID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Gate Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Delete Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows = (rows.length > 0 && !loading? rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage) : rowsPerPage - 1);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this gate?\"\r\n      />\r\n      <GateModal\r\n        gateTypes = {gateTypes}\r\n        hide={toggle.edit}\r\n        gateID = {curID}\r\n        newState = {modal}\r\n        projectID = {projectID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Gates</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"d-flex align-items-center\">\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      <div style={{\"flex-grow\":\"1\"}}></div>\r\n        <Form inline onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n          <Col sm=\"auto\">\r\n            <Button\r\n              className=\"btn btn-info align-items-center d-flex\"\r\n              type=\"button\"\r\n              onClick={reload}\r\n            >\r\n            <RefreshIcon/>\r\n              &nbsp; Refresh \r\n            </Button>\r\n          </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    setModal(true);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading?\r\n              <TableRow>\r\n              <TableCell align=\"center\" colSpan={4}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n              </TableCell>\r\n            </TableRow>:\r\n              rows.length > 0 ?              \r\n              (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.gateID}</TableCell>\r\n                  <TableCell align=\"center\">{row.gateName}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                  {row.gateType===null?null: (gateTypeNames[row.gateType]===undefined? null: gateTypeNames[row.gateType].name)}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Devices\">\r\n                    <IconButton \r\n                    style={{padding:\"5px 10px\"}}\r\n                    onClick={() => {\r\n                        devices(row.gateID);\r\n                    }}>\r\n                      <Cpu\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton\r\n                    style={{padding:\"5px 10px\"}}\r\n                     onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        setModal(false);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Open Gate\">\r\n                    <IconButton\r\n                    style={{padding:\"5px 10px\"}}\r\n                     onClick={() => {\r\n                        openGateFunc(row.gateID, row.gateName);\r\n                    }}>\r\n                      <Unlock\r\n                        size={21}\r\n                        color=\"green\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton\r\n                    style={{padding:\"5px 10px\"}}\r\n                     onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={6}>\r\n                  No Gates Found\r\n                </TableCell>\r\n              </TableRow>}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Gates };","import React, { useState, useEffect } from \"react\";\r\nimport { Breadcrumb } from \"react-bootstrap\";\r\nimport {Input , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { TablePaginationActions } from \"../../components/index.js\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getProjectInfo, alertService} from '../../services/index.js';\r\n\r\nimport { PencilSquare } from \"react-bootstrap-icons\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport function LedConfig(props) {\r\n  let {projectID} = useParams();\r\n  const [rows, setRows] = useState([]);\r\n  const [curID, setCurID] = useState(null);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    trigger: \"\",\r\n    voiceMsg: \"\",\r\n    textMsg: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    /*getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setInitialRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n    let res = [\r\n        {\r\n            id: 1,\r\n            trigger: \"Trigger 1\",\r\n            voiceMsg: \"Sample 1\",\r\n            textMsg: \"Sample 01\"\r\n        },\r\n        {\r\n            id: 2,\r\n            trigger: \"Trigger 2\",\r\n            voiceMsg: \"Sample 2\",\r\n            textMsg: \"Sample 02\"\r\n        },\r\n        {\r\n            id: 3,\r\n            trigger: \"Trigger 3\",\r\n            voiceMsg: \"Sample 3\",\r\n            textMsg: \"Sample 03\"\r\n        },\r\n        {\r\n            id: 4,\r\n            trigger: \"Trigger 4\",\r\n            voiceMsg: \"Sample 4\",\r\n            textMsg: \"Sample 04\"\r\n        },\r\n        {\r\n            id: 5,\r\n            trigger: \"Trigger 5\",\r\n            voiceMsg: \"Sample 5\",\r\n            textMsg: \"Sample 05\"\r\n        },\r\n        {\r\n            id: 6,\r\n            trigger: \"Trigger 6\",\r\n            voiceMsg: \"Sample 6\",\r\n            textMsg: \"Sample 06\"\r\n        }\r\n    ];\r\n    setRows(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const save = () =>{\r\n    // API\r\n    //reload();\r\n  }\r\n\r\n  const edit = (vals) =>{\r\n    const {id, trigger, voiceMsg, textMsg} = vals;\r\n    setState({\r\n        trigger, \r\n        voiceMsg, \r\n        textMsg});\r\n    setCurID(id);\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setCurID(null);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>LED Configuration</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Breadcrumb>\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      </Breadcrumb>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Trigger</TableCell>\r\n                <TableCell align=\"center\">Voice Message</TableCell>\r\n                <TableCell align=\"center\">Text Message</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.trigger}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"voiceMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.voiceMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.voiceMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"textMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.textMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.textMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"right\"  style={{padding:0}}>\r\n                    {curID === null?\r\n                        (<IconButton onClick={() => edit(row)}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            color=\"royalblue\"\r\n                            />\r\n                        </IconButton>)\r\n                        :(\r\n                        curID === row.id?\r\n                        <div>\r\n                            <IconButton onClick={() => save()}>\r\n                                <SaveIcon\r\n                                size={21}\r\n                                color=\"primary\"\r\n                                />\r\n                            </IconButton>\r\n                            <IconButton onClick={() => setCurID(null)}>\r\n                                <CloseIcon\r\n                                size={21}\r\n                                color=\"error\"\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                        :\r\n                        (<IconButton disabled = {true}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            />\r\n                        </IconButton>)\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { LedConfig };\r\n","import {\r\n  ProjectForm,\r\n  BusinessDetails,\r\n  Devices,\r\n  LedConfig,\r\n  Gates\r\n} from \"./projectSubPages/index.js\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport {Nav, Tab} from \"react-bootstrap\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\nexport function EditProject(props) {\r\n  let history = useHistory();\r\n  let { path, url } = useRouteMatch();\r\n  let {pathname} = useLocation();\r\n  let page = pathname.split('/')[3];\r\n  const direct = (path) =>{\r\n    history.push(url+path);\r\n  }\r\n  return (\r\n    <div className=\"tabModal\" style={{background:\"transparent\"}}>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Projects</title>\r\n      </Helmet>\r\n      <Tab.Container id=\"left-tabs-example\" >\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/info\")}} active = {page===\"info\"}>Infomation</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/business\")}} active = {page===\"business\"}>Business</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/gate\")}} active = {page===\"gate\"}>Gates</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/ledconfig\")}} active = {page===\"ledconfig\"}>LED Config</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n          <Switch>\r\n            <Route exact path={`${path}/info`}>\r\n              <ProjectForm />\r\n            </Route>\r\n            <Route exact path={`${path}/business`}>\r\n              <BusinessDetails />\r\n            </Route>\r\n            <Route exact path={`${path}/gate/:gateID`}>\r\n              <Devices />\r\n            </Route>\r\n            <Route exact path={`${path}/gate`}>\r\n              <Gates />\r\n            </Route>\r\n            <Route exact path={`${path}/ledconfig`}>\r\n              <LedConfig />\r\n            </Route>\r\n            <Route path={path}>\r\n              <Redirect to={`${url}/info`} />\r\n            </Route>\r\n          </Switch>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { EditProject };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Modal,Spinner } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport {getProjects, \r\n  getSpecialPlate,\r\n  delSpecialPlate,\r\n  updateSpecialPlate,\r\n  addSpecialPlate } from '../services/index.js';\r\n  import {Helmet} from \"react-helmet\";\r\n\r\nexport function PlateRegex({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false,\r\n    edit: false\r\n  });\r\n  const [state, setState] = useState({\r\n    projectID: NaN,\r\n    actualPlate: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectID: NaN,\r\n    actualPlate: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectID: NaN,\r\n      actualPlate: \"\"\r\n    });\r\n    setCurState({\r\n      projectID: NaN,\r\n      actualPlate: \"\"\r\n    });\r\n  }\r\n  const [val, setVal] = useState({\r\n    projectID: NaN,\r\n    matchPlate: \"\",\r\n    actualPlate: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const [loading,setLoading] = useState(false);\r\n  const reload = () =>{\r\n    setLoading(true);\r\n    getSpecialPlate([\"projectID\", \"matchPlate\", \"actualPlate\"])\r\n      .then(async (data) => {\r\n        setLoading(false);\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n      setPage(0);\r\n  }\r\n  const func = async (val) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element.projectID] = element.projectName;\r\n    });\r\n    return await temp;\r\n  };\r\n  useEffect(() => {\r\n    getProjects([\"projectID\", \"projectName\"])\r\n    .then(async (data) => {\r\n      setProjects(data.content);\r\n      func(data.content).then(async(list)=>{\r\n        setProjectNames(await list);\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },projectNames);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleChangeVal = (e) =>{\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setVal((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (values) => {\r\n    let {projectID, matchPlate, actualPlate} = values;\r\n    setValidated(false);\r\n    setVal({\r\n        projectID,\r\n        matchPlate,\r\n        actualPlate\r\n      });\r\n    toggleModal(\"edit\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectID, actualPlate } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          (Number.isNaN(projectID) || row[\"projectID\"] === projectID) &&\r\n          String(row[\"actualPlate\"]).toLowerCase().indexOf(actualPlate.toLowerCase()) >= 0\r\n      )\r\n    );\r\n    setPage(0);\r\n  };\r\n\r\n  const insert = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n      addSpecialPlate(val)\r\n      .then(async (data) => {\r\n        reload();\r\n        toggleModal(\"add\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const edit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n        updateSpecialPlate(val)\r\n        .then(async (data) => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const del = (id) => {\r\n    delSpecialPlate(id)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Regex</title>\r\n      </Helmet>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this regex?\"\r\n      />\r\n      <Modal show={toggle.add} onHide={()=>toggleModal(\"add\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={insert}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4} align=\"right\">\r\n            Project Name\r\n          </Form.Label>\r\n          <Col sm={6}>\r\n              <Form.Control\r\n                custom\r\n                required\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChangeVal}\r\n                value={val.projectID}\r\n              >\r\n                  <option value={null}>--Select a Project--</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Project Name is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n        </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={4} align=\"right\">\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={4} align=\"right\">\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"add\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    <Modal show={toggle.edit} onHide={()=>toggleModal(\"edit\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={edit}>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={4} align=\"right\">\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={4} align=\"right\">\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"edit\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Plate Regex</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row className = \"d-flex\">\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-info align-items-center d-flex\"\r\n                type=\"button\"\r\n                onClick={reload}\r\n              >\r\n              <RefreshIcon/>\r\n                &nbsp; Refresh \r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                setVal({\r\n                    projectID: \"\",\r\n                    matchPlate: \"\",\r\n                    actualPlate: \"\"\r\n                    });\r\n                  setValidated(false);\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n            <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectID}\r\n              >\r\n                  <option value={null}>All Projects</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"actualPlate\"\r\n                placeholder=\"Actual Plate\"\r\n                onChange={handleChange}\r\n                value={state.actualPlate}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\"><b>Project</b></TableCell>\r\n                <TableCell align=\"center\"><b>Regex of Plate</b></TableCell>\r\n                <TableCell align=\"center\"><b>Actual Plate</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading?\r\n              <TableRow>\r\n              <TableCell align=\"center\" colSpan={6}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n              </TableCell>\r\n            </TableRow>:\r\n            rows.length > 0?\r\n            (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.matchPlate}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {projectNames[row.projectID]}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.matchPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.actualPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {activateModal(row)}}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.matchPlate);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={4}>\r\n                  No Plate Regex Found\r\n                </TableCell>\r\n              </TableRow>}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { PlateRegex };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Spinner } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { ImageModal, TablePaginationActions, ExportRecordModal } from \"../components/index.js\";\r\nimport {getMovementLogs, getObjectTypes, alertService } from '../services/index.js';\r\nimport { LockFill, UnlockFill } from \"react-bootstrap-icons\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nimport { InputGroup, DatePicker } from 'rsuite';\r\n\r\nfunction pad2(n) { return n < 10 ? '0' + n : n }\r\nfunction dateToString(date){\r\n  if(date===null)return \"\";\r\n  else return date.getFullYear().toString() +'-'+ pad2(date.getMonth() + 1) +'-'+ pad2( date.getDate()) +' '+ pad2( date.getHours() ) +':'+ pad2( date.getMinutes() ) +':'+ pad2( date.getSeconds() );\r\n}\r\n\r\nfunction minStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 > str2)return str2;\r\n  else return str1;\r\n}\r\nfunction maxStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 < str2)return str2;\r\n  else return str1;\r\n}\r\n\r\nexport function Records({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n  const [gateTypes, setGateTypes] = useState({});\r\n  const [toggle, setToggle] = useState(false);\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadImage, setLoadImage] = useState({});\r\n  const  queryFields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\"\r\n  ];\r\n  const fieldPlaceholder = {\r\n    projectName: \"Project\",\r\n    vehicleType: \"Vehicle Type\",\r\n    isOpened: \"Open?\",\r\n    gateName: \"Gate Name\",\r\n    gateType: \"Gate Type\",\r\n    originalPlate: \"Original Plate\",\r\n    confirmedPlate: \"Actual Plate\",\r\n    detectionTime: \"Detection Time\",\r\n    confirmedTime: \"Confirmed Time\",\r\n    image1: \"Image\",\r\n    plateImage: \"Plate Image\"\r\n  };\r\n  const fields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"isOpened\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"detectionTime\",\r\n    \"confirmedTime\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\"\r\n  ];\r\n  const fieldLength = {\r\n    projectName: \"120px\",\r\n    vehicleType: \"120px\",\r\n    isOpened: \"0px\",\r\n    gateName: \"120px\",\r\n    gateType: \"100px\",\r\n    originalPlate: \"140px\",\r\n    confirmedPlate: \"140px\",\r\n    detectionTime: \"160px\",\r\n    confirmedTime: \"160px\",\r\n    image1: \"90px\",\r\n    plateImage: \"90px\"\r\n  };\r\n  const fieldHeight = {\r\n    image1: \"50px\",\r\n    plateImage: \"50px\",\r\n    isOpened: \"30px\"\r\n  }\r\n  const [state, setState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\",\r\n    curField2: \"gateName\",\r\n    val2: \"\"\r\n  });\r\n  const [timeState, setTimeState] = useState({\r\n    startTime: \"\",\r\n    endTime: \"\"\r\n  })\r\n  const [curTimeState, setCurTimeState] = useState({\r\n    startTime: \"\",\r\n    endTime: \"\"\r\n  })\r\n  const [curState, setCurState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\",\r\n    curField2: \"gateName\",\r\n    val2: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const reload = () =>{\r\n    let filters = (timeState.startTime===\"\"&&timeState.endTime===\"\")?{}:{\r\n      detectionTime : timeState.startTime+'|'+timeState.endTime\r\n    };\r\n    getMovementLogs(fields.concat(\"logID\"), filters)\r\n      .then(async (data) => {\r\n      setLoading(false);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n      setPage(0);\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n    setLoading(true);\r\n    getObjectTypes(\"gate\")\r\n    .then(async (data) => {\r\n      setGateTypes(data.message);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Gate Types!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },[curTimeState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    if(id===\"curField\"){\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        curField: value,\r\n        val: \"\"\r\n      }));\r\n    }else if(id===\"curField2\"){\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        curField2: value,\r\n        val2: \"\"\r\n      }));\r\n    }else{\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (value, id) => {\r\n    setTimeState((prevState)=>({\r\n      ...prevState,\r\n      [id]:value\r\n    }));\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { curField, val,curField2, val2  } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[curField].toLowerCase().indexOf(val.toLowerCase()) >= 0 &&\r\n          row[curField2].toLowerCase().indexOf(val2.toLowerCase()) >= 0 \r\n      ).sort(\r\n        (a,b)=> (a.detectionTime < b.detectionTime) ? 1 : -1\r\n      )\r\n    );\r\n    setPage(0);\r\n  };\r\n  \r\n  const reset = async (e) =>{\r\n    setState((prevState)=>({\r\n      ...prevState,\r\n      val: \"\",\r\n      val2:\"\"\r\n    }));\r\n    setCurState((prevState)=>({\r\n      ...prevState,\r\n      val: \"\",\r\n      val2:\"\"\r\n    }));\r\n    setCurTimeState({\r\n      startTime: \"\",\r\n      endTime: \"\"\r\n    });\r\n    setTimeState({\r\n      startTime: \"\",\r\n      endTime: \"\"\r\n    });\r\n  }\r\n  \r\n  const addImages = (logID) =>{\r\n    getMovementLogs([\"image1\",\"plateImage\"], {logID})\r\n      .then(async (data) => {\r\n        setLoadImage((prevState)=>({\r\n          ...prevState,\r\n          [logID]: data.content[0]\r\n        }));\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n      console.log(loadImage);\r\n  }\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows = (rows.length > 0 && !loading? rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage) : rowsPerPage - 1);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Records</title>\r\n      </Helmet>\r\n      <ImageModal\r\n      src = {imageSrc}\r\n      toggleModal={()=>{\r\n        setImageSrc(null);\r\n      }}\r\n      />\r\n      {toggle?\r\n      <ExportRecordModal\r\n        hide={toggle}\r\n        toggleModal={() => {\r\n          setToggle(false);\r\n        }}\r\n      />:null}\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Entry Exit Records</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Row className=\"d-flex\" style={{padding:\"10px 0px\"}}>\r\n          <Col sm=\"auto\">\r\n            <InputGroup style={{\"background-color\":\"white\"}}>\r\n              <InputGroup.Addon>From</InputGroup.Addon>\r\n              <DatePicker \r\n              format=\"YYYY-MM-DD HH:mm:ss\" \r\n              block appearance=\"subtle\"\r\n              value={timeState.startTime}\r\n              onChange={(val)=>{\r\n                handleTimeChange(dateToString(val), \"startTime\");\r\n                handleTimeChange(maxStr(dateToString(val),timeState.endTime), \"endTime\");\r\n              }}\r\n              ranges={[\r\n                {\r\n                  label: 'Now',\r\n                  value: new Date()\r\n                }\r\n              ]}\r\n              placeholder=\"YYYY-MM-DD HH:MM:SS\"/>\r\n              <InputGroup.Addon>To</InputGroup.Addon>\r\n              <DatePicker \r\n              format=\"YYYY-MM-DD HH:mm:ss\" \r\n              block appearance=\"subtle\"\r\n              value={timeState.endTime}\r\n              onChange={(val)=>{\r\n                handleTimeChange(dateToString(val), \"endTime\");\r\n                handleTimeChange(minStr(dateToString(val),timeState.startTime), \"startTime\");\r\n              }} \r\n              ranges={[\r\n                {\r\n                  label: 'Now',\r\n                  value: new Date()\r\n                }\r\n              ]}\r\n              placeholder=\"YYYY-MM-DD HH:MM:SS\"/>\r\n            </InputGroup>\r\n          </Col>\r\n          <div style={{\"flex-grow\":\"1\"}}></div>\r\n          <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-info align-items-center d-flex\"\r\n                type=\"button\"\r\n                onClick={()=>{\r\n                  setLoading(true);\r\n                  reload();\r\n                }}\r\n              >\r\n              <RefreshIcon/>\r\n                &nbsp; Refresh \r\n              </Button>\r\n          </Col>\r\n          <Col sm=\"auto\">\r\n            <Button\r\n              className=\"btn btn-success align-items-center d-flex\"\r\n              type=\"button\"\r\n              onClick={()=>setToggle(true)}\r\n            >\r\n            <GetAppIcon/>\r\n              &nbsp; Export \r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Form onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row className=\"d-flex\">\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"curField\"\r\n                onChange={handleChange}\r\n                value={state.curField}\r\n              >\r\n                  {queryFields.map((queryField)=>(\r\n                      <option value={queryField}>{fieldPlaceholder[queryField]}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"val\"\r\n                placeholder={fieldPlaceholder[state.curField]}\r\n                onChange={handleChange}\r\n                value={state.val}\r\n              />  \r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"curField2\"\r\n                onChange={handleChange}\r\n                value={state.curField2}\r\n              >\r\n                  {queryFields.map((queryField)=>(\r\n                      <option value={queryField}>{fieldPlaceholder[queryField]}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"val2\"\r\n                placeholder={fieldPlaceholder[state.curField2]}\r\n                onChange={handleChange}\r\n                value={state.val2}\r\n              />  \r\n            </Col>\r\n            <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state);setCurTimeState(timeState)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper} className=\"overflowTable scrollbar-grey\">\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {fields.map((field) =>(\r\n                  <TableCell align=\"center\" style={{\"min-width\":fieldLength[field]}}><b>{fieldPlaceholder[field]}</b></TableCell>\r\n                ))}\r\n                <TableCell align=\"center\" style={{\"min-width\":fieldLength[\"image1\"]}}><b>{fieldPlaceholder[\"image1\"]}</b></TableCell>\r\n                <TableCell align=\"center\" style={{\"min-width\":fieldLength[\"plateImage\"]}}><b>{fieldPlaceholder[\"plateImage\"]}</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            {loading? \r\n            <TableBody>\r\n            <div className = \"loadingTable\" style={{ height: 53 * rowsPerPage }}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n              <TableRow style={{ height: 53 * rowsPerPage }}>\r\n                  <TableCell colSpan={13} />\r\n                </TableRow>\r\n            </TableBody>\r\n            :\r\n            <TableBody>\r\n              {rows.length>0?\r\n              (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.logID}>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.vehicleType}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.isOpened === true?\r\n                    <UnlockFill color=\"#64D381\" size={25} />:\r\n                    <LockFill color=\"red\" size={25} />}\r\n            </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.gateName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.gateType===null?null: (gateTypes[row.gateType]===undefined? null: gateTypes[row.gateType].name)}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.detectionTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.confirmedTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.originalPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {(row.confirmedPlate===null||row.confirmedPlate==\"\")?null:\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.confirmedPlate}</u>\r\n                      </div>\r\n                    </div>}\r\n                  </TableCell>\r\n                  <TableCell style={{padding:\"0 10px\"}} align=\"center\">\r\n                    {\r\n                      loadImage[row.logID] === undefined?\r\n                      <IconButton onClick={() => addImages(row.logID)}>\r\n                        <GetAppIcon/>\r\n                      </IconButton>:\r\n                      <img \r\n                      className=\"imageClick\"\r\n                      onClick = {()=>setImageSrc(loadImage[row.logID].image1)} \r\n                      style={{\"height\":fieldHeight.image1}} \r\n                      src={loadImage[row.logID].image1}/>\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell style={{padding:\"0 10px\"}} align=\"center\">\r\n                  {\r\n                      loadImage[row.logID] === undefined?\r\n                      <IconButton onClick={() => addImages(row.logID)}>\r\n                        <GetAppIcon/>\r\n                      </IconButton>:\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(loadImage[row.logID].plateImage)} \r\n                    style={{\"height\":fieldHeight.plateImage}} \r\n                    src={loadImage[row.logID].plateImage} />\r\n                  }\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={11}>\r\n                  No Records Found\r\n                </TableCell>\r\n              </TableRow>\r\n            }\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 50 * emptyRows }}>\r\n                  <TableCell colSpan={11} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          }\r\n          </Table>\r\n        </TableContainer>\r\n        <TableRow className=\"d-flex justify-content-center\">\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 50]}\r\n              colSpan={11}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n        </TableRow>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Records };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport function ParkRecords({ match }) {\r\n  return (<div className=\"d-flex justify-content-center\"><h1>Pending API</h1></div>);\r\n}\r\n\r\nexport default { ParkRecords };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Spinner } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, RulesModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getGate, alertService, delGate, getProjects, getAccessRule, delAccessRule} from '../services/index.js';\r\nimport { Directions, MonetizationOn } from \"@material-ui/icons\";\r\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nexport function ParkingRules (){\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [project,setProject] = useState(\"\");\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const [gateNames, setGateNames] = useState({});\r\n  const [loading,setLoading] = useState(false);\r\n  const [projects,setProjects] = useState([]);\r\n  const func = async (val, inputField, outputField) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element[inputField]] = element[outputField];\r\n    });\r\n    return await temp;\r\n  };\r\n  const reloadProjects = () =>{\r\n    getProjects([\"projectID\", \"projectName\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setProjects(data.content);\r\n        func(data.content, \"projectID\", \"projectName\").then(async(list)=>{\r\n          setProjectNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reloadProjects();\r\n  }, [dummy]);\r\n\r\n  const reload = () =>{\r\n    if(project===\"\"){\r\n      setRows([]);\r\n    }else{\r\n      setLoading(true);\r\n      getAccessRule(project, [\"accessRuleID\", \"accessRuleName\", \"isChargeable\", \"gates\"])\r\n      .then(async (data) => {\r\n        setLoading(false);\r\n        console.log(data.content);\r\n        setRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n    }\r\n    setPage(0);\r\n  }\r\n\r\n  const reloadGates = () =>{\r\n    getGate(project,[\"gateID\",\"gateName\"])\r\n      .then(async (data) => {\r\n        func(data.content, \"gateID\", \"gateName\").then(async(list)=>{\r\n          setGateNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n    reloadGates();\r\n  },[project]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (accessRuleID) => {\r\n    delAccessRule(accessRuleID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Rule Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Delete Rule, There was an error!\", error);\r\n    });\r\n  };\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows = (rows.length > 0? rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage) : rowsPerPage - 1);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Rules</title>\r\n      </Helmet>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this rule?\"\r\n      />\r\n      {toggle.edit?\r\n      <RulesModal\r\n        hide={toggle.edit}\r\n        projectID = {project}\r\n        projectName = {projectNames[project]}\r\n        accessRuleID = {curID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />:null}\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Access Rules</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row className = \"d-flex\">\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                onChange={(e)=>{\r\n                  setProject(e.target.value);\r\n                }}\r\n                value={project}\r\n              >\r\n                <option value=\"\">--Select a Project--</option>\r\n                  {projects.map((val)=>(\r\n                      <option value={val.projectID}>{val.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n              disabled={project===\"\"}\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n            <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-info align-items-center d-flex\"\r\n                type=\"button\"\r\n                onClick={reload}\r\n              >\r\n              <RefreshIcon/>\r\n                &nbsp; Refresh \r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>Project</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Gates</b></TableCell>\r\n                <TableCell align=\"center\"><b>Chargeable</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading?\r\n              <TableRow>\r\n              <TableCell align=\"center\" colSpan={5}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n              </TableCell>\r\n            </TableRow>:\r\n            rows.length > 0 ?\r\n            (rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{projectNames[project]}</TableCell>\r\n                  <TableCell align=\"center\">{row.accessRuleName}</TableCell>\r\n                  <TableCell align=\"center\">{row.gates===null?null:((row.gates).map((gate)=>(\r\n                    <div>{gate===null?null:gateNames[gate]} <br/></div> \r\n                  )))}</TableCell>\r\n                  <TableCell align=\"center\">{row.isChargeable?\r\n                  <AttachMoneyIcon style={{color:\"#66bb6a\"}}/>\r\n                  :<MoneyOffIcon style={{color:\"red\"}}/>\r\n                  }</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.accessRuleID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.accessRuleID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={5}>\r\n                  No Rules Found\r\n                </TableCell>\r\n              </TableRow>}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ParkingRules };","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Spinner } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, WhitelistModal, TablePaginationActions, ExportWhitelistModal } from \"../components/index.js\";\r\nimport {alertService, getProjects, getAccessRule, \r\n    getWhitelistEntry,\r\n    delWhitelistEntryInfo} from '../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nimport { InputGroup, DatePicker } from 'rsuite';\r\n\r\nfunction pad2(n) { return n < 10 ? '0' + n : n }\r\nfunction dateToString(date){\r\n  if(date===null)return \"\";\r\n  else return date.getFullYear().toString() +'-'+ pad2(date.getMonth() + 1) +'-'+ pad2( date.getDate()) +' '+ pad2( date.getHours() ) +':'+ pad2( date.getMinutes() ) +':'+ pad2( date.getSeconds() );\r\n}\r\n\r\nfunction minStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 > str2)return str2;\r\n  else return str1;\r\n}\r\nfunction maxStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 < str2)return str2;\r\n  else return str1;\r\n}\r\n\r\nexport function Whitelist (){\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [loading,setLoading] = useState(false);\r\n  const [state, setState] = useState({\r\n    plateNumber: \"\",\r\n    tag: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    plateNumber: \"\",\r\n    tag: \"\"\r\n  });\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false,\r\n    export: false\r\n  });\r\n  const [project,setProject] = useState(\"\");\r\n  const [curID, setCurID] = useState(null);\r\n  const [dummy, setDummy] = useState(false);\r\n  const [accessRules, setAccessRules] = useState([]);\r\n  const [accessRuleVals, setAccessRuleVals] = useState({});\r\n  const [timeVar, setTimeVar] = useState(\"startDateTime\");\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const [projects,setProjects] = useState([]);\r\n  const func = async (val, inputField, outputField) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element[inputField]] = element[outputField];\r\n    });\r\n    return await temp;\r\n  };\r\n  const [timeState, setTimeState] = useState({\r\n    startTime: \"\",\r\n    endTime: \"\"\r\n  });\r\n  const [curTimeState, setCurTimeState] = useState({\r\n    startTime: \"\",\r\n    endTime: \"\"\r\n  });\r\n\r\n  const reset = () =>{\r\n    setTimeState({\r\n      startTime: \"\",\r\n      endTime: \"\"\r\n    });\r\n    setCurTimeState({\r\n      startTime: \"\",\r\n      endTime: \"\"\r\n    });\r\n    setState({\r\n      plateNumber: \"\",\r\n      tag: \"\"\r\n    });\r\n    setCurState({\r\n      plateNumber: \"\",\r\n      tag: \"\"\r\n    });\r\n  }\r\n\r\n  const reloadProjects = () =>{\r\n    getProjects([\"projectID\", \"projectName\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setProjects(data.content);\r\n        func(data.content, \"projectID\", \"projectName\").then(async(list)=>{\r\n          setProjectNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Project, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    reloadProjects();\r\n  }, [dummy]);\r\n\r\n  \r\n  const reloadAccessRules = () =>{\r\n    getAccessRule(project,[\"accessRuleID\",\"accessRuleName\",\"projectID\"])\r\n      .then(async (data) => {\r\n        setAccessRules(data.content);\r\n        /*setAccessRules(data.content.map((rule)=>({\r\n          value: rule.accessRuleID,\r\n          label: rule.accessRuleName\r\n        })));*/\r\n        func(data.content,\"accessRuleID\", \"accessRuleName\").then(async(list)=>{\r\n          setAccessRuleVals(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Access Rule, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reloadAccessRules();\r\n    reset();\r\n  },[project]);\r\n\r\n\r\n  const reload = () =>{\r\n    if(project===\"\"){\r\n      setInitialRows([]);\r\n    }else{\r\n      setLoading(true);\r\n      let filters = (timeState.startTime===\"\"&&timeState.endTime===\"\")?{}:{\r\n        [timeVar] : timeState.startTime+'|'+timeState.endTime\r\n      };\r\n      getWhitelistEntry([\"recordID\",\"plateNumber\", \"accessRuleID\", \"tag\", \"startDateTime\",\"endDateTime\"],filters)\r\n      .then(async (data) => {\r\n          setInitialRows(\r\n              data.content.filter((entry)=>\r\n                  entry.accessRuleID !== null &&\r\n                  accessRuleVals[entry.accessRuleID] !== undefined\r\n              )\r\n          );\r\n          setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get entry, there was an error!\", error);\r\n      });\r\n    }\r\n    setPage(0);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },[accessRuleVals, curTimeState]);\r\n\r\n  const filter = () => {\r\n    let curRows = initialRows;\r\n    let {plateNumber, tag} = curState;\r\n    console.log(curRows);\r\n    console.log(plateNumber,tag);\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[\"plateNumber\"].toLowerCase().indexOf(plateNumber.toLowerCase()) >= 0 &&\r\n          row[\"tag\"].toLowerCase().indexOf(tag.toLowerCase()) >=0\r\n      )\r\n    );\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(()=>{\r\n    filter();\r\n  },[initialRows, curState]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n  };\r\n  const handleTimeChange = (value, id) => {\r\n    setTimeState((prevState)=>({\r\n      ...prevState,\r\n      [id]:value\r\n    }));\r\n  };\r\n\r\n  const del = async (recordID) => {\r\n    delWhitelistEntryInfo(recordID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Entry Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Entry, There was an error!\", error);\r\n    });\r\n  };\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Whitelists</title>\r\n      </Helmet>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this entry?\"\r\n      />\r\n      {toggle.edit?\r\n      <WhitelistModal\r\n        hide={toggle.edit}\r\n        projectName = {projectNames[project]}\r\n        ID = {curID}\r\n        accessRules = {accessRules}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />:null}\r\n\r\n      {toggle.export?\r\n      <ExportWhitelistModal\r\n        hide={toggle.export}\r\n        projects={projects}\r\n        projectNames = {projectNames}\r\n        toggleModal={() => {\r\n          toggleModal(\"export\");\r\n        }}\r\n      />:null}\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Whitelist Entries</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row className=\"d-flex\" style={{padding:\"10px 0px\"}}>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                onChange={(e)=>{\r\n                  setProject(e.target.value);\r\n                }}\r\n                value={project}\r\n              >\r\n                <option value=\"\">--Select a Project--</option>\r\n                  {projects.map((val)=>(\r\n                      <option value={val.projectID}>{val.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n              disabled={project===\"\"}\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"d-flex\" style={{padding:\"10px 0px\"}}>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                placeholder=\"Plate No.\"\r\n                id=\"plateNumber\"\r\n                onChange={handleChange}\r\n                value={state.plateNumber}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                placeholder=\"Tag\"\r\n                id=\"tag\"\r\n                onChange={handleChange}\r\n                value={state.tag}\r\n              />\r\n            </Col>\r\n          <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n            <Button\r\n              className=\"btn btn-info align-items-center d-flex\"\r\n              type=\"button\"\r\n              onClick={reload}\r\n            >\r\n            <RefreshIcon/>\r\n              &nbsp; Refresh \r\n            </Button>\r\n          </Col>\r\n          <Col sm=\"auto\">\r\n            <Button\r\n              className=\"btn btn-success align-items-center d-flex\"\r\n              type=\"button\"\r\n              onClick={()=>toggleModal(\"export\")}\r\n            >\r\n            <GetAppIcon/>\r\n              &nbsp; Export \r\n            </Button>\r\n          </Col>\r\n          </Row>\r\n          <Row className=\"d-flex\" style={{padding:\"10px 0px\"}}>\r\n          <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                onChange={(e)=>{\r\n                  setTimeVar(e.target.value);\r\n                }}\r\n                value={timeVar}\r\n              >\r\n                <option value=\"startDateTime\">Start Date</option>\r\n                <option value=\"endDateTime\">End Date</option>\r\n              </Form.Control>\r\n            </Col>\r\n          <Col sm=\"auto\">\r\n            <InputGroup style={{\"background-color\":\"white\"}}>\r\n              <InputGroup.Addon>From</InputGroup.Addon>\r\n              <DatePicker \r\n              format=\"YYYY-MM-DD HH:mm:ss\" \r\n              block appearance=\"subtle\"\r\n              value={timeState.startTime}\r\n              onChange={(val)=>{\r\n                handleTimeChange(dateToString(val), \"startTime\");\r\n                handleTimeChange(maxStr(dateToString(val),timeState.endTime), \"endTime\");\r\n              }}\r\n              ranges={[\r\n                {\r\n                  label: 'Now',\r\n                  value: new Date()\r\n                }\r\n              ]}\r\n              placeholder=\"YYYY-MM-DD HH:MM:SS\"/>\r\n              <InputGroup.Addon>To</InputGroup.Addon>\r\n              <DatePicker \r\n              format=\"YYYY-MM-DD HH:mm:ss\" \r\n              block appearance=\"subtle\"\r\n              value={timeState.endTime}\r\n              onChange={(val)=>{\r\n                handleTimeChange(dateToString(val), \"endTime\");\r\n                handleTimeChange(minStr(dateToString(val),timeState.startTime), \"startTime\");\r\n              }} \r\n              ranges={[\r\n                {\r\n                  label: 'Now',\r\n                  value: new Date()\r\n                }\r\n              ]}\r\n              placeholder=\"YYYY-MM-DD HH:MM:SS\"/>\r\n            </InputGroup>\r\n          </Col>\r\n          <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-primary\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurTimeState(timeState);\r\n                  setCurState(state);\r\n                }}\r\n              >\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n            <Button type=\"button\" variant=\"secondary\" onClick={()=>reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"center\"><b>Plate Number</b></TableCell>\r\n                <TableCell align=\"center\"><b>Project</b></TableCell>\r\n                <TableCell align=\"center\"><b>Access Rule</b></TableCell>\r\n                <TableCell align=\"center\"><b>Tag</b></TableCell>\r\n                <TableCell align=\"center\"><b>Start Date</b></TableCell>\r\n                <TableCell align=\"center\"><b>End Date</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading?\r\n              <TableRow>\r\n              <TableCell align=\"center\" colSpan={7}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n              </TableCell>\r\n            </TableRow>:\r\n            rows.length > 0 ?(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.plateNumber}</u>\r\n                      </div>\r\n                    </div>\r\n                </TableCell>\r\n                  <TableCell align=\"center\">{projectNames[project]}</TableCell>\r\n                  <TableCell align=\"center\">{row.accessRuleID === null? null: accessRuleVals[row.accessRuleID]}</TableCell>\r\n                  <TableCell align=\"center\">{row.tag}</TableCell>\r\n                  <TableCell align=\"center\">{row.startDateTime}</TableCell>\r\n                  <TableCell align=\"center\">{row.endDateTime}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <IconButton onClick={() => {\r\n                        setCurID(row.recordID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.recordID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n              :\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={7}>\r\n                  No Entries Found\r\n                </TableCell>\r\n              </TableRow>}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={7}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Whitelist };","import React, { useContext } from \"react\";\r\nimport { store } from \"./store.js\";\r\n//import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport \"./styles.css\";\r\nimport \"./assets/scrollbar.css\";\r\nimport { NavBar, AlertGroup } from \"./components/index.js\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { Home, Login, Projects, EditProject, PlateRegex, Records, ParkRecords, ParkingRules, Whitelist } from \"./pages/index.js\";\r\n\r\nclass DebugRouter extends Router {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"initial history is: \", JSON.stringify(this.history, null, 2));\r\n    this.history.listen((location, action) => {\r\n      console.log(\r\n        `The current URL is ${location.pathname}${location.search}${location.hash}`\r\n      );\r\n      console.log(\r\n        `The last navigation action was ${action}`,\r\n        JSON.stringify(this.history, null, 2)\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nexport function App() {\r\n  return (\r\n    // <DebugRouter>\r\n    <Router>\r\n      <Switch>\r\n        <PrivateRoute path=\"/home\">\r\n          <Home />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/project/:projectID\">\r\n          <EditProject />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/project\">\r\n          <Projects />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/regex\">\r\n          <PlateRegex />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/records\">\r\n          <Records />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/parking\">\r\n          <ParkRecords />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/accessRules\">\r\n          <ParkingRules />\r\n        </PrivateRoute>\r\n        <PrivateRoute path=\"/whitelist\">\r\n          <Whitelist />\r\n        </PrivateRoute>\r\n        <PublicRoute path=\"/\">\r\n          <Login />\r\n        </PublicRoute>\r\n      </Switch>\r\n    </Router>\r\n    // </DebugRouter>\r\n  );\r\n}\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  let auth = globalState.auth;\r\n  let toggled = globalState.toggled;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        auth ? (\r\n          <div className=\"h-100\">\r\n              <AlertGroup />\r\n            <NavBar />\r\n            <div id=\"content-body\" className={toggled?\"content-body-collapsed\":\"content-body-expand\"}>\r\n              {React.cloneElement(children, { params: props.match.params })}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction PublicRoute({ children, ...rest }) {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  let auth = globalState.auth;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        auth ? (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/home\",\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        ) : \r\n        <div className=\"h-100\">\r\n        <AlertGroup />\r\n          {children}\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { StateProvider } from \"./store.js\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StateProvider>\r\n    <StrictMode>\r\n      <App />\r\n    </StrictMode>\r\n  </StateProvider>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}