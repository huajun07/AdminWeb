{"version":3,"sources":["store.js","components/NavBar.js","components/ConfirmModal.js","components/QueryModal.js","services/alertService.js","services/api.js","components/DeviceModal.js","components/GateModal.js","components/AlertGroup.js","components/TablePaginationActions.js","components/RulesModal.js","components/ImageModal.js","components/WhitelistModal.js","pages/Home.js","pages/Login.js","pages/Projects.js","pages/projectSubPages/ProjectForm.js","pages/projectSubPages/BusinessDetails.js","pages/projectSubPages/Devices.js","pages/projectSubPages/Gates.js","pages/projectSubPages/LedConfig.js","pages/EditProject.js","pages/PlateRegex.js","pages/Records.js","pages/ParkRecords.js","pages/ParkingRules.js","pages/Whitelist.js","App.js","index.js"],"names":["initialState","auth","user","toggled","store","createContext","Provider","StateProvider","children","useReducer","state","action","type","value","Error","dispatch","NavBar","storeContext","useContext","globalState","history","useHistory","direct","path","console","log","push","className","collapsed","width","iconShape","style","icon","fontSize","onClick","title","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","Item","data-value","href","Divider","Text","ConfirmModal","props","toggleModal","success","hide","body","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","alertSubject","Subject","defaultId","alertService","onAlert","asObservable","pipe","filter","x","message","options","alert","alertType","error","info","warn","clear","next","server_URL","process","returnFunc","response","a","json","data","ok","content","status","Promise","reject","getProjects","columns","requestOptions","method","headers","JSON","stringify","authID","serviceName","objName","fetch","then","getAccessRule","projectID","filters","getGate","ID","getProjectInfo","delProject","getGateInfo","gateID","delGate","delDevice","deviceID","getObjectTypes","obj","getWhitelistTags","delAccessRule","accessRuleID","delWhitelistEntryInfo","recordID","DeviceModal","deviceTypes","useState","validated","setValidated","setState","dummy","projects","setProjects","curProject","setCurProject","gates","setGates","loading","setLoading","useEffect","deviceName","deviceType","deviceCarpark","manufacturer","manufacturerCode","direction","isPrimaryDevice","isGateControl","getDeviceInfo","catch","handleChange","target","e","filler","e2","undefined","includes","boolean","checked","prevState","update","tempState","modifyParams","updateDeviceInfo","create","values","newDeviceReq","createDevice","Spinner","animation","role","Form","noValidate","onSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","Group","as","Row","Label","column","sm","align","Col","Control","required","placeholder","name","onChange","Feedback","readOnly","custom","map","project","projectName","disabled","gate","gateName","Check","GateModal","newState","gateTypes","whiteListTags","setWhiteListTags","newInitialState","gateType","isChargeable","ledOnTime","ledOffTime","allowedTypes","whitelistTags","tag","label","updateGateInfo","newGateReq","createGate","showSeconds","input","CheckPicker","sticky","searchable","defaultValue","AlertGroup","alerts","this","subscription","subscribe","setTimeout","removeAlert","unsubscribe","length","idx","Alert","dismissible","onClose","React","Component","TablePaginationActions","count","page","rowsPerPage","onChangePage","flexShrink","right","IconButton","event","aria-label","Math","ceil","max","RulesModal","curGates","setCurGates","initialGates","setInitialGates","func","val","temp","forEach","element","accessRuleName","getAccessRuleInfo","Object","keys","String","list","updateAccessRuleInfo","createAccessRule","margin","size","ImageModal","src","centered","pad2","n","dateToString","date","getFullYear","toString","getMonth","getDate","getHours","getMinutes","getSeconds","WhitelistModal","accessRules","setWhitelistTags","plates","setPlates","reloadPlate","getPlates","plate","plateNumber","startDateTime","endDateTime","getWhitelistEntryInfo","updateWhitelistEntryInfo","createWhitelistEntry","isValid","isInvalid","rule","whitelistTag","DatePicker","str1","str2","format","ranges","Date","Home","devices","setDevices","newDevices","setNewDevices","setDeviceTypes","deviceTypeNames","setDeviceTypeNames","curID","setCurID","edit","toggle","setToggle","reload","getAllDevice","device","deviceStatus","getNewDevices","entries","modal","prevVal","Jumbotron","Card","color","height","Typography","component","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","row","index","deviceIP","padding","stickyHeader","Login","username","password","document","getElementById","innerText","Projects","match","initialRows","setInitialRows","rows","setRows","delete","add","location","projectType","curState","setCurState","curRows","toLowerCase","indexOf","insert","contactNumber","maCompany","equipManu","addProject","del","setPage","setRowsPerPage","emptyRows","min","Breadcrumb","active","inline","slice","scope","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","ProjectForm","useParams","projectTypes","setProjectTypes","updateProjectInfo","country","BusinessDetails","setProjectName","barrierDelay","networkWarningDuration","instantImgUpload","vehicleColorDetect","localImgStore","myFormat","num","InputGroup","strict","Devices","useLocation","pathname","setGateName","getDevice","Tooltip","Gates","setGateTypes","gateTypeNames","setGateTypeNames","setModal","openGateFunc","openGate","LedConfig","trigger","voiceMsg","textMsg","Input","vals","EditProject","useRouteMatch","url","split","background","Tab","Container","xs","exact","to","PlateRegex","NaN","actualPlate","matchPlate","setVal","projectNames","setProjectNames","getSpecialPlate","handleChangeVal","Number","isNaN","delSpecialPlate","addSpecialPlate","updateSpecialPlate","activateModal","Records","imageSrc","setImageSrc","fieldPlaceholder","vehicleType","isOpened","originalPlate","confirmedPlate","detectionTime","confirmedTime","image1","image2","image3","plateImage","fields","fieldLength","fieldHeight","curField","startTime","endTime","timeState","setTimeState","curTimeState","setCurTimeState","getMovementLogs","concat","handleTimeChange","sort","b","reset","queryField","Addon","block","appearance","field","logID","ParkRecords","ParkingRules","setProject","gateNames","setGateNames","inputField","outputField","Whitelist","pNumber","setPNumber","curPNo","setCurPNo","setAccessRules","accessRuleVals","setAccessRuleVals","getWhitelistEntry","entry","Router","PrivateRoute","rest","render","cloneElement","params","from","PublicRoute","App","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.54269fb1.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  auth: true,\r\n  user: \"admin\",\r\n  toggled: false\r\n};\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"setAuth\":\r\n        return {\r\n          ...state,\r\n          auth: action.value\r\n        };\r\n      case \"setUser\":\r\n        return {\r\n          ...state,\r\n          user: action.value\r\n        };\r\n      case \"setToggled\":\r\n        return {\r\n          ...state,\r\n          toggled: !state.toggled\r\n        };\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { store, StateProvider };\r\n","import {\r\n  SidebarContent,\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SubMenu\r\n} from \"react-pro-sidebar\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport { List } from \"react-bootstrap-icons\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { store } from \"../store.js\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalParkingIcon from '@material-ui/icons/LocalParking';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nexport function NavBar() {\r\n  const storeContext = useContext(store);\r\n  const { dispatch } = storeContext;\r\n  const globalState = storeContext.state;\r\n  const {toggled, user}  = globalState;\r\n  let history = useHistory();\r\n  const logout = () => {\r\n    dispatch({\r\n      type: \"setAuth\",\r\n      value: false\r\n    });\r\n    dispatch({\r\n      type: \"setUser\",\r\n      value: \"\"\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n  const direct = (path) => {\r\n    console.log(\"clicked\", path);\r\n    history.push(path);\r\n  };\r\n  const toggleSideBar = () => {\r\n    dispatch({\r\n      type: \"setToggled\"\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"h-100 fixed-top clickThrough\">\r\n      <ProSidebar\r\n        className=\"clickAble navbar-default navbar-static-top sideBar\"\r\n        collapsed={toggled}\r\n        width=\"250px\"\r\n        //collapsedWidth=\"px\"\r\n      >\r\n        <SidebarContent>\r\n          <Menu iconShape=\"circle\">\r\n            <MenuItem \r\n              style={{\"background\":\"#2c3b41\",\"height\":\"60px\", \"pointer-events\":\"none\"}}\r\n              className=\"d-flex justify-content-center align-items-center\">\r\n              <div style={{\"padding-top\":\"10px\", \"color\":\"white\"}}>\r\n                <h5>Admin</h5>\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem \r\n              icon={<AccountCircleIcon fontSize='large'/>}\r\n              style={{\"pointer-events\":\"none\", \"border-bottom\":\"1px solid gray\"}}>\r\n              <div style={{ \"color\":\"white\"}}>\r\n                Welcome, {user}\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<HomeIcon onClick={()=>direct(\"/home\")}/>}>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<InfoIcon onClick={()=>direct(\"/project\")} />}>\r\n              <div onClick={()=>direct(\"/project\")}>\r\n                Project\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<CodeIcon onClick={()=>direct(\"/regex\")} />}>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<StorageIcon onClick={()=>direct(\"/records\")} />}>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n                Exit/Entry Records\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<LocalParkingIcon onClick={()=>direct(\"/parking\")} />}>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </MenuItem>\r\n            <SubMenu title=\"Access\" icon={<PaymentIcon/>}>\r\n              <MenuItem  onClick={()=>direct(\"/accessRules\")} >Access Rules</MenuItem>\r\n              <MenuItem onClick={()=>direct(\"/whitelist\")}>Whitelist Entries</MenuItem>\r\n            </SubMenu>\r\n          </Menu>\r\n        </SidebarContent>\r\n      </ProSidebar>\r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" className={\"clickAble navBar\"+(toggled?\" navBar-collapsed\":\" navBar-expand\")}>\r\n        <Navbar.Brand \r\n        className=\"sideBar\" \r\n        onClick={toggleSideBar}>\r\n          <List />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"nav-dropdown\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto nav-dropdown\">\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/project\")}>\r\n                Project\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n              Exit/Entry Records\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </Nav.Link>\r\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item data-value=\"/home\" onClick={direct}>\r\n                Action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Navbar.Text>\r\n            <Nav.Link onClick={logout}>Signout</Nav.Link>\r\n          </Navbar.Text>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { NavBar };\r\n","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nexport function ConfirmModal(props) {\r\n  let toggleModal = props.toggleModal;\r\n  let success = props.success;\r\n  let hide = props.hide;\r\n  let body = props.body;\r\n  let title = props.title;\r\n  return (\r\n    <Modal show={hide} onHide={toggleModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{body}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={toggleModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={()=>{\r\n          success();\r\n        }}>\r\n          Confirm\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { ConfirmModal};\r\n","import { Button, Modal, Form } from \"react-bootstrap\";\r\nimport {useState} from 'react';\r\n\r\nexport function QueryModal(props) {\r\n    let toggleModal = props.toggleModal;\r\n    let success = props.success;\r\n    let hide = props.hide;\r\n    let body = props.body;\r\n    let title = props.title;\r\n    const [value,setValue] = useState(\"\");\r\n    const handleChange = (e) =>{\r\n      setValue(e.target.value);\r\n    }\r\n    const exit = () =>{\r\n      setValue(\"\");\r\n      toggleModal();\r\n    }\r\n    return (\r\n      <Modal show={hide} onHide={exit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Label>{body}</Form.Label>\r\n            <Form.Control \r\n            value={value}\r\n            onChange={handleChange}\r\n            />\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={exit}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>{\r\n              success(value);\r\n              exit();\r\n              }}>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default {QueryModal};","import { Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nconst alertSubject = new Subject();\r\nconst defaultId = 'default-alert';\r\n\r\nexport const alertService = {\r\n    onAlert,\r\n    success,\r\n    error,\r\n    info,\r\n    warn,\r\n    alert,\r\n    clear\r\n};\r\n\r\nexport const alertType = {\r\n    success: 'success',\r\n    error: 'danger',\r\n    info: 'info',\r\n    warning: 'warning'\r\n}\r\n\r\n// enable subscribing to alerts observable\r\nfunction onAlert(id = defaultId) {\r\n    return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\r\n}\r\n\r\n// convenience methods\r\nfunction success(message, options) {\r\n    alert({ ...options, type: alertType.success, message });\r\n}\r\n\r\nfunction error(message, options) {\r\n    alert({ ...options, type: alertType.error, message });\r\n}\r\n\r\nfunction info(message, options) {\r\n    alert({ ...options, type: alertType.info, message });\r\n}\r\n\r\nfunction warn(message, options) {\r\n    alert({ ...options, type: alertType.warning, message });\r\n}\r\n\r\n// core alert method\r\nfunction alert(alert) {\r\n    alert.id = alert.id || defaultId;\r\n    alertSubject.next(alert);\r\n}\r\n\r\n// clear alerts\r\nfunction clear(id = defaultId) {\r\n    alertSubject.next({ id });\r\n}","import { alertService } from './index.js';\r\n\r\nconst server_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst returnFunc = async (response) => {\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.content) || response.status;\r\n        return Promise.reject(error);\r\n    }\r\n    return data;\r\n}\r\n\r\nconst getProjects = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"project\",\r\n            columns\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getMovementLogs = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"movementLog\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getSpecialPlate = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"specialPlate\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAccessRule = (projectID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"accessRule\",\r\n            columns,\r\n            filters:{\r\n                projectID\r\n            }\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createSpecialPlate\",\r\n          content: state\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delSpecialPlate = (matchPlate) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteSpecialPlate\",\r\n            content: {\r\n                matchPlate\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifySpecialPlate\",\r\n            content: {\r\n            matchPlate: state.matchPlate,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addProject = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createProject\",\r\n          content: {\r\n            projectName: \"\",\r\n            projectType: \"\",\r\n            location: \"\",\r\n            contactNumber: \"\",\r\n            maCompany: \"\",\r\n            equipManu: \"\"\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGate = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getTable\",\r\n            content: {\r\n            objName: \"gate\",\r\n            columns,\r\n            filters:{\r\n                projectID: ID\r\n            }\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDevice = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"device\",\r\n            columns,\r\n            filters:{\r\n              gateID: ID\r\n            }\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAllDevice = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"device\",\r\n            columns\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createGate = (projectID,values) =>{\r\n    const newGateReq = {\r\n        ...values,\r\n        projectID\r\n    };\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createGate\",\r\n            content: newGateReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createDevice = (gateID, values) =>{\r\n    const newDeviceReq = {\r\n        ...values,\r\n        gateID\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createDevice\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getProjectInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getProject\",\r\n            content: {\r\n            projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delProject = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteProject\",\r\n            content: {\r\n                projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateProjectInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyProject\",\r\n            content: {\r\n            projectID: ID,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getBusinessInfo = (ID) =>{\r\n    //Pending Function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateBusinessInfo = (ID, state) =>{\r\n    //Pending function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGateInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delGate = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateGateInfo = (ID, state) =>{\r\n    console.log(state);\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyGate\",\r\n            content: {\r\n                gateID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDeviceInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delDevice = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateDeviceInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyDevice\",\r\n            content: {\r\n                deviceID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createAccessRule = (values) =>{\r\n    const newDeviceReq = {\r\n        ...values\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createAccessRule\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAccessRuleInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getAccessRule\",\r\n          content: {\r\n            accessRuleID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateAccessRuleInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyAccessRule\",\r\n            content: {\r\n                accessRuleID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getObjectTypes = (obj) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getObjectTypes\",\r\n            content: {\r\n                objName: obj\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getWhitelistTags = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getWhitelistTags\"\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst openGate = (gateID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"openGate\",\r\n            content:{\r\n                gateID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getNewDevices = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getNewDevice\"\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delAccessRule = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteAccessRule\",\r\n          content: {\r\n              accessRuleID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getWhitelistEntry = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"dbWhitelist\",\r\n            columns\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getWhitelistEntryInfo = (recordID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getWhitelistEntry\",\r\n          content: {\r\n            recordID\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateWhitelistEntryInfo = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"editWhitelistEntry\",\r\n            content: state\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delWhitelistEntryInfo = (recordID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteWhitelistEntry\",\r\n          content: {\r\n            recordID\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createWhitelistEntry = (values) =>{\r\n    const newDeviceReq = {\r\n        ...values\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"editWhitelistEntry\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getPlates = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"plate\",\r\n            columns\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nexport {\r\n    getGate,\r\n    getDevice,\r\n    createGate,\r\n    createDevice,\r\n    getProjectInfo,\r\n    updateProjectInfo,\r\n    getBusinessInfo,\r\n    updateBusinessInfo,\r\n    getGateInfo,\r\n    updateGateInfo,\r\n    getDeviceInfo,\r\n    updateDeviceInfo,\r\n    getProjects,\r\n    addProject,\r\n    delProject,\r\n    delGate,\r\n    delDevice,\r\n    getMovementLogs,\r\n    getSpecialPlate,\r\n    delSpecialPlate,\r\n    updateSpecialPlate,\r\n    addSpecialPlate,\r\n    getAccessRule,\r\n    createAccessRule,\r\n    getAccessRuleInfo,\r\n    updateAccessRuleInfo,\r\n    getObjectTypes,\r\n    getWhitelistTags,\r\n    openGate,\r\n    getAllDevice,\r\n    getNewDevices,\r\n    delAccessRule,\r\n    getWhitelistEntry,\r\n    getWhitelistEntryInfo,\r\n    updateWhitelistEntryInfo,\r\n    delWhitelistEntryInfo,\r\n    createWhitelistEntry,\r\n    getPlates\r\n};","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, createDevice, getDeviceInfo, updateDeviceInfo, getGate, getProjects } from '../services/index.js';\r\n\r\nexport function DeviceModal(props) {\r\n    let {hide, gateID, toggleModal, success, deviceID, deviceTypes } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [projects, setProjects] = useState([]);\r\n    const [curProject, setCurProject] = useState(\"\");\r\n    const [gates, setGates] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    if(deviceID===null){\r\n      setState({\r\n        gateID,\r\n        deviceID: \"\",\r\n        deviceName: \"\",\r\n        deviceType: \"\",\r\n        deviceCarpark: \"\",\r\n        manufacturer: \"\",\r\n        manufacturerCode: \"\",\r\n        direction: \"\",\r\n        isPrimaryDevice: false,\r\n        isGateControl: false\r\n      });\r\n    }else{\r\n      setLoading(true);\r\n      getDeviceInfo(deviceID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Device, There was an error!\", error);\r\n      });\r\n      if(gateID===null){\r\n        handleChange({\r\n          target:{\r\n            id: \"gateID\",\r\n            value: \"\"\r\n          }\r\n        });\r\n        getProjects([\"projectID\",\"projectName\"])\r\n        .then(async (data) => {\r\n          setCurProject(\"\");\r\n          setProjects(data.content);\r\n        })\r\n        .catch((error) => {\r\n          alertService.error(\"There was an error!\");\r\n          console.error(\"Get Projects, There was an error!\", error);\r\n        });\r\n      }\r\n    }\r\n  }, [dummy,hide]);\r\n\r\n  useEffect(()=>{\r\n    handleChange({\r\n      target:{\r\n        id: \"gateID\",\r\n        value: \"\"\r\n      }\r\n    });\r\n    if(curProject === null)setGates([]);\r\n    else{\r\n      getGate(curProject,[\"gateID\",\"gateName\"])\r\n      .then(async (data) => {\r\n        setGates(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gates, There was an error!\", error);\r\n      });\r\n    }\r\n  },[curProject])\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (['isPrimaryDevice','isGateControl'].includes(id)) {\r\n      let boolean = e.target.checked;\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: boolean\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(deviceID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    console.log(state);\r\n    let tempState = state;\r\n    delete tempState[\"deviceStatus\"];\r\n    updateDeviceInfo(deviceID, tempState)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createDevice(gateID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Device, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{deviceID===null?\"Add Device\":\"Edit Device\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <div className={\"loadingModal\"+(loading?\"\":\" invisible\")}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n            <Modal.Body>\r\n            <Form id =\"deviceModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Device ID\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >{deviceID===null?\r\n                        <div><Form.Control\r\n                        required\r\n                        placeholder=\"ID\"\r\n                        id=\"deviceID\"\r\n                        name=\"deviceID\"\r\n                        type =\"text\"\r\n                        value={state.deviceID}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device ID is a required field.\r\n                        </Form.Control.Feedback></div>:<Form.Control type=\"text\" placeholder={state.deviceID} readOnly />}\r\n                    </Col>\r\n                    </Form.Group>\r\n                    {gateID===null?\r\n                    <div>\r\n                      <Form.Group as={Row}>\r\n                        <Form.Label column sm={4}  align=\"right\">\r\n                            Project\r\n                        </Form.Label>\r\n                        <Col\r\n                            sm={6}\r\n                        >\r\n                          <Form.Control\r\n                            custom\r\n                            required\r\n                            as=\"select\"\r\n                            id=\"project\"\r\n                            name=\"project\"\r\n                            value={curProject}\r\n                            onChange={(e)=>{\r\n                              setCurProject(e.target.value);\r\n                            }}\r\n                            >\r\n                            <option value={\"\"}>--Select Project--</option>\r\n                            {projects.map((project)=>(\r\n                              <option value={project.projectID}>{project.projectName}</option>\r\n                            ))}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            Project is a required field.\r\n                          </Form.Control.Feedback>\r\n                        </Col>\r\n                      </Form.Group>\r\n                      <Form.Group as={Row}>\r\n                        <Form.Label column sm={4}  align=\"right\">\r\n                            Gate\r\n                        </Form.Label>\r\n                        <Col\r\n                            sm={6}\r\n                        >\r\n                          <Form.Control\r\n                            disabled = {curProject===\"\"}\r\n                            custom\r\n                            required\r\n                            as=\"select\"\r\n                            id=\"gateID\"\r\n                            name=\"gateID\"\r\n                            value={state.gateID===null?\"\":state.gateID}\r\n                            onChange={handleChange}\r\n                            >\r\n                            <option value={\"\"}>--Select Project--</option>\r\n                            {gates.map((gate)=>(\r\n                              <option value={gate.gateID}>{gate.gateName}</option>\r\n                            ))}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            Gate is a required field.\r\n                          </Form.Control.Feedback>\r\n                        </Col>\r\n                      </Form.Group>\r\n                      </div>\r\n                      :null\r\n                    }\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Device Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"deviceName\"\r\n                        name=\"deviceName\"\r\n                        value={state.deviceName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Device Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"deviceType\"\r\n                        name=\"deviceType\"\r\n                        value={state.deviceType===null?null:state.deviceType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        {deviceTypes.map((type)=>(\r\n                          <option value={type.id}>{type.name}</option>\r\n                        ))}\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Carpark\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Carpark\"\r\n                        id=\"deviceCarpark\"\r\n                        name=\"deviceCarpark\"\r\n                        value={state.deviceCarpark}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Capark is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                         Manufacturer\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer\"\r\n                        id=\"manufacturer\"\r\n                        name=\"manufacturer\"\r\n                        value={state.manufacturer}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                         Manufacturer Code\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer Code\"\r\n                        id=\"manufacturerCode\"\r\n                        name=\"manufacturerCode\"\r\n                        value={state.manufacturerCode}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer Code is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                         Direction\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Direction\"\r\n                        id=\"direction\"\r\n                        name=\"direction\"\r\n                        value={state.direction}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Direction is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Primary Device?\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked = {state.isPrimaryDevice}\r\n                        type=\"switch\"\r\n                        id=\"isPrimaryDevice\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Control Gate?\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isGateControl}\r\n                        type=\"switch\"\r\n                        id=\"isGateControl\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"deviceModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { DeviceModal };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport TimeField from 'react-simple-timefield';\r\nimport { alertService, createGate, getGateInfo, updateGateInfo, getWhitelistTags } from '../services/index.js';\r\n\r\nimport { CheckPicker } from 'rsuite';\r\n\r\nexport function GateModal(props) {\r\n    let {hide, gateID, toggleModal, success, newState, projectID, gateTypes } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [whiteListTags, setWhiteListTags] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const newInitialState = {\r\n      gateName: \"\",\r\n      gateType: \"\",\r\n      isChargeable: false,\r\n      ledOnTime: \"00:00:00\",\r\n      ledOffTime: \"00:00:00\",\r\n      allowedTypes: []\r\n    };\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    console.log(\"gateModal\", gateID, projectID, newState);\r\n    if(!hide){\r\n      setState(newInitialState);\r\n    }else if(newState){\r\n      setState(newInitialState);\r\n    }else{\r\n      setLoading(true);\r\n      getGateInfo(gateID)\r\n      .then(async (data) => {\r\n        if(data.message.allowedTypes!==null){\r\n          setState(data.message);\r\n        }else{\r\n          setState({\r\n            ...data.message,\r\n            allowedTypes: []\r\n          })\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gate, There was an error!\", error);\r\n      });\r\n    }\r\n    getWhitelistTags()\r\n    .then(async (data) => {\r\n      setWhiteListTags(data.message.whitelistTags.map((tag)=>(\r\n        {\r\n          label: tag,\r\n          value: tag\r\n        }\r\n      )));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get WhiteList Tags, There was an error!\", error);\r\n    });\r\n  }, [dummy,hide]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (['isChargeable'].includes(id)) {\r\n      let boolean = e.target.checked;\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: boolean\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(newState) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateGateInfo(gateID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createGate(projectID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Gate, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n      setValidated(false);\r\n      toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{newState?\"Add Gate\":\"Edit Gate\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <div className={\"loadingModal\"+(loading?\"\":\" invisible\")}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n            <Modal.Body>\r\n            <Form id='gateModal' noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Gate Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"gateName\"\r\n                        name=\"gateName\"\r\n                        value={state.gateName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Gate Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"gateType\"\r\n                        name=\"gateType\"\r\n                        value={state.gateType===null?\"\":state.gateType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        {gateTypes.map((type)=>(\r\n                          <option value={type.id}>{type.name}</option>\r\n                        ))}\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Charge fee for entry\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                    Time to turn on the LPR camera’s LED\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex\"\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOnTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOnTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOnTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Time to turn off the LPR\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        className=\"align-items-center d-flex\"\r\n                        sm={6}\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOffTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOffTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOffTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Whitelist Tags\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <CheckPicker\r\n                          sticky\r\n                          searchable={false}\r\n                          data={whiteListTags}\r\n                          defaultValue={[]}\r\n                          style={{ width: \"100%\" }}\r\n                          value={state.allowedTypes}\r\n                          onChange={(value)=>{\r\n                            handleChange({\r\n                              target:{\r\n                                id: \"allowedTypes\",\r\n                                value\r\n                              }\r\n                            });\r\n                          }}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"gateModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { GateModal };\r\n","import React from 'react';\r\n\r\nimport { alertService, alertType } from '../services/index.js';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nexport class AlertGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            alerts: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // subscribe to new alert notifications\r\n        this.subscription = alertService.onAlert(this.props.id)\r\n            .subscribe(alert => {\r\n                // add alert to array\r\n                this.setState({ alerts: [...this.state.alerts, alert] });\r\n\r\n                // auto close alert if required\r\n                setTimeout(() => this.removeAlert(alert), 3000);\r\n            });\r\n\r\n        // clear alerts on location change\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // unsubscribe & unlisten to avoid memory leaks\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert) {\r\n        this.setState({ alerts: this.state.alerts.filter(x => x !== alert) })\r\n    }\r\n\r\n    render() {\r\n        const { alerts } = this.state;\r\n        if (!alerts.length) return null;\r\n        return (\r\n            <div className=\"alertGrp\">\r\n                {console.log(alerts),\r\n                alerts.map((alert,idx) =>\r\n                    <Alert \r\n                    key = {idx} \r\n                    variant={alert.type}\r\n                    dismissible = {true}\r\n                    onClose={()=>{this.removeAlert(alert)}}>\r\n                        {alert.message}\r\n                    </Alert>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default {AlertGroup} ;","import {IconButton} from '@material-ui/core';\r\n\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nexport function TablePaginationActions(props) {\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div style={{flexShrink:0, right:0}}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        <FirstPageIcon />\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n         <KeyboardArrowLeft />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        <KeyboardArrowRight />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        <LastPageIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default {TablePaginationActions};","import { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, createAccessRule, getAccessRuleInfo, updateAccessRuleInfo, getGate } from '../services/index.js';\r\n\r\nimport { CheckPicker } from 'rsuite';\r\n\r\nexport function RulesModal(props) {\r\n    let {hide, accessRuleID, projectID, success, projectName, toggleModal } = props;\r\n    let cnt = 0;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [gates, setGates] = useState([]);\r\n    const [curGates, setCurGates] = useState({});\r\n    const [initialGates, setInitialGates] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const func = async (val) =>{\r\n        let temp = {};\r\n        val.forEach(async (element)=>{\r\n            temp[element[\"gateID\"]] = false;\r\n        });\r\n        initialGates.forEach(async (element)=>{\r\n            temp[element] = true;\r\n        });\r\n        return await temp;\r\n    };\r\n    const loadGates = () =>{\r\n        getGate(projectID, [\"gateID\", \"gateName\"])\r\n        .then(async (data) => {\r\n            setGates(data.content.map((gate)=>({\r\n              value: String(gate.gateID),\r\n              label: gate.gateName\r\n            })));\r\n            func(data.content).then(async(list)=>{\r\n                setCurGates(await list);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            alertService.error(\"There was an error!\");\r\n            console.error(\"Get Gate Rule, There was an error!\", error);\r\n        });\r\n    }\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    if(accessRuleID===null){\r\n      setLoading(false);\r\n      setState({\r\n        projectID,\r\n        accessRuleName: \"\",\r\n        isChargeable: false,\r\n        gates: []\r\n      });\r\n      setInitialGates([]);\r\n    }else{\r\n      setTimeout(()=>setLoading(false), 600);\r\n      getAccessRuleInfo(accessRuleID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n        setInitialGates(data.message.gates);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Access Rule, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    setState((prevState)=>({\r\n        ...prevState,\r\n        gates: (Object.keys(curGates)).filter((gate)=>curGates[gate])\r\n      }));\r\n  },[curGates]);\r\n\r\n  useEffect(()=>{\r\n    loadGates();\r\n  },[initialGates]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (['isChargeable'].includes(id)) {\r\n      let boolean = e.target.checked;\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: boolean\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleGateChange = (e) =>{\r\n    let id = e.target.id;\r\n    setCurGates((prevState) => ({\r\n      ...prevState,\r\n      [id]: !prevState[id]\r\n    }));\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(accessRuleID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateAccessRuleInfo(accessRuleID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Access Rule, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createAccessRule(state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Access Rule, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n      {loading?\r\n      <Row className=\"d-flex justify-content-center\" style={{margin:\"200px\"}}>\r\n      <Spinner size=\"lg\" animation=\"border\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n    </Row>:\r\n        <div>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{accessRuleID===null?\"Add Rule\":\"Edit Rule\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id =\"ruleModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Project Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={projectName} readOnly />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Access Rule Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"accessRuleName\"\r\n                        name=\"accessRuleName\"\r\n                        value={state.accessRuleName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Rule Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Gates\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <CheckPicker\r\n                          sticky\r\n                          searchable={false}\r\n                          data={gates}\r\n                          defaultValue={[]}\r\n                          style={{ width: \"100%\" }}\r\n                          value={state.gates}\r\n                          onChange={(value)=>{\r\n                            handleChange({\r\n                              target:{\r\n                                id: \"gates\",\r\n                                value\r\n                              }\r\n                            });\r\n                          }}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}  align=\"right\">\r\n                        Is Chargeable\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"ruleModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n        </div>\r\n      }\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { RulesModal };\r\n","import {Modal} from 'react-bootstrap';\r\n\r\nexport function ImageModal (props){\r\n    let {toggleModal, src} = props;\r\n    return(\r\n    <Modal size=\"lg\" centered show={src===null?false:true} onHide={toggleModal}>\r\n        <img src={src}/>\r\n    </Modal>\r\n    );\r\n}\r\n\r\nexport default {ImageModal};","import { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, getWhitelistEntryInfo, updateWhitelistEntryInfo, createWhitelistEntry, getWhitelistTags, getPlates } from '../services/index.js';\r\nimport {DatePicker, SelectPicker} from 'rsuite';\r\n\r\nfunction pad2(n) { return n < 10 ? '0' + n : n }\r\nfunction dateToString(date){\r\n  if(date===null)return \"\";\r\n  else return date.getFullYear().toString() +'-'+ pad2(date.getMonth() + 1) +'-'+ pad2( date.getDate()) +' '+ pad2( date.getHours() ) +':'+ pad2( date.getMinutes() ) +':'+ pad2( date.getSeconds() );\r\n}\r\n\r\nfunction minStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 > str2)return str2;\r\n  else return str1;\r\n}\r\nfunction maxStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 < str2)return str2;\r\n  else return str1;\r\n}\r\n\r\nexport function WhitelistModal(props) {\r\n    let {hide, ID, success, projectName, accessRules, toggleModal } = props;\r\n    let cnt = 0;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [whitelistTags, setWhitelistTags] = useState([]);\r\n    const [plates,setPlates] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const reloadTags = ()=>{\r\n    getWhitelistTags()\r\n    .then(async (data) => {\r\n      setWhitelistTags(data.message.whitelistTags);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get WhiteList Tags, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  const reloadPlate = ()=>{\r\n    getPlates([\"plateNumber\"])\r\n    .then(async (data) => {\r\n      setPlates(data.content.map((plate)=>plate.plateNumber));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Plate Number, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    reloadTags();\r\n    reloadPlate();\r\n    if(ID===null){\r\n      setState({\r\n        plateNumber: \"\",\r\n        accessRuleID: \"\",\r\n        tag: \"\",\r\n        startDateTime: \"\",\r\n        endDateTime: \"\"\r\n      });\r\n    }else{\r\n      setLoading(true);\r\n      getWhitelistEntryInfo(ID)\r\n      .then(async (data) => {\r\n          console.log(data.message);\r\n        setState(data.message);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Whitelist entry info, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(ID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    setLoading(true);\r\n    console.log(state);\r\n    updateWhitelistEntryInfo(state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        setLoading(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      setLoading(false);\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Whitelist Entry, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    setLoading(true);\r\n    createWhitelistEntry(state)\r\n    .then(async (data) => {\r\n      setLoading(false);\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      setLoading(false);\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Whitelist Entry, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n        <Modal.Header\r\n            closeButton>\r\n            <Modal.Title>{ID===null?\"Add Entry\":\"Edit Entry\"}</Modal.Title>\r\n        </Modal.Header>\r\n          <div className={\"loadingModal\"+(loading?\"\":\" invisible\")}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n        <Modal.Body>\r\n        <Form id =\"whitelistModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <div>\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Project Name\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                    className=\"align-items-center d-flex justify-content-center\"\r\n                >\r\n                    <Form.Control type=\"text\" placeholder={projectName} readOnly />\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Plate Number\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >  \r\n                {ID===null?\r\n                    <div>\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"plateNumber\"\r\n                        name=\"plateNumber\"\r\n                        value={state.plateNumber}\r\n                        onChange={handleChange}\r\n                        isValid={plates.includes(state.plateNumber)}\r\n                        isInvalid={!plates.includes(state.plateNumber)&&validated}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Please enter a registered plate no.\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    :<Form.Control type=\"text\" placeholder={state.plateNumber} readOnly />\r\n                }\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Access Rule\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"accessRuleID\"\r\n                        name=\"accessRuleID\"\r\n                        value={state.accessRuleID===null?\"\":state.accessRuleID}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Access Rule--</option>\r\n                        {accessRules.map((rule)=>(\r\n                            <option value={rule.accessRuleID}>{rule.accessRuleName}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                    Access Rule is a required field.\r\n                    </Form.Control.Feedback>\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4} align=\"right\">\r\n                    Tag\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <Form.Control\r\n                        custom\r\n                        as=\"select\"\r\n                        id=\"tag\"\r\n                        name=\"tag\"\r\n                        value={state.tag===null?\"\":state.tag}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>None</option>\r\n                        {whitelistTags.map((whitelistTag)=>(\r\n                            <option value={whitelistTag}>{whitelistTag}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Start Date Time\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <DatePicker\r\n                className=\"width-100\"\r\n                    value={state.startDateTime}\r\n                    onChange={(val)=>{\r\n                      handleChange({\r\n                        target:{\r\n                          id: \"startDateTime\",\r\n                          value: dateToString(val)\r\n                        }\r\n                      });\r\n                      handleChange({\r\n                        target:{\r\n                          id: \"endDateTime\",\r\n                          value: maxStr(dateToString(val),state.endDateTime)\r\n                        }\r\n                      });\r\n                    }}\r\n                      format=\"YYYY-MM-DD HH:mm:ss\"\r\n                      ranges={[\r\n                        {\r\n                          label: 'Now',\r\n                          value: new Date()\r\n                        }\r\n                      ]}\r\n                      placeholder=\"Start DateTime\"\r\n                    />\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    End Date Time\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                <DatePicker\r\n                className=\"width-100\"\r\n                    value={state.endDateTime}\r\n                    onChange={(val)=>{\r\n                      handleChange({\r\n                        target:{\r\n                          id: \"endDateTime\",\r\n                          value: dateToString(val)\r\n                        }\r\n                      });\r\n                      handleChange({\r\n                        target:{\r\n                          id: \"startDateTime\",\r\n                          value: minStr(dateToString(val),state.startDateTime)\r\n                        }\r\n                      });\r\n                    }}\r\n                  format=\"YYYY-MM-DD HH:mm:ss\"\r\n                  ranges={[\r\n                    {\r\n                      label: 'Now',\r\n                      value: new Date()\r\n                    }\r\n                  ]}\r\n                  placeholder=\"End DateTime\"\r\n                />\r\n                </Col>\r\n                </Form.Group>\r\n            </div>\r\n        </Form>\r\n        </Modal.Body>\r\n    <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n        Cancel\r\n        </Button>\r\n        <Button form =\"whitelistModal\" variant=\"primary\" type=\"submit\">\r\n        Confirm\r\n        </Button>\r\n    </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { WhitelistModal };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {Jumbotron, Row, Col, Card } from 'react-bootstrap';\r\nimport {getAllDevice, getObjectTypes, alertService, getGateInfo, getNewDevices} from '../services/index.js';\r\nimport {IconButton, Typography  , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, TableHead, TableRow, Paper, CardActions } from '@material-ui/core';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { TablePaginationActions , DeviceModal} from \"../components/index.js\";\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nexport function Home() {\r\n  const [rows, setRows] = useState([]);\r\n  const [dummy, setDummy] = useState(null);\r\n  const [devices, setDevices] = useState([]);\r\n  const [newDevices, setNewDevices] = useState([]);\r\n  const [deviceTypes, setDeviceTypes] = useState([]);\r\n  const [deviceTypeNames, setDeviceTypeNames] = useState({});\r\n  const [curID, setCurID] = useState(null);\r\n  const [toggle, setToggle] = useState({\r\n    edit: false\r\n  });\r\n  let history = useHistory();\r\n\r\n  const reload = () =>{\r\n    getAllDevice([\"deviceID\", \"deviceName\", \"deviceType\",\"deviceStatus\", \"gateID\",\"deviceIP\"])\r\n    .then(async (data) => {\r\n      setDevices(data.content.filter((device)=>device.deviceStatus!==\"online\"&&device.gateID !== null));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get All Device, there was an error!\", error);\r\n    });\r\n    getNewDevices()\r\n    .then(async (data) => {\r\n      setNewDevices(data.message);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get All Device, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n    getObjectTypes(\"device\")\r\n    .then(async (data) => {\r\n      setDeviceTypeNames(data.message);\r\n      setDeviceTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Device Types!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  const direct = (gateID) =>{\r\n    getGateInfo(gateID)\r\n    .then(async (data) => {\r\n      let projectID = data.message.projectID;\r\n      history.push('/project/'+String(projectID)+'/gate/'+String(gateID));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate Info, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  return (\r\n  <div>\r\n    <DeviceModal\r\n      deviceTypes = {deviceTypes}\r\n      hide={toggle.edit}\r\n      gateID = {null}\r\n      deviceID = {curID}\r\n      success={() => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n      }}\r\n      toggleModal={() => {\r\n        toggleModal(\"edit\");\r\n      }}\r\n    />\r\n    <Jumbotron className=\"dashboard\">\r\n      <Row>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv success\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Sample\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#66bb6a\"}}>\r\n                ~\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv warning\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Sample\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#ffa726\"}} >\r\n              ~\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv info\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              New Devices\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#26c6da\"}}>\r\n              {newDevices.length}\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv danger\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Disconnected Devices\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#ef5350\"}}>\r\n                {devices.length}\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Jumbotron>\r\n    <div className=\"content\">\r\n    <Row>\r\n    <Col sm={4}>\r\n          <Card style={{height:\"465px\"}}>\r\n          <Typography className=\"cardTitle\" variant=\"h6\" component=\"h2\">\r\n            New Devices\r\n          </Typography>\r\n          <TableContainer component={Paper} className=\"scrollbar-grey\" style={{\"box-shadow\":\"none\"}}>\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead >\r\n                <TableRow>\r\n                  <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                  <TableCell align=\"left\"><b>IP</b></TableCell>\r\n                  <TableCell align=\"left\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {newDevices.map((row, index) => (\r\n                  <TableRow key={row.deviceID}>\r\n                  <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                  <TableCell align=\"left\">{(row.deviceIP==\"\"||row.deviceIP==null)?\"-\":row.deviceIP}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                      <IconButton style={{padding:0}}\r\n                      onClick={() => {\r\n                          setCurID(row.deviceID);\r\n                          toggleModal(\"edit\");\r\n                      }}>\r\n                        <BuildIcon\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={8}>\r\n          <Card style={{height:\"465px\"}} >\r\n          <Typography className=\"cardTitle\" variant=\"h6\" component=\"h2\">\r\n             Disconnected Devices\r\n          </Typography>\r\n          <TableContainer component={Paper} className=\"scrollbar-grey\" style={{\"box-shadow\":\"none\"}}>\r\n            <Table stickyHeader aria-label=\"simple table\">\r\n              <TableHead >\r\n                <TableRow>\r\n                  <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                  <TableCell align=\"left\"><b>Name</b></TableCell>\r\n                  <TableCell align=\"left\"><b>Type</b></TableCell>\r\n                  <TableCell align=\"left\"><b>IP</b></TableCell>\r\n                  <TableCell align=\"left\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {devices.map((row, index) => (\r\n                  <TableRow key={row.deviceID}>\r\n                  <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                    <TableCell align=\"left\">{row.deviceName}</TableCell>\r\n                    <TableCell align=\"left\">{row.deviceType===null?null:(deviceTypeNames[row.deviceType]===undefined ? row.deviceType : deviceTypeNames[row.deviceType].name)}</TableCell>\r\n                  <TableCell align=\"left\">{(row.deviceIP==\"\"||row.deviceIP==null)?\"-\":row.deviceIP}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <IconButton style={{padding:0}}\r\n                      onClick={() => {\r\n                          direct(row.gateID);\r\n                      }}>\r\n                        <OpenInNewIcon\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default { Home };\r\n","import React, { useState, useContext } from \"react\";\r\nimport { store } from \"../store.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport function Login() {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  const { dispatch } = storeContext;\r\n  let history = useHistory();\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n  const reqLogin = (e) => {\r\n    e.preventDefault();\r\n    let { username, password } = state;\r\n    /*\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    };\r\n    \r\n    fetch(server_URL + \"/login\", requestOptions)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n  \r\n      // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      }\r\n  \r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      return(\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/home\"\r\n          }}\r\n        />\r\n      );\r\n    })\r\n    .catch((error) => {\r\n      this.setState({ errorMessage: error.toString() });\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    if (username === \"huajun\" && password === \"huajun\") {\r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      dispatch({\r\n        type: \"setUser\",\r\n        value: username\r\n      });\r\n      history.push(\"/home\");\r\n    } else if (username.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Username cannot be blank\";\r\n    } else if (password.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Password cannot be blank\";\r\n    } else {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Invalid Username or Password\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"maincontainer h-100\">\r\n      <div className=\"container-fluid bg-light h-100\">\r\n        <div className=\"login d-flex align-items-center py-5\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-10 col-sm-6 col-md-5 col-xl-4 mx-auto \">\r\n                <h3 className=\"display-4\">Login</h3>\r\n                <p className=\"text-muted mb-4\">\r\n                  Enter your credentials to login.\r\n                </p>\r\n                <form>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"username\"\r\n                      type=\"username\"\r\n                      placeholder=\"Username\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4\"\r\n                      onChange={handleChange}\r\n                      value={state.username}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\r\n                      onChange={handleChange}\r\n                      value={state.password}\r\n                    />\r\n                  </div>\r\n                  <p id=\"login-error\" className=\"text-danger\"></p>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block text-uppercase mb-2 rounded-pill shadow-sm\"\r\n                    onClick={reqLogin}\r\n                  >\r\n                    Sign in\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Login };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, addProject, delProject, alertService } from '../services/index.js';\r\n\r\nexport function Projects({ match }) {\r\n  let history = useHistory();\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false\r\n  });\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n    setCurState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n  }\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (projectID) => {\r\n    setCurID(projectID);\r\n    toggleModal(\"delete\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectName, location, projectType } = curState;\r\n    let curRows = initialRows;\r\n    console.log(curRows);\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[\"projectName\"].toLowerCase().indexOf(projectName.toLowerCase()) >= 0 &&\r\n          row[\"location\"].toLowerCase().indexOf(location.toLowerCase()) >= 0 &&\r\n          row[\"projectType\"].toLowerCase().indexOf(projectType.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const insert = (e) => {\r\n    addProject()\r\n      .then(async (data) => {\r\n        let ID = data.message.projectID;\r\n        history.push(\"/project/\" + ID);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  const edit = (projectID) => {\r\n    history.push(\"/project/\" + projectID);\r\n  };\r\n\r\n  const del = async (projectID) => {\r\n    delProject(projectID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Project Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this project?\"\r\n      />\r\n      <ConfirmModal\r\n        hide={toggle.add}\r\n        success={() => {\r\n          insert();\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"add\");\r\n        }}\r\n        title=\"Confirm Addition\"\r\n        body=\"Add a new project?\"\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Projects</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectName\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectName}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"location\"\r\n                placeholder=\"Location\"\r\n                onChange={handleChange}\r\n                value={state.location}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectType\"\r\n                placeholder=\"Type\"\r\n                onChange={handleChange}\r\n                value={state.projectType}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Project</TableCell>\r\n                <TableCell align=\"left\">Location</TableCell>\r\n                <TableCell align=\"left\">Type</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.projectName}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.location}</TableCell>\r\n                  <TableCell align=\"left\">{row.projectType}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => edit(row.projectID)}>\r\n                      <PencilSquare\r\n                        data-value={row.projectID}\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => activateModal(row.projectID)}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Projects };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { alertService, getProjectInfo, updateProjectInfo , getObjectTypes} from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function ProjectForm() {\r\n  let { projectID }= useParams();\r\n  const [validated, setValidated] = useState(false);\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    projectType: \"\",\r\n    location: \"\",\r\n    contactNumber: \"\",\r\n    maCompany: \"\",\r\n    equipManu: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectTypes, setProjectTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Project Info!\", error);\r\n      });\r\n      getObjectTypes(\"project\")\r\n      .then(async (data) => {\r\n        setProjectTypes(Object.entries(data.message).map((type)=>({\r\n          id: type[0],\r\n          name: type[1].name\r\n        })));\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Project Types!\", error);\r\n      });\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()) update();\r\n  };\r\n\r\n  const update = () => {\r\n    updateProjectInfo(projectID, state)\r\n      .then(async (data) => {\r\n        alertService.success('Update Successful!');\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Project Info</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Project ID\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control type=\"text\" placeholder={projectID} readOnly />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Project Name\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              placeholder=\"Name\"\r\n              id=\"projectName\"\r\n              name=\"projectName\"\r\n              value={state.projectName}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Name is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Project Type\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              custom\r\n              required\r\n              as=\"select\"\r\n              id=\"projectType\"\r\n              name=\"projectType\"\r\n              value={state.projectType===null? '':state.projectType}\r\n              onChange={handleChange}\r\n            >\r\n              <option value={''}>--Select Type--</option>\r\n              {\r\n                projectTypes.map((type)=>(\r\n                  <option value={type.id}>{type.name}</option>\r\n                ))\r\n              }\r\n            </Form.Control>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Type is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Location\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"location\"\r\n              name=\"location\"\r\n              value={state.location}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Location is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Equipment Manufacturer\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"equipManu\"\r\n              name=\"equipManu\"\r\n              value={state.equipManu}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Equipment Manufacturer is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n      </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            MA Company\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"maCompany\"\r\n              name=\"maCompany\"\r\n              value={state.maCompany}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              MA Company is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Contact No.\r\n          </Form.Label>\r\n          <Form.Label\r\n            column\r\n            sm={4}\r\n          >\r\n            <PhoneInput\r\n              inputProps={{\r\n                required: true\r\n              }}\r\n              placeholder=\"+XX-XXXX-XXXX\"\r\n              id=\"contactNumber\"\r\n              name=\"contactNumber\"\r\n              country={\"sg\"}\r\n              value={String(state.contactNumber)}\r\n              onChange={(e)=>{\r\n                setState((prevState) => ({\r\n                  ...prevState,\r\n                  [\"contactNumber\"]: parseInt(e)\r\n                }));\r\n              }}\r\n              isValid={(value, country) => {\r\n                if (value.length === 0) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              }}\r\n            />\r\n          </Form.Label>\r\n        </Form.Group>\r\n\r\n        \r\n        <Form.Group as={Row}>\r\n          <Col sm={8}\r\n           className=\"d-flex justify-content-end\">\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ProjectForm };\r\n","import { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, InputGroup, Breadcrumb } from \"react-bootstrap\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport { alertService, getBusinessInfo, updateBusinessInfo, getProjectInfo } from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function BusinessDetails(props) {\r\n  let {projectID} = useParams();\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    barrierDelay: 5,\r\n    networkWarningDuration: 5,\r\n    instantImgUpload: false,\r\n    vehicleColorDetect: false,\r\n    localImgStore: false\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    /*   \r\n    getBusinessInfo(projectID)\r\n    .then(async (data) => {\r\n      setState(data.message)\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    let res = {\r\n      barrierDelay: 5,\r\n      networkWarningDuration: 5,\r\n      instantImgUpload: false,\r\n      vehicleColorDetect: false,\r\n      localImgStore: false\r\n    };\r\n    setState(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    update();\r\n  };\r\n\r\n  const update = () => {\r\n    /* Pending API for project details update*/\r\n  };\r\n\r\n  function myFormat(num) {\r\n    return num + \" mins\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Business Details</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Breadcrumb>\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      </Breadcrumb>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Barrier Opening Delay\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"barrierDelay\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.barrierDelay}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Duration before issuing network down warning\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"networkWarningDuration\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.networkWarningDuration}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Instant Image Upload to Server\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.instantImgUpload}\r\n              type=\"switch\"\r\n              id=\"instantImgUpload\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Local Storage of images after uploading\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.localImgStore}\r\n              type=\"switch\"\r\n              id=\"localImgStore\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Vehicle Colour Detection\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.vehicleColorDetect}\r\n              type=\"switch\"\r\n              id=\"vehicleColorDetect\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col sm={8}\r\n           className=\"d-flex justify-content-end\">\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { BusinessDetails };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, DeviceModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getDevice, alertService, delDevice, getObjectTypes, getProjectInfo, getGateInfo} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport SignalCellularConnectedNoInternet0BarIcon from '@material-ui/icons/SignalCellularConnectedNoInternet0Bar';\r\n\r\nexport function Devices (){\r\n    let { projectID, gateID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [gateName, setGateName] = useState(\"\");\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(null);\r\n  const [dummy, setDummy] = useState(false);\r\n  const [deviceTypes, setDeviceTypes] = useState([]);\r\n  const [deviceTypeNames, setDeviceTypeNames] = useState([]);\r\n  const reload = () =>{\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    getGateInfo(gateID)\r\n    .then(async (data) => {\r\n      setGateName(data.message.gateName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate Info, there was an error!\", error);\r\n    });\r\n    getDevice(gateID, [\"deviceID\", \"deviceName\", \"deviceType\", \"deviceStatus\",\"deviceIP\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Device, there was an error!\", error);\r\n      });\r\n      getObjectTypes(\"device\")\r\n    .then(async (data) => {\r\n      setDeviceTypeNames(data.message);\r\n      setDeviceTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Device Types!\", error);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (deviceID) => {\r\n    delDevice(deviceID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Device Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this device?\"\r\n      />\r\n      <DeviceModal\r\n        deviceTypes = {deviceTypes}\r\n        hide={toggle.edit}\r\n        deviceID = {curID}\r\n        gateID = {gateID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item href={\"/project/\"+projectID+\"/gate\"}>Gates</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Devices</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"d-flex align-items-center\">\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName} / {gateName}</h5>\r\n      <div style={{\"flex-grow\":\"1\"}}></div>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"center\"><b>IP</b></TableCell>\r\n                <TableCell align=\"center\"><b>Status</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceName}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                  {row.deviceType===null?null: (deviceTypeNames[row.deviceType]===undefined? null: deviceTypeNames[row.deviceType].name)}\r\n                   </TableCell>\r\n                  <TableCell align=\"center\">{(row.deviceIP==\"\"||row.deviceIP==null)?\"-\":row.deviceIP}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceStatus==='online'?\r\n                  <Tooltip title=\"Online\">\r\n                  <SignalCellularAltIcon style={{ color: \"#4caf50\" }}/>\r\n                  </Tooltip>\r\n                  :\r\n                  <Tooltip title=\"Offline\">\r\n                  <SignalCellularConnectedNoInternet0BarIcon style={{ color: \"#f44336\" }}/>\r\n                  </Tooltip>\r\n                  }</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Devices };","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu, Unlock } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, GateModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getGate, alertService, delGate, getObjectTypes, openGate, getProjectInfo, getProjects} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\n\r\nexport function Gates (){\r\n    let { projectID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [gateTypes, setGateTypes] = useState([]);\r\n  const [gateTypeNames, setGateTypeNames] = useState([]);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    getGate(projectID, [\"gateID\", \"gateName\", \"gateType\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate, there was an error!\", error);\r\n    });\r\n    getObjectTypes(\"gate\")\r\n    .then(async (data) => {\r\n      setGateTypeNames(data.message);\r\n      setGateTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Gate Types!\", error);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const openGateFunc = (gateID, gateName) =>{\r\n    openGate(gateID)\r\n    .then(async (data) => {\r\n      alertService.success(\"Opened Gate \"+gateName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Open Gate!\", error);\r\n    });\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const devices = (gateID) => {\r\n    history.push(pathname +\"/\"+ String(gateID));\r\n  };\r\n\r\n  const del = async (gateID) => {\r\n    delGate(gateID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Gate Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this gate?\"\r\n      />\r\n      <GateModal\r\n        gateTypes = {gateTypes}\r\n        hide={toggle.edit}\r\n        gateID = {curID}\r\n        newState = {modal}\r\n        projectID = {projectID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Gates</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"d-flex align-items-center\">\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      <div style={{\"flex-grow\":\"1\"}}></div>\r\n        <Form inline onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    setModal(true);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.gateID}</TableCell>\r\n                  <TableCell align=\"center\">{row.gateName}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                  {row.gateType===null?null: (gateTypeNames[row.gateType]===undefined? null: gateTypeNames[row.gateType].name)}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Devices\">\r\n                    <IconButton \r\n                    style={{padding:\"5px 10px\"}}\r\n                    onClick={() => {\r\n                        devices(row.gateID);\r\n                    }}>\r\n                      <Cpu\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton\r\n                    style={{padding:\"5px 10px\"}}\r\n                     onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        setModal(false);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Open Gate\">\r\n                    <IconButton\r\n                    style={{padding:\"5px 10px\"}}\r\n                     onClick={() => {\r\n                        openGateFunc(row.gateID, row.gateName);\r\n                    }}>\r\n                      <Unlock\r\n                        size={21}\r\n                        color=\"green\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton\r\n                    style={{padding:\"5px 10px\"}}\r\n                     onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Gates };","import React, { useState, useEffect } from \"react\";\r\nimport { Breadcrumb } from \"react-bootstrap\";\r\nimport {Input , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { TablePaginationActions } from \"../../components/index.js\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getProjectInfo, alertService} from '../../services/index.js';\r\n\r\nimport { PencilSquare } from \"react-bootstrap-icons\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport function LedConfig(props) {\r\n  let {projectID} = useParams();\r\n  const [rows, setRows] = useState([]);\r\n  const [curID, setCurID] = useState(null);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    trigger: \"\",\r\n    voiceMsg: \"\",\r\n    textMsg: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    /*getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setInitialRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n    let res = [\r\n        {\r\n            id: 1,\r\n            trigger: \"Trigger 1\",\r\n            voiceMsg: \"Sample 1\",\r\n            textMsg: \"Sample 01\"\r\n        },\r\n        {\r\n            id: 2,\r\n            trigger: \"Trigger 2\",\r\n            voiceMsg: \"Sample 2\",\r\n            textMsg: \"Sample 02\"\r\n        },\r\n        {\r\n            id: 3,\r\n            trigger: \"Trigger 3\",\r\n            voiceMsg: \"Sample 3\",\r\n            textMsg: \"Sample 03\"\r\n        },\r\n        {\r\n            id: 4,\r\n            trigger: \"Trigger 4\",\r\n            voiceMsg: \"Sample 4\",\r\n            textMsg: \"Sample 04\"\r\n        },\r\n        {\r\n            id: 5,\r\n            trigger: \"Trigger 5\",\r\n            voiceMsg: \"Sample 5\",\r\n            textMsg: \"Sample 05\"\r\n        },\r\n        {\r\n            id: 6,\r\n            trigger: \"Trigger 6\",\r\n            voiceMsg: \"Sample 6\",\r\n            textMsg: \"Sample 06\"\r\n        }\r\n    ];\r\n    setRows(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const save = () =>{\r\n    // API\r\n    //reload();\r\n  }\r\n\r\n  const edit = (vals) =>{\r\n    const {id, trigger, voiceMsg, textMsg} = vals;\r\n    setState({\r\n        trigger, \r\n        voiceMsg, \r\n        textMsg});\r\n    setCurID(id);\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setCurID(null);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>LED Configuration</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Breadcrumb>\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      </Breadcrumb>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Trigger</TableCell>\r\n                <TableCell align=\"center\">Voice Message</TableCell>\r\n                <TableCell align=\"center\">Text Message</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.trigger}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"voiceMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.voiceMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.voiceMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"textMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.textMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.textMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"right\"  style={{padding:0}}>\r\n                    {curID === null?\r\n                        (<IconButton onClick={() => edit(row)}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            color=\"royalblue\"\r\n                            />\r\n                        </IconButton>)\r\n                        :(\r\n                        curID === row.id?\r\n                        <div>\r\n                            <IconButton onClick={() => save()}>\r\n                                <SaveIcon\r\n                                size={21}\r\n                                color=\"primary\"\r\n                                />\r\n                            </IconButton>\r\n                            <IconButton onClick={() => setCurID(null)}>\r\n                                <CloseIcon\r\n                                size={21}\r\n                                color=\"error\"\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                        :\r\n                        (<IconButton disabled = {true}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            />\r\n                        </IconButton>)\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { LedConfig };\r\n","import {\r\n  ProjectForm,\r\n  BusinessDetails,\r\n  Devices,\r\n  LedConfig,\r\n  Gates\r\n} from \"./projectSubPages/index.js\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport {Nav, Tab} from \"react-bootstrap\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nexport function EditProject(props) {\r\n  let history = useHistory();\r\n  let { path, url } = useRouteMatch();\r\n  let {pathname} = useLocation();\r\n  let page = pathname.split('/')[3];\r\n  const direct = (path) =>{\r\n    history.push(url+path);\r\n  }\r\n  return (\r\n    <div className=\"tabModal\" style={{background:\"transparent\"}}>\r\n      <Tab.Container id=\"left-tabs-example\" >\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/info\")}} active = {page===\"info\"}>Infomation</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/business\")}} active = {page===\"business\"}>Business</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/gate\")}} active = {page===\"gate\"}>Gates</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/ledconfig\")}} active = {page===\"ledconfig\"}>LED Config</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n          <Switch>\r\n            <Route exact path={`${path}/info`}>\r\n              <ProjectForm />\r\n            </Route>\r\n            <Route exact path={`${path}/business`}>\r\n              <BusinessDetails />\r\n            </Route>\r\n            <Route exact path={`${path}/gate/:gateID`}>\r\n              <Devices />\r\n            </Route>\r\n            <Route exact path={`${path}/gate`}>\r\n              <Gates />\r\n            </Route>\r\n            <Route exact path={`${path}/ledconfig`}>\r\n              <LedConfig />\r\n            </Route>\r\n            <Route path={path}>\r\n              <Redirect to={`${url}/info`} />\r\n            </Route>\r\n          </Switch>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { EditProject };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Modal } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, \r\n  getSpecialPlate,\r\n  delSpecialPlate,\r\n  updateSpecialPlate,\r\n  addSpecialPlate } from '../services/index.js';\r\n\r\nexport function PlateRegex({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false,\r\n    edit: false\r\n  });\r\n  const [state, setState] = useState({\r\n    projectID: NaN,\r\n    actualPlate: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectID: NaN,\r\n    actualPlate: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectID: NaN,\r\n      actualPlate: \"\"\r\n    });\r\n    setCurState({\r\n      projectID: NaN,\r\n      actualPlate: \"\"\r\n    });\r\n  }\r\n  const [val, setVal] = useState({\r\n    projectID: NaN,\r\n    matchPlate: \"\",\r\n    actualPlate: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const reload = () =>{\r\n    getSpecialPlate([\"projectID\", \"matchPlate\", \"actualPlate\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  const func = async (val) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element.projectID] = element.projectName;\r\n    });\r\n    return await temp;\r\n  };\r\n  useEffect(() => {\r\n    getProjects([\"projectID\", \"projectName\"])\r\n    .then(async (data) => {\r\n      setProjects(data.content);\r\n      func(data.content).then(async(list)=>{\r\n        setProjectNames(await list);\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },projectNames);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleChangeVal = (e) =>{\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setVal((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (values) => {\r\n    let {projectID, matchPlate, actualPlate} = values;\r\n    setValidated(false);\r\n    setVal({\r\n        projectID,\r\n        matchPlate,\r\n        actualPlate\r\n      });\r\n    toggleModal(\"edit\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectID, actualPlate } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          (Number.isNaN(projectID) || row[\"projectID\"] === projectID) &&\r\n          String(row[\"actualPlate\"]).toLowerCase().indexOf(actualPlate.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const insert = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n      addSpecialPlate(val)\r\n      .then(async (data) => {\r\n        reload();\r\n        toggleModal(\"add\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const edit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n        updateSpecialPlate(val)\r\n        .then(async (data) => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const del = (id) => {\r\n    delSpecialPlate(id)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this regex?\"\r\n      />\r\n      <Modal show={toggle.add} onHide={()=>toggleModal(\"add\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={insert}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4} align=\"right\">\r\n            Project Name\r\n          </Form.Label>\r\n          <Col sm={6}>\r\n              <Form.Control\r\n                custom\r\n                required\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChangeVal}\r\n                value={val.projectID}\r\n              >\r\n                  <option value={null}>--Select a Project--</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Project Name is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n        </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={4} align=\"right\">\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={4} align=\"right\">\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"add\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    <Modal show={toggle.edit} onHide={()=>toggleModal(\"edit\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={edit}>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={4} align=\"right\">\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={4} align=\"right\">\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"edit\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Plate Regex</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectID}\r\n              >\r\n                  <option value={null}>All Projects</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"actualPlate\"\r\n                placeholder=\"Actual Plate\"\r\n                onChange={handleChange}\r\n                value={state.actualPlate}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                setVal({\r\n                    projectID: \"\",\r\n                    matchPlate: \"\",\r\n                    actualPlate: \"\"\r\n                    });\r\n                  setValidated(false);\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Project</TableCell>\r\n                <TableCell align=\"center\">Regex of Plate</TableCell>\r\n                <TableCell align=\"center\">Actual Plate</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.matchPlate}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {projectNames[row.projectID]}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.matchPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.actualPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {activateModal(row)}}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.matchPlate);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { PlateRegex };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Spinner } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { ImageModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getMovementLogs, getObjectTypes, alertService } from '../services/index.js';\r\nimport { LockFill, UnlockFill } from \"react-bootstrap-icons\";\r\n\r\nimport { InputGroup, DatePicker } from 'rsuite';\r\n\r\nfunction pad2(n) { return n < 10 ? '0' + n : n }\r\nfunction dateToString(date){\r\n  if(date===null)return \"\";\r\n  else return date.getFullYear().toString() +'-'+ pad2(date.getMonth() + 1) +'-'+ pad2( date.getDate()) +' '+ pad2( date.getHours() ) +':'+ pad2( date.getMinutes() ) +':'+ pad2( date.getSeconds() );\r\n}\r\n\r\nfunction minStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 > str2)return str2;\r\n  else return str1;\r\n}\r\nfunction maxStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 < str2)return str2;\r\n  else return str1;\r\n}\r\n\r\nexport function Records({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n  const [gateTypes, setGateTypes] = useState({});\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const  queryFields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\"\r\n  ];\r\n  const fieldPlaceholder = {\r\n    projectName: \"Project Name\",\r\n    vehicleType: \"Vehicle Type\",\r\n    isOpened: \"Is Opened\",\r\n    gateName: \"Gate Name\",\r\n    gateType: \"Gate Type\",\r\n    originalPlate: \"Original Plate\",\r\n    confirmedPlate: \"Actual Plate\",\r\n    detectionTime: \"Detection Time\",\r\n    confirmedTime: \"Confirmed Time\",\r\n    image1: \"Image 1\",\r\n    image2: \"Image 2\",\r\n    image3: \"Image 3\",\r\n    plateImage: \"Plate Image\"\r\n  };\r\n  const fields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"isOpened\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"detectionTime\",\r\n    \"confirmedTime\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\",\r\n    \"image1\",\r\n    \"image2\",\r\n    \"image3\",\r\n    \"plateImage\"\r\n  ];\r\n  const fieldLength = {\r\n    projectName: \"120px\",\r\n    vehicleType: \"120px\",\r\n    isOpened: \"120px\",\r\n    gateName: \"120px\",\r\n    gateType: \"120px\",\r\n    originalPlate: \"120px\",\r\n    confirmedPlate: \"120px\",\r\n    detectionTime: \"230px\",\r\n    confirmedTime: \"230px\",\r\n    image1: \"90px\",\r\n    image2: \"90px\",\r\n    image3: \"90px\",\r\n    plateImage: \"90px\"\r\n  };\r\n  const fieldHeight = {\r\n    image1: \"50px\",\r\n    image2: \"50px\",\r\n    image3: \"50px\",\r\n    plateImage: \"50px\",\r\n    isOpened: \"30px\"\r\n  }\r\n  const [state, setState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\"\r\n  });\r\n  const [timeState, setTimeState] = useState({\r\n    startTime: \"\",\r\n    endTime: \"\"\r\n  })\r\n  const [curTimeState, setCurTimeState] = useState({\r\n    startTime: \"\",\r\n    endTime: \"\"\r\n  })\r\n  const [curState, setCurState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const reload = () =>{\r\n    let filters = (timeState.startTime===\"\"&&timeState.endTime===\"\")?{}:{\r\n      detectionTime : timeState.startTime+'|'+timeState.endTime\r\n    };\r\n    getMovementLogs(fields.concat(\"logID\"), filters)\r\n      .then(async (data) => {\r\n      setLoading(false);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n    setLoading(true);\r\n    getObjectTypes(\"gate\")\r\n    .then(async (data) => {\r\n      setGateTypes(data.message);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Gate Types!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },[curTimeState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    if(id===\"curField\"){\r\n      setState((prevState) => ({\r\n        curField: value,\r\n        val: \"\"\r\n      }));\r\n    }else{\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleTimeChange = (value, id) => {\r\n    setTimeState((prevState)=>({\r\n      ...prevState,\r\n      [id]:value\r\n    }));\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { curField, val } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[curField].toLowerCase().indexOf(val.toLowerCase()) >= 0 \r\n      ).sort(\r\n        (a,b)=> (a.detectionTime < b.detectionTime) ? 1 : -1\r\n      )\r\n    );\r\n  };\r\n  \r\n  const reset = async (e) =>{\r\n    setState({\r\n      curField: \"projectName\",\r\n      val: \"\"\r\n    });\r\n    setCurState({\r\n      curField: \"projectName\",\r\n      val: \"\"\r\n    });\r\n    setCurTimeState({\r\n      startTime: \"\",\r\n      endTime: \"\"\r\n    });\r\n    setTimeState({\r\n      startTime: \"\",\r\n      endTime: \"\"\r\n    });\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ImageModal\r\n      src = {imageSrc}\r\n      toggleModal={()=>{\r\n        setImageSrc(null);\r\n      }}\r\n      />\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Entry Exit Records</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row className=\"d-flex\">\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"curField\"\r\n                onChange={handleChange}\r\n                value={state.curField}\r\n              >\r\n                  {queryFields.map((queryField)=>(\r\n                      <option value={queryField}>{fieldPlaceholder[queryField]}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"val\"\r\n                placeholder={fieldPlaceholder[state.curField]}\r\n                onChange={handleChange}\r\n                value={state.val}\r\n              />  \r\n            </Col>\r\n            <Col sm=\"auto\">\r\n            <InputGroup style={{\"background-color\":\"white\"}}>\r\n              <InputGroup.Addon>From</InputGroup.Addon>\r\n              <DatePicker \r\n              format=\"YYYY-MM-DD HH:mm:ss\" \r\n              block appearance=\"subtle\"\r\n              value={timeState.startTime}\r\n              onChange={(val)=>{\r\n                handleTimeChange(dateToString(val), \"startTime\");\r\n                handleTimeChange(maxStr(dateToString(val),timeState.endTime), \"endTime\");\r\n              }}\r\n              ranges={[\r\n                {\r\n                  label: 'Now',\r\n                  value: new Date()\r\n                }\r\n              ]}\r\n              placeholder=\"YYYY-MM-DD HH:MM:SS\"/>\r\n              <InputGroup.Addon>To</InputGroup.Addon>\r\n              <DatePicker \r\n              format=\"YYYY-MM-DD HH:mm:ss\" \r\n              block appearance=\"subtle\"\r\n              value={timeState.endTime}\r\n              onChange={(val)=>{\r\n                handleTimeChange(dateToString(val), \"endTime\");\r\n                handleTimeChange(minStr(dateToString(val),timeState.startTime), \"startTime\");\r\n              }} \r\n              ranges={[\r\n                {\r\n                  label: 'Now',\r\n                  value: new Date()\r\n                }\r\n              ]}\r\n              placeholder=\"YYYY-MM-DD HH:MM:SS\"/>\r\n            </InputGroup>\r\n            </Col>\r\n            <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state);setCurTimeState(timeState)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper} className=\"overflowTable scrollbar-grey\">\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {fields.map((field) =>(\r\n                  <TableCell align=\"center\" style={{\"min-width\":fieldLength[field]}}>{fieldPlaceholder[field]}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            {loading? \r\n            <TableBody>\r\n            <div className = \"loadingTable\" style={{ height: 53 * rowsPerPage }}>\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </div>\r\n              <TableRow style={{ height: 53 * rowsPerPage }}>\r\n                  <TableCell colSpan={13} />\r\n                </TableRow>\r\n            </TableBody>\r\n            :\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.logID}>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.vehicleType}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.isOpened === true?\r\n                    <UnlockFill color=\"#64D381\" size={25} />:\r\n                    <LockFill color=\"red\" size={25} />}\r\n            </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.gateName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.gateType===null?null: (gateTypes[row.gateType]===undefined? null: gateTypes[row.gateType].name)}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.detectionTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.confirmedTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.originalPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {(row.confirmedPlate===null||row.confirmedPlate==\"\")?null:\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.confirmedPlate}</u>\r\n                      </div>\r\n                    </div>}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image1)} \r\n                    style={{\"height\":fieldHeight.image1}} \r\n                    src={row.image1}/>\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image2)} \r\n                    style={{\"height\":fieldHeight.image2}} \r\n                    src={row.image2} />\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image3)} \r\n                    style={{\"height\":fieldHeight.image3}} \r\n                    src={row.image3} />\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.plateImage)} \r\n                    style={{\"height\":fieldHeight.plateImage}} \r\n                    src={row.plateImage} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={13} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>}\r\n          </Table>\r\n        </TableContainer>\r\n        <TableRow className=\"d-flex justify-content-center\">\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 50]}\r\n              colSpan={13}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n        </TableRow>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Records };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport function ParkRecords({ match }) {\r\n  return (<div className=\"d-flex justify-content-center\"><h1>Pending API</h1></div>);\r\n}\r\n\r\nexport default { ParkRecords };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, RulesModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getGate, alertService, delGate, getProjects, getAccessRule, delAccessRule} from '../services/index.js';\r\nimport { Directions, MonetizationOn } from \"@material-ui/icons\";\r\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nexport function ParkingRules (){\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [project,setProject] = useState(\"\");\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const [gateNames, setGateNames] = useState({});\r\n  const [projects,setProjects] = useState([]);\r\n  const func = async (val, inputField, outputField) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element[inputField]] = element[outputField];\r\n    });\r\n    return await temp;\r\n  };\r\n  const reloadProjects = () =>{\r\n    getProjects([\"projectID\", \"projectName\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setProjects(data.content);\r\n        func(data.content, \"projectID\", \"projectName\").then(async(list)=>{\r\n          setProjectNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reloadProjects();\r\n  }, [dummy]);\r\n\r\n  const reload = () =>{\r\n    getAccessRule(project, [\"accessRuleID\", \"accessRuleName\", \"isChargeable\", \"gates\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Get Gate, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  const reloadGates = () =>{\r\n    getGate(project,[\"gateID\",\"gateName\"])\r\n      .then(async (data) => {\r\n        func(data.content, \"gateID\", \"gateName\").then(async(list)=>{\r\n          setGateNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n    reloadGates();\r\n  },[project]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (accessRuleID) => {\r\n    delAccessRule(accessRuleID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Rule Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Rule, There was an error!\", error);\r\n    });\r\n  };\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this rule?\"\r\n      />\r\n      {toggle.edit?\r\n      <RulesModal\r\n        hide={toggle.edit}\r\n        projectID = {project}\r\n        projectName = {projectNames[project]}\r\n        accessRuleID = {curID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />:null}\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Access Rules</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                onChange={(e)=>{\r\n                  setProject(e.target.value);\r\n                }}\r\n                value={project}\r\n              >\r\n                <option value=\"\">--Select a Project--</option>\r\n                  {projects.map((val)=>(\r\n                      <option value={val.projectID}>{val.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n              disabled={project===\"\"}\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>Project</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Gates</b></TableCell>\r\n                <TableCell align=\"center\"><b>Chargeable</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{projectNames[project]}</TableCell>\r\n                  <TableCell align=\"center\">{row.accessRuleName}</TableCell>\r\n                  <TableCell align=\"center\">{row.gates===null?null:((row.gates).map((gate)=>(\r\n                    <div>{gate===null?null:gateNames[gate]} <br/></div> \r\n                  )))}</TableCell>\r\n                  <TableCell align=\"center\">{row.isChargeable?\r\n                  <AttachMoneyIcon style={{color:\"#66bb6a\"}}/>\r\n                  :<MoneyOffIcon style={{color:\"red\"}}/>\r\n                  }</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.accessRuleID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.accessRuleID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ParkingRules };","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, WhitelistModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {alertService, getProjects, getAccessRule, \r\n    getWhitelistEntry,\r\n    delWhitelistEntryInfo} from '../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\n\r\nexport function Whitelist (){\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [pNumber, setPNumber] = useState(\"\");\r\n  const [curPNo, setCurPNo] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [project,setProject] = useState(\"\");\r\n  const [curID, setCurID] = useState(null);\r\n  const [dummy, setDummy] = useState(false);\r\n  const [accessRules, setAccessRules] = useState([]);\r\n  const [accessRuleVals, setAccessRuleVals] = useState({});\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const [projects,setProjects] = useState([]);\r\n  const func = async (val, inputField, outputField) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element[inputField]] = element[outputField];\r\n    });\r\n    return await temp;\r\n  };\r\n\r\n  const reloadProjects = () =>{\r\n    getProjects([\"projectID\", \"projectName\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setProjects(data.content);\r\n        func(data.content, \"projectID\", \"projectName\").then(async(list)=>{\r\n          setProjectNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Project, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    reloadProjects();\r\n  }, [dummy]);\r\n\r\n  \r\n  const reloadAccessRules = () =>{\r\n    getAccessRule(project,[\"accessRuleID\",\"accessRuleName\",\"projectID\"])\r\n      .then(async (data) => {\r\n        setAccessRules(data.content);\r\n        /*setAccessRules(data.content.map((rule)=>({\r\n          value: rule.accessRuleID,\r\n          label: rule.accessRuleName\r\n        })));*/\r\n        func(data.content,\"accessRuleID\", \"accessRuleName\").then(async(list)=>{\r\n          setAccessRuleVals(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Access Rule, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reloadAccessRules();\r\n    setPNumber(\"\");\r\n    setCurPNo(\"\");\r\n  },[project]);\r\n\r\n\r\n  const reload = () =>{\r\n    getWhitelistEntry([\"recordID\",\"plateNumber\", \"accessRuleID\", \"tag\", \"startDateTime\",\"endDateTime\"])\r\n    .then(async (data) => {\r\n        setInitialRows(\r\n            data.content.filter((entry)=>\r\n                entry.accessRuleID !== null &&\r\n                accessRuleVals[entry.accessRuleID] !== undefined\r\n            )\r\n        );\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Get entry, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },[accessRuleVals]);\r\n\r\n  const filter = () => {\r\n    let curRows = initialRows;\r\n    console.log(curRows);\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[\"plateNumber\"].toLowerCase().indexOf(pNumber.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(()=>{\r\n    filter();\r\n  },[initialRows, pNumber]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (recordID) => {\r\n    delWhitelistEntryInfo(recordID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Entry Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Entry, There was an error!\", error);\r\n    });\r\n  };\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this entry?\"\r\n      />\r\n      {toggle.edit?\r\n      <WhitelistModal\r\n        hide={toggle.edit}\r\n        projectName = {projectNames[project]}\r\n        ID = {curID}\r\n        accessRules = {accessRules}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />:null}\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Whitelist Entries</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row className=\"d-flex\">\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                onChange={(e)=>{\r\n                  setProject(e.target.value);\r\n                }}\r\n                value={project}\r\n              >\r\n                <option value=\"\">--Select a Project--</option>\r\n                  {projects.map((val)=>(\r\n                      <option value={val.projectID}>{val.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n              disabled={project===\"\"}\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n            <div style={{\"flex-grow\":\"1\"}}></div>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                placeholder=\"Plate No.\"\r\n                onChange={(e)=>{\r\n                    setCurPNo(e.target.value);\r\n                }}\r\n                value={curPNo}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-primary\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    setPNumber(curPNo);\r\n                }}\r\n              >\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n            <Button type=\"button\" variant=\"secondary\" onClick={()=>{\r\n                setCurPNo(\"\");\r\n                setPNumber(\"\");\r\n            }}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"center\"><b>Plate Number</b></TableCell>\r\n                <TableCell align=\"center\"><b>Project</b></TableCell>\r\n                <TableCell align=\"center\"><b>Access Rule</b></TableCell>\r\n                <TableCell align=\"center\"><b>Tag</b></TableCell>\r\n                <TableCell align=\"center\"><b>Start Date</b></TableCell>\r\n                <TableCell align=\"center\"><b>End Date</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.plateNumber}</u>\r\n                      </div>\r\n                    </div>\r\n                </TableCell>\r\n                  <TableCell align=\"center\">{projectNames[project]}</TableCell>\r\n                  <TableCell align=\"center\">{row.accessRuleID === null? null: accessRuleVals[row.accessRuleID]}</TableCell>\r\n                  <TableCell align=\"center\">{row.tag}</TableCell>\r\n                  <TableCell align=\"center\">{row.startDateTime}</TableCell>\r\n                  <TableCell align=\"center\">{row.endDateTime}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <IconButton onClick={() => {\r\n                        setCurID(row.recordID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.recordID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={7}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Whitelist };","import React, { useContext } from \"react\";\nimport { store } from \"./store.js\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport \"./styles.css\";\nimport \"./assets/scrollbar.css\";\nimport { NavBar, AlertGroup } from \"./components/index.js\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport { Home, Login, Projects, EditProject, PlateRegex, Records, ParkRecords, ParkingRules, Whitelist } from \"./pages/index.js\";\n\nclass DebugRouter extends Router {\n  constructor(props) {\n    super(props);\n    console.log(\"initial history is: \", JSON.stringify(this.history, null, 2));\n    this.history.listen((location, action) => {\n      console.log(\n        `The current URL is ${location.pathname}${location.search}${location.hash}`\n      );\n      console.log(\n        `The last navigation action was ${action}`,\n        JSON.stringify(this.history, null, 2)\n      );\n    });\n  }\n}\n\nexport function App() {\n  return (\n    // <DebugRouter>\n    <Router>\n      <Switch>\n        <PrivateRoute path=\"/home\">\n          <Home />\n        </PrivateRoute>\n        <PrivateRoute path=\"/project/:projectID\">\n          <EditProject />\n        </PrivateRoute>\n        <PrivateRoute path=\"/project\">\n          <Projects />\n        </PrivateRoute>\n        <PrivateRoute path=\"/regex\">\n          <PlateRegex />\n        </PrivateRoute>\n        <PrivateRoute path=\"/records\">\n          <Records />\n        </PrivateRoute>\n        <PrivateRoute path=\"/parking\">\n          <ParkRecords />\n        </PrivateRoute>\n        <PrivateRoute path=\"/accessRules\">\n          <ParkingRules />\n        </PrivateRoute>\n        <PrivateRoute path=\"/whitelist\">\n          <Whitelist />\n        </PrivateRoute>\n        <PublicRoute path=\"/\">\n          <Login />\n        </PublicRoute>\n      </Switch>\n    </Router>\n    // </DebugRouter>\n  );\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  let auth = globalState.auth;\n  let toggled = globalState.toggled;\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth ? (\n          <div className=\"h-100\">\n              <AlertGroup />\n            <NavBar />\n            <div id=\"content-body\" className={toggled?\"content-body-collapsed\":\"content-body-expand\"}>\n              {React.cloneElement(children, { params: props.match.params })}\n            </div>\n          </div>\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ children, ...rest }) {\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  let auth = globalState.auth;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          <Redirect\n            to={{\n              pathname: \"/home\",\n              state: { from: location }\n            }}\n          />\n        ) : \n        <div className=\"h-100\">\n        <AlertGroup />\n          {children}\n        </div>\n      }\n    />\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { StateProvider } from \"./store.js\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StateProvider>\n    <StrictMode>\n      <App />\n    </StrictMode>\n  </StateProvider>,\n  rootElement\n);\n"],"sourceRoot":""}