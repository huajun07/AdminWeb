{"version":3,"sources":["store.js","components/NavBar.js","components/ConfirmModal.js","components/QueryModal.js","services/alertService.js","services/api.js","components/DeviceModal.js","components/GateModal.js","components/AlertGroup.js","components/TablePaginationActions.js","components/RulesModal.js","components/ImageModal.js","pages/Home.js","pages/Login.js","pages/Projects.js","pages/projectSubPages/ProjectForm.js","pages/projectSubPages/BusinessDetails.js","pages/projectSubPages/Devices.js","pages/projectSubPages/Gates.js","pages/projectSubPages/LedConfig.js","pages/EditProject.js","pages/PlateRegex.js","pages/Records.js","pages/ParkRecords.js","pages/ParkingRules.js","App.js","index.js"],"names":["initialState","auth","user","toggled","store","createContext","Provider","StateProvider","children","useReducer","state","action","type","value","Error","dispatch","NavBar","storeContext","useContext","globalState","history","useHistory","direct","path","console","log","push","className","collapsed","width","iconShape","style","icon","fontSize","onClick","title","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","Item","data-value","href","Divider","Text","ConfirmModal","props","toggleModal","success","hide","body","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","alertSubject","Subject","defaultId","alertService","onAlert","asObservable","pipe","filter","x","message","options","alert","alertType","error","info","warn","clear","next","server_URL","process","returnFunc","response","a","json","data","ok","content","status","Promise","reject","getProjects","columns","requestOptions","method","headers","JSON","stringify","authID","serviceName","objName","fetch","then","getGate","ID","filters","projectID","getProjectInfo","delProject","getGateInfo","gateID","delGate","delDevice","deviceID","getObjectTypes","obj","delAccessRule","accessRuleID","DeviceModal","deviceTypes","useState","validated","setValidated","setState","dummy","projects","setProjects","curProject","setCurProject","gates","setGates","useEffect","deviceName","deviceType","deviceCarpark","manufacturer","manufacturerCode","direction","isPrimaryDevice","isGateControl","getDeviceInfo","catch","handleChange","target","e","filler","e2","undefined","prevState","update","tempState","modifyParams","updateDeviceInfo","create","values","newDeviceReq","createDevice","Form","noValidate","onSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","Group","as","Row","Label","column","sm","Col","Control","required","placeholder","name","onChange","Feedback","readOnly","custom","map","project","projectName","disabled","gate","gateName","Check","checked","GateModal","newState","gateTypes","whiteListTags","setWhiteListTags","newInitialState","gateType","isChargeable","ledOnTime","ledOffTime","allowedTypes","getWhitelistTags","whitelistTags","handleTagChange","idx","indexOf","concat","tempList","splice","updateGateInfo","newGateReq","createGate","showSeconds","input","tag","index","includes","label","AlertGroup","alerts","this","subscription","subscribe","setTimeout","removeAlert","unsubscribe","length","Alert","dismissible","onClose","React","Component","TablePaginationActions","count","page","rowsPerPage","onChangePage","flexShrink","right","IconButton","event","aria-label","Math","ceil","max","RulesModal","curGates","setCurGates","initialGates","setInitialGates","loading","setLoading","func","val","temp","forEach","element","accessRuleName","getAccessRuleInfo","Object","keys","list","handleGateChange","updateAccessRuleInfo","createAccessRule","margin","Spinner","size","animation","role","ImageModal","src","centered","Home","devices","setDevices","newDevices","setNewDevices","setDeviceTypes","deviceTypeNames","setDeviceTypeNames","curID","setCurID","edit","toggle","setToggle","reload","getAllDevice","device","deviceStatus","getNewDevices","entries","modal","prevVal","Jumbotron","Card","color","height","Typography","component","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","padding","stickyHeader","String","Login","username","password","document","getElementById","innerText","Projects","match","initialRows","setInitialRows","rows","setRows","delete","add","location","projectType","curState","setCurState","curRows","toLowerCase","insert","contactNumber","maCompany","equipManu","addProject","del","setPage","setRowsPerPage","emptyRows","min","Breadcrumb","active","inline","slice","scope","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","ProjectForm","useParams","projectTypes","setProjectTypes","updateProjectInfo","country","isValid","BusinessDetails","setProjectName","barrierDelay","networkWarningDuration","instantImgUpload","vehicleColorDetect","localImgStore","myFormat","num","InputGroup","strict","format","Devices","useLocation","pathname","setGateName","getDevice","Tooltip","Gates","setGateTypes","gateTypeNames","setGateTypeNames","setModal","openGateFunc","openGate","LedConfig","trigger","voiceMsg","textMsg","Input","vals","EditProject","useRouteMatch","url","split","background","Tab","Container","xs","exact","to","PlateRegex","NaN","actualPlate","matchPlate","setVal","projectNames","setProjectNames","getSpecialPlate","handleChangeVal","Number","isNaN","delSpecialPlate","addSpecialPlate","updateSpecialPlate","activateModal","Records","imageSrc","setImageSrc","fieldPlaceholder","vehicleType","isOpened","originalPlate","confirmedPlate","detectionTime","confirmedTime","image1","image2","image3","plateImage","fields","fieldLength","fieldHeight","curField","startTime","endTime","getMovementLogs","sort","b","reset","queryField","isClearable","selected","maxDate","popperClassName","date","minDate","field","logID","ParkRecords","ParkingRules","setProject","gateNames","setGateNames","inputField","outputField","getAccessRule","Router","PrivateRoute","rest","render","cloneElement","params","from","PublicRoute","App","rootElement","ReactDOM"],"mappings":"sNAEMA,EAAe,CACnBC,MAAM,EACNC,KAAM,SACNC,SAAS,GAELC,EAAQC,wBAAcL,GACpBM,EAAaF,EAAbE,SAEFC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACZC,sBAAW,SAACC,EAAOC,GAC3C,OAAQA,EAAOC,MACb,IAAK,UACH,OAAO,2BACFF,GADL,IAEET,KAAMU,EAAOE,QAEjB,IAAK,UACH,OAAO,2BACFH,GADL,IAEER,KAAMS,EAAOE,QAEjB,IAAK,aACH,OAAO,2BACFH,GADL,IAEEP,SAAUO,EAAMP,UAEpB,QACE,MAAM,IAAIW,SAEbd,GArBmC,mBAC/BU,EAD+B,KACxBK,EADwB,KAuBtC,OAAO,cAACT,EAAD,CAAUO,MAAO,CAAEH,QAAOK,YAA1B,SAAuCP,K,6PCXzC,SAASQ,IACd,IAAMC,EAAeC,qBAAWd,GACxBW,EAAaE,EAAbF,SACFI,EAAcF,EAAaP,MAC1BP,EAAkBgB,EAAlBhB,QAASD,EAASiB,EAATjB,KACZkB,EAAUC,cAYRC,EAAS,SAACC,GACdC,QAAQC,IAAI,UAAWF,GACvBH,EAAQM,KAAKH,IAOf,OACE,sBAAKI,UAAU,+BAAf,UACE,cAAC,IAAD,CACEA,UAAU,qDACVC,UAAWzB,EACX0B,MAAM,QAHR,SAME,cAAC,IAAD,UACE,eAAC,IAAD,CAAMC,UAAU,SAAhB,UACE,cAAC,IAAD,CACEC,MAAO,CAAC,WAAa,UAAU,OAAS,OAAQ,iBAAiB,QACjEJ,UAAU,mDAFZ,SAGE,qBAAKI,MAAO,CAAC,cAAc,OAAQ,MAAQ,SAA3C,SACE,2CAGJ,cAAC,IAAD,CACEC,KAAM,cAAC,IAAD,CAAmBC,SAAS,UAClCF,MAAO,CAAC,iBAAiB,OAAQ,gBAAgB,kBAFnD,SAGE,sBAAKA,MAAO,CAAE,MAAQ,SAAtB,sBACY7B,OAGd,cAAC,IAAD,CAAU8B,KAAM,cAAC,IAAD,CAAUE,QAAS,kBAAIZ,EAAO,YAA9C,SACE,qBAAKY,QAAS,kBAAIZ,EAAO,UAAzB,oBAIF,cAAC,IAAD,CAAUU,KAAM,cAAC,IAAD,CAAUE,QAAS,kBAAIZ,EAAO,eAA9C,SACE,qBAAKY,QAAS,kBAAIZ,EAAO,aAAzB,uBAIF,cAAC,IAAD,CAAUU,KAAM,cAAC,IAAD,CAAUE,QAAS,kBAAIZ,EAAO,aAA9C,SACE,qBAAKY,QAAS,kBAAIZ,EAAO,WAAzB,2BAIF,cAAC,IAAD,CAAUU,KAAM,cAAC,IAAD,CAAaE,QAAS,kBAAIZ,EAAO,eAAjD,SACE,qBAAKY,QAAS,kBAAIZ,EAAO,aAAzB,kCAIF,cAAC,IAAD,CAAUU,KAAM,cAAC,IAAD,CAAkBE,QAAS,kBAAIZ,EAAO,eAAtD,SACE,qBAAKY,QAAS,kBAAIZ,EAAO,aAAzB,+BAIF,eAAC,IAAD,CAASa,MAAM,SAASH,KAAM,cAAC,IAAD,IAA9B,UACE,cAAC,IAAD,CAAWE,QAAS,kBAAIZ,EAAO,iBAA/B,0BACA,cAAC,IAAD,iCAKR,eAACc,EAAA,EAAD,CAAQC,GAAG,QAAQC,QAAQ,QAAQC,OAAO,KAAKZ,UAAW,oBAAoBxB,EAAQ,oBAAoB,kBAA1G,UACE,cAACiC,EAAA,EAAOI,MAAR,CACAb,UAAU,UACVO,QAhEgB,WACpBnB,EAAS,CACPH,KAAM,gBA4DJ,SAGE,cAAC,IAAD,MAEF,cAACwB,EAAA,EAAOK,OAAR,CAAeC,gBAAc,mBAAmBf,UAAU,iBAC1D,cAACS,EAAA,EAAOO,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,CAAKlB,UAAU,uBAAf,UACE,cAACkB,EAAA,EAAIC,KAAL,UACE,qBAAKZ,QAAS,kBAAIZ,EAAO,UAAzB,oBAIF,cAACuB,EAAA,EAAIC,KAAL,UACE,qBAAKZ,QAAS,kBAAIZ,EAAO,aAAzB,uBAIF,cAACuB,EAAA,EAAIC,KAAL,UACE,qBAAKZ,QAAS,kBAAIZ,EAAO,WAAzB,2BAIF,cAACuB,EAAA,EAAIC,KAAL,UACE,qBAAKZ,QAAS,kBAAIZ,EAAO,aAAzB,2BAIF,cAACuB,EAAA,EAAIC,KAAL,UACE,qBAAKZ,QAAS,kBAAIZ,EAAO,aAAzB,+BAIF,eAACyB,EAAA,EAAD,CAAaZ,MAAM,WAAWS,GAAG,qBAAjC,UACE,cAACG,EAAA,EAAYC,KAAb,CAAkBC,aAAW,QAAQf,QAASZ,EAA9C,oBAGA,cAACyB,EAAA,EAAYC,KAAb,CAAkBE,KAAK,cAAvB,4BAGA,cAACH,EAAA,EAAYC,KAAb,CAAkBE,KAAK,cAAvB,uBACA,cAACH,EAAA,EAAYI,QAAb,IACA,cAACJ,EAAA,EAAYC,KAAb,CAAkBE,KAAK,cAAvB,oCAMN,cAACd,EAAA,EAAOO,SAAR,CAAiBhB,UAAU,sBAA3B,SACE,cAACS,EAAA,EAAOgB,KAAR,UACE,cAACP,EAAA,EAAIC,KAAL,CAAUZ,QA/HL,WACbnB,EAAS,CACPH,KAAM,UACNC,OAAO,IAETE,EAAS,CACPH,KAAM,UACNC,MAAO,KAETO,EAAQM,KAAK,MAsHL,+BAQG,I,kBCjKR,SAAS2B,EAAaC,GAC3B,IAAIC,EAAcD,EAAMC,YACpBC,EAAUF,EAAME,QAChBC,EAAOH,EAAMG,KACbC,EAAOJ,EAAMI,KACbvB,EAAQmB,EAAMnB,MAClB,OACE,eAACwB,EAAA,EAAD,CAAOC,KAAMH,EAAMI,OAAQN,EAA3B,UACE,cAACI,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,UAAc7B,MAEhB,cAACwB,EAAA,EAAMM,KAAP,UAAaP,IACb,eAACC,EAAA,EAAMO,OAAP,WACE,cAACC,EAAA,EAAD,CAAQ7B,QAAQ,YAAYJ,QAASqB,EAArC,oBAGA,cAACY,EAAA,EAAD,CAAQ7B,QAAQ,UAAUJ,QAAS,WACjCsB,KADF,2BAUO,I,SCkBA,I,oEC3CTY,EAAe,IAAIC,IACnBC,EAAY,gBAELC,EAAe,CACxBC,QAiBJ,WAAkC,IAAjB5B,EAAgB,uDAAX0B,EAClB,OAAOF,EAAaK,eAAeC,KAAKC,aAAO,SAAAC,GAAC,OAAIA,GAAKA,EAAEhC,KAAOA,OAjBlEY,QAqBJ,SAAiBqB,EAASC,GACtBC,GAAM,2BAAKD,GAAN,IAAelE,KAAMoE,GAAmBH,cArB7CI,MAwBJ,SAAeJ,EAASC,GACpBC,GAAM,2BAAKD,GAAN,IAAelE,KAAMoE,GAAiBH,cAxB3CK,KA2BJ,SAAcL,EAASC,GACnBC,GAAM,2BAAKD,GAAN,IAAelE,KAAMoE,GAAgBH,cA3B1CM,KA8BJ,SAAcN,EAASC,GACnBC,GAAM,2BAAKD,GAAN,IAAelE,KAAMoE,GAAmBH,cA9B7CE,SACAK,MAuCJ,WAAgC,IAAjBxC,EAAgB,uDAAX0B,EAChBF,EAAaiB,KAAK,CAAEzC,SArCXoC,GACA,UADAA,GAEF,SAFEA,GAGH,OAHGA,GAIA,UA0Bb,SAASD,GAAMA,GACXA,EAAMnC,GAAKmC,EAAMnC,IAAM0B,EACvBF,EAAaiB,KAAKN,GC9CtB,IAAMO,GAAaC,sCAEbC,GAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACID,EAASE,OADb,UACTC,EADS,OAEVH,EAASI,GAFC,uBAILZ,EAASW,GAAQA,EAAKE,SAAYL,EAASM,OAJtC,kBAKJC,QAAQC,OAAOhB,IALX,gCAORW,GAPQ,2CAAH,sDAUVM,GAAc,SAACC,GACjB,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,WACbZ,QAAS,CACPa,QAAS,UACTR,cAIR,OAAOS,MAAMtB,GAAYc,GACxBS,KAAKrB,KA+HJsB,GAAU,SAACC,EAAIZ,GACjB,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,WACbZ,QAAS,CACTa,QAAS,OACTR,UACAa,QAAQ,CACJC,UAAWF,OAKvB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,KA4EJ0B,GAAiB,SAACH,GACpB,IAAMX,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,aACbZ,QAAS,CACTmB,UAAWF,MAInB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,KAGJ2B,GAAa,SAACJ,GAChB,IAAMX,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,gBACbZ,QAAS,CACLmB,UAAWF,MAIvB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,KAoCJ4B,GAAc,SAACL,GACjB,IAAMX,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,UACbZ,QAAS,CACLuB,OAAQN,MAIpB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,KAGJ8B,GAAU,SAACP,GACb,IAAMX,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,aACbZ,QAAS,CACLuB,OAAQN,MAIpB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,KAqCJ+B,GAAY,SAACR,GACf,IAAMX,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,eACbZ,QAAS,CACL0B,SAAUT,MAIpB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,KAsEJiC,GAAiB,SAACC,GACpB,IAAMtB,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,iBACbZ,QAAS,CACLa,QAASe,MAIrB,OAAOd,MAAMtB,GAAYc,GACxBS,KAAKrB,KA6CJmC,GAAgB,SAACZ,GACnB,IAAMX,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,mBACbZ,QAAS,CACL8B,aAAcb,MAIxB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,KCjhBH,SAASqC,GAAYvE,GAAQ,IAC3BG,EAA8DH,EAA9DG,KAAM4D,EAAwD/D,EAAxD+D,OAAQ9D,EAAgDD,EAAhDC,YAAaC,EAAmCF,EAAnCE,QAASgE,EAA0BlE,EAA1BkE,SAAUM,EAAgBxE,EAAhBwE,YADpB,EAEGC,oBAAS,GAFZ,mBAExBC,EAFwB,KAEbC,EAFa,OAGLF,mBAAS,IAHJ,mBAGxBrH,EAHwB,KAGjBwH,EAHiB,OAILH,oBAAS,GAJJ,mBAIxBI,EAJwB,aAKCJ,mBAAS,KALV,mBAKxBK,EALwB,KAKdC,EALc,OAMKN,mBAAS,IANd,mBAMxBO,EANwB,KAMZC,EANY,OAOLR,mBAAS,IAPJ,mBAOxBS,EAPwB,KAOjBC,EAPiB,KASjCC,qBAAU,WACRT,GAAa,GACC,OAAXT,EACDU,EAAS,CACPb,SACAG,SAAU,GACVmB,WAAY,GACZC,WAAY,GACZC,cAAe,GACfC,aAAc,GACdC,iBAAkB,GAClBC,UAAW,GACXC,iBAAiB,EACjBC,eAAe,KDiVD,SAACnC,GACnB,IAAMX,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,YACbZ,QAAS,CACL0B,SAAUT,MAIpB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,IC3VJ2D,CAAc3B,GACbX,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJlE,QAAQC,IAAImE,EAAKf,SACjBqD,EAAStC,EAAKf,SAFV,2CADN,uDAKCuE,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,kCAAmCA,MAEvC,OAAToC,IACDgC,EAAa,CACXC,OAAO,CACL1G,GAAI,SACJ/B,MAAO,MAGXqF,GAAY,CAAC,YAAY,gBACxBW,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJ6C,EAAc,IACdF,EAAYzC,EAAKE,SAFb,2CADN,uDAKCsD,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,oCAAqCA,UAIxD,CAACkD,EAAM1E,IAEViF,qBAAU,WACRW,EAAa,CACXC,OAAO,CACL1G,GAAI,SACJ/B,MAAO,MAGO,OAAfyH,EAAoBG,EAAS,IAE9B3B,GAAQwB,EAAW,CAAC,SAAS,aAC5BzB,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJ+C,EAAS7C,EAAKE,SADV,2CADN,uDAICsD,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,iCAAkCA,QAGpD,CAACqD,IAEH,IAAMe,EAAe,SAACE,EAAGC,EAAQC,GAC/B,IAAI7G,EAAI/B,OACG6I,IAAPD,GACF7G,EAAK2G,EAAED,OAAO1G,GACd/B,EAAQ0I,EAAED,OAAOzI,QAEjB+B,EAAK6G,EAAG7G,GACR/B,EAAQ0I,GAEe,mBAAd7I,EAAMkC,IACbpB,QAAQC,IAAI,QACdyG,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN/G,GAAMlC,EAAMkC,SAGfsF,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN/G,EAAK/B,QAmBN+I,EAAS,WACb,IAAIC,EAAYnJ,SACTmJ,EAAS,aDsRK,SAAC9C,EAAIrG,GAC1B,IAAM0F,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,eACbZ,QAAS,CACL0B,SAAUT,EACV+C,aAAcpJ,MAI1B,OAAOkG,MAAMtB,GAAYc,GACxBS,KAAKrB,ICnSNuE,CAAiBvC,EAAUqC,GAC1BhD,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACFuC,GAAa,GACb1D,EAAaf,QAAQ,sBACrBA,IAHE,2CADN,uDAMC4F,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACjBzD,QAAQyD,MAAM,qCAAsCA,OAIpD+E,EAAS,YDoGI,SAAC3C,EAAQ4C,GAC1B,IAAMC,EAAY,2BACXD,GADW,IAEd5C,WAEEjB,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,eACbZ,QAASoE,KAGjB,OAAOtD,MAAMtB,GAAYc,GACxBS,KAAKrB,KClHN2E,CAAa9C,EAAQ3G,GACpBmG,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACFuC,GAAa,GACf1D,EAAaf,QAAQ,wBACrBA,IAHI,2CADN,uDAMC4F,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACjBzD,QAAQyD,MAAM,kCAAmCA,OAIvD,OACE,eAACtB,EAAA,EAAD,CAAOC,KAAMH,EAAMI,OAAQ,WAC3BoE,GAAa,GACb1E,KAFA,UAGQ,cAACI,EAAA,EAAMG,OAAP,CACCC,aAAW,EADZ,SAEI,cAACJ,EAAA,EAAMK,MAAP,UAAyB,OAAXwD,EAAgB,aAAa,kBAE/C,cAAC7D,EAAA,EAAMM,KAAP,UACA,cAACmG,EAAA,EAAD,CAAMxH,GAAI,cAAcyH,YAAU,EAACrC,UAAWA,EAAWsC,SAnD9C,SAACf,GACpBA,EAAEgB,iBACF,IAAMC,EAAOjB,EAAEkB,eACc,IAAzBD,EAAKE,kBACPnB,EAAEgB,iBACFhB,EAAEoB,mBAEJ1C,GAAa,GACTuC,EAAKE,kBACO,OAAXlD,EAAiBwC,IACfJ,MAyCC,SACI,gCACI,eAACQ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,uBAGA,cAACC,EAAA,EAAD,CACID,GAAI,EADR,SAEa,OAAXzD,EACE,gCAAK,cAAC4C,EAAA,EAAKe,QAAN,CACLC,UAAQ,EACRC,YAAY,KACZzI,GAAG,WACH0I,KAAK,WACL1K,KAAM,OACNC,MAAOH,EAAM8G,SACb+D,SAAUlC,IAEV,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,+CAE+B,cAACwJ,EAAA,EAAKe,QAAN,CAAcvK,KAAK,OAAOyK,YAAa3K,EAAM8G,SAAUiE,UAAQ,SAGxF,OAATpE,EACD,gCACE,eAAC+C,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,qBAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGE,eAACb,EAAA,EAAKe,QAAN,CACEO,QAAM,EACNN,UAAQ,EACRP,GAAG,SACHjI,GAAG,UACH0I,KAAK,UACLzK,MAAOyH,EACPiD,SAAU,SAAChC,GACThB,EAAcgB,EAAED,OAAOzI,QAR3B,UAWE,wBAAQA,MAAO,GAAf,gCACCuH,EAASuD,KAAI,SAACC,GAAD,OACZ,wBAAQ/K,MAAO+K,EAAQ3E,UAAvB,SAAmC2E,EAAQC,oBAG/C,cAACzB,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,gDAKJ,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,kBAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGE,eAACb,EAAA,EAAKe,QAAN,CACEW,SAAyB,KAAbxD,EACZoD,QAAM,EACNN,UAAQ,EACRP,GAAG,SACHjI,GAAG,SACH0I,KAAK,SACLzK,MAAOH,EAAM2G,OACbkE,SAAUlC,EARZ,UAUE,wBAAQxI,MAAO,GAAf,gCACC2H,EAAMmD,KAAI,SAACI,GAAD,OACT,wBAAQlL,MAAOkL,EAAK1E,OAApB,SAA6B0E,EAAKC,iBAGtC,cAAC5B,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,gDAMH,KAEH,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,yBAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,OACZzI,GAAG,aACH0I,KAAK,aACLzK,MAAOH,EAAMiI,WACb4C,SAAUlC,IAEV,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,oDAMJ,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,yBAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,eAACb,EAAA,EAAKe,QAAN,CACAO,QAAM,EACNN,UAAQ,EACRP,GAAG,SACHjI,GAAG,aACH0I,KAAK,aACLzK,MAAOH,EAAMkI,WACb2C,SAAUlC,EAPV,UASA,wBAAQxI,MAAO,GAAf,6BACCiH,EAAY6D,KAAI,SAAC/K,GAAD,OACf,wBAAQC,MAAOD,EAAKgC,GAApB,SAAyBhC,EAAK0K,aAGhC,cAAClB,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,oDAMJ,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,qBAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,UACZzI,GAAG,gBACH0I,KAAK,gBACLzK,MAAOH,EAAMmI,cACb0C,SAAUlC,IAEV,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,+CAMJ,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,0BAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,eACZzI,GAAG,eACH0I,KAAK,eACLzK,MAAOH,EAAMoI,aACbyC,SAAUlC,IAEV,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,qDAMJ,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,+BAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,oBACZzI,GAAG,mBACH0I,KAAK,mBACLzK,MAAOH,EAAMqI,iBACbwC,SAAUlC,IAEV,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,0DAMJ,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,uBAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,YACZzI,GAAG,YACH0I,KAAK,YACLzK,MAAOH,EAAMsI,UACbuC,SAAUlC,IAEV,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,kDAMJ,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,6BAGA,cAACC,EAAA,EAAD,CACID,GAAI,EACJtJ,UAAU,mDAFd,SAII,cAACyI,EAAA,EAAK6B,MAAN,CACAC,QAASxL,EAAMuI,gBACfrI,KAAK,SACLgC,GAAG,kBACH2I,SAAUlC,SAId,eAACe,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,2BAGA,cAACC,EAAA,EAAD,CACID,GAAI,EACJtJ,UAAU,mDAFd,SAII,cAACyI,EAAA,EAAK6B,MAAN,CACAC,QAASxL,EAAMwI,cACftI,KAAK,SACLgC,GAAG,gBACH2I,SAAUlC,gBAQ1B,eAAC1F,EAAA,EAAMO,OAAP,WACE,cAACC,EAAA,EAAD,CAAQ7B,QAAQ,YAAYJ,QAAS,WAC3C+F,GAAa,GACb1E,KAFM,oBAKA,cAACY,EAAA,EAAD,CAAQqG,KAAM,cAAclI,QAAQ,UAAU1B,KAAK,SAAnD,2BAQK,I,qBC5ZR,SAASuL,GAAU7I,GAAQ,IACzBG,EAAuEH,EAAvEG,KAAM4D,EAAiE/D,EAAjE+D,OAAQ9D,EAAyDD,EAAzDC,YAAaC,EAA4CF,EAA5CE,QAAS4I,EAAmC9I,EAAnC8I,SAAUnF,EAAyB3D,EAAzB2D,UAAWoF,EAAc/I,EAAd+I,UADjC,EAEKtE,oBAAS,GAFd,mBAEtBC,EAFsB,KAEXC,EAFW,OAGHF,mBAAS,IAHN,mBAGtBrH,EAHsB,KAGfwH,EAHe,OAIHH,oBAAS,GAJN,mBAItBI,EAJsB,aAKaJ,mBAAS,KALtB,mBAKtBuE,EALsB,KAKPC,EALO,KAMvBC,EAAkB,CACtBR,SAAU,GACVS,SAAU,GACVC,cAAc,EACdC,UAAW,WACXC,WAAY,WACZC,aAAc,IAGlBnE,qBAAU,WACRT,GAAa,GACbzG,QAAQC,IAAI,YAAa4F,EAAQJ,EAAWmF,GACxC3I,EAEK2I,EACPlE,EAASsE,GAETpF,GAAYC,GACXR,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJwC,EAAStC,EAAKf,SACdrD,QAAQC,IAAImE,EAAKf,SAFb,2CADN,uDAKCuE,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,gCAAiCA,MAXjDiD,EAASsE,GFscU,WACrB,IAAMpG,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,sBAGrB,OAAOE,MAAMtB,GAAYc,GACxBS,KAAKrB,IElcNsH,GACCjG,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJ6G,EAAiB3G,EAAKf,QAAQkI,eAD1B,2CADN,uDAIC3D,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,0CAA2CA,QAE1D,CAACkD,EAAM1E,IAEV,IAAMuJ,EAAkB,SAACzD,GAAM,IAAD,EACVA,EAAED,OAAf1G,EADuB,EACvBA,GACDqK,GAFwB,EACnBpM,MACCH,EAAMmM,aAAaK,QAAQtK,IACrC,IAAS,GAANqK,EACD/E,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,IAEPkD,aAAclD,EAAUkD,aAAaM,OAAO,CAACvK,aAE5C,CACH,IAAIwK,EAAW1M,EAAMmM,aACrBO,EAASC,OAAOJ,EAAI,GACpB/E,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,IAEPkD,aAAcO,SAKd/D,EAAe,SAACE,EAAGC,EAAQC,GAC/B,IAAI7G,EAAI/B,OACG6I,IAAPD,GACF7G,EAAK2G,EAAED,OAAO1G,GACd/B,EAAQ0I,EAAED,OAAOzI,QAEjB+B,EAAK6G,EAAG7G,GACR/B,EAAQ0I,GAEV/H,QAAQC,WAAWf,EAAMkC,IACA,mBAAdlC,EAAMkC,IACbpB,QAAQC,IAAI,QACdyG,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN/G,GAAMlC,EAAMkC,SAGfsF,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN/G,EAAK/B,QAmBN+I,EAAS,YFiPM,SAAC7C,EAAIrG,GACxBc,QAAQC,IAAIf,GACZ,IAAM0F,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,aACbZ,QAAS,CACLuB,OAAQN,EACR+C,aAAcpJ,MAI1B,OAAOkG,MAAMtB,GAAYc,GACxBS,KAAKrB,KE/PN8H,CAAejG,EAAQ3G,GACtBmG,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJuC,GAAa,GACX1D,EAAaf,QAAQ,sBACrBA,IAHE,2CADN,uDAMC4F,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACjBzD,QAAQyD,MAAM,mCAAoCA,OAIlD+E,EAAS,YF+FE,SAAC/C,EAAUgD,GAC1B,IAAMsD,EAAU,2BACTtD,GADS,IAEZhD,cAEEb,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,aACbZ,QAASyH,KAGjB,OAAO3G,MAAMtB,GAAYc,GACxBS,KAAKrB,KE7GNgI,CAAWvG,EAAWvG,GACrBmG,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJuC,GAAa,GACb1D,EAAaf,QAAQ,wBACrBA,IAHI,2CADN,uDAMC4F,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACjBzD,QAAQyD,MAAM,gCAAiCA,OAIrD,OACE,eAACtB,EAAA,EAAD,CAAOC,KAAMH,EAAMI,OAAQ,WACzBoE,GAAa,GACb1E,KAFF,UAGQ,cAACI,EAAA,EAAMG,OAAP,CACCC,aAAW,EADZ,SAEI,cAACJ,EAAA,EAAMK,MAAP,UAAcoI,EAAS,WAAW,gBAEtC,cAACzI,EAAA,EAAMM,KAAP,UACA,cAACmG,EAAA,EAAD,CAAMxH,GAAG,YAAYyH,YAAU,EAACrC,UAAWA,EAAWsC,SAjD3C,SAACf,GACpBA,EAAEgB,iBACF,IAAMC,EAAOjB,EAAEkB,eACc,IAAzBD,EAAKE,kBACPnB,EAAEgB,iBACFhB,EAAEoB,mBAEJ1C,GAAa,GACTuC,EAAKE,kBACJ0B,EAAUpC,IACRJ,MAuCC,SACI,gCACI,eAACQ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,uBAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,OACZzI,GAAG,WACH0I,KAAK,WACLzK,MAAOH,EAAMsL,SACbT,SAAUlC,IAEV,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,kDAMJ,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,uBAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,eAACb,EAAA,EAAKe,QAAN,CACAO,QAAM,EACNN,UAAQ,EACRP,GAAG,SACHjI,GAAG,WACH0I,KAAK,WACLzK,MAAOH,EAAM+L,SACblB,SAAUlC,EAPV,UASA,wBAAQxI,MAAO,GAAf,6BACCwL,EAAUV,KAAI,SAAC/K,GAAD,OACb,wBAAQC,MAAOD,EAAKgC,GAApB,SAAyBhC,EAAK0K,aAGhC,cAAClB,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,kDAKJ,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,kCAGA,cAACC,EAAA,EAAD,CACID,GAAI,EACJtJ,UAAU,mDAFd,SAII,cAACyI,EAAA,EAAK6B,MAAN,CACAC,QAASxL,EAAMgM,aACf9L,KAAK,SACLgC,GAAG,eACH2I,SAAUlC,SAKd,eAACe,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,uDAGA,cAACb,EAAA,EAAKW,MAAN,CACIC,QAAM,EACNC,GAAI,EACJtJ,UAAU,4BAHd,SAKI,cAAC,KAAD,CACAd,MAAOH,EAAMiM,UACbpB,SAAUlC,EACVoE,aAAe,EACfC,MACI,cAACtD,EAAA,EAAKe,QAAN,CACEC,UAAQ,EACRxI,GAAK,YACLhC,KAAK,OACL0K,KAAK,YACLD,YAAY,gBAMtB,eAACjB,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,sCAGA,cAACb,EAAA,EAAKW,MAAN,CACIC,QAAM,EACNrJ,UAAU,4BACVsJ,GAAI,EAHR,SAKI,cAAC,KAAD,CACApK,MAAOH,EAAMkM,WACbrB,SAAUlC,EACVoE,aAAe,EACfC,MACI,cAACtD,EAAA,EAAKe,QAAN,CACEC,UAAQ,EACRxI,GAAK,aACLhC,KAAK,OACL0K,KAAK,aACLD,YAAY,gBAKtB,cAACjB,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,SACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,8BAIA,eAACb,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACI,EAAA,EAAD,CACID,GAAI,EADR,SAGGqB,EAAcX,KAAI,SAACgC,EAAKC,GAAN,OACf,8BACIA,EAAM,GAAG,EACb,cAACxD,EAAA,EAAK6B,MAAN,CACIP,QAAM,EACN9K,KAAM,WACNgC,GAAI+K,EACJzB,QAASxL,EAAMmM,aAAagB,SAASF,GACrCpC,SAAUyB,EACVc,MAAOH,IACR,YAIT,cAACzC,EAAA,EAAD,CACID,GAAI,EADR,SAGGqB,EAAcX,KAAI,SAACgC,EAAKC,GAAN,OACf,8BACIA,EAAM,GAAG,EACb,cAACxD,EAAA,EAAK6B,MAAN,CACIP,QAAM,EACN9K,KAAM,WACNgC,GAAI+K,EACJzB,QAASxL,EAAMmM,aAAagB,SAASF,GACrCpC,SAAUyB,EACVc,MAAOH,IACR,sBAQvB,eAAChK,EAAA,EAAMO,OAAP,WACE,cAACC,EAAA,EAAD,CAAQ7B,QAAQ,YAAYJ,QAAS,WAC3C+F,GAAa,GACb1E,KAFM,oBAKA,cAACY,EAAA,EAAD,CAAQqG,KAAM,YAAYlI,QAAQ,UAAU1B,KAAK,SAAjD,2BAQK,I,8BCnTFmN,GAAb,kDACI,WAAYzK,GAAQ,IAAD,8BACf,cAAMA,IAED5C,MAAQ,CACTsN,OAAQ,IAJG,EADvB,sDASI,WAAqB,IAAD,OAEhBC,KAAKC,aAAe3J,EAAaC,QAAQyJ,KAAK3K,MAAMV,IAC/CuL,WAAU,SAAApJ,GAEP,EAAKmD,SAAS,CAAE8F,OAAO,GAAD,oBAAM,EAAKtN,MAAMsN,QAAjB,CAAyBjJ,MAG/CqJ,YAAW,kBAAM,EAAKC,YAAYtJ,KAAQ,UAjB1D,kCAuBI,WAEIkJ,KAAKC,aAAaI,gBAzB1B,yBA4BI,SAAYvJ,GACRkJ,KAAK/F,SAAS,CAAE8F,OAAQC,KAAKvN,MAAMsN,OAAOrJ,QAAO,SAAAC,GAAC,OAAIA,IAAMG,SA7BpE,oBAgCI,WAAU,IAAD,OACGiJ,EAAWC,KAAKvN,MAAhBsN,OACR,OAAKA,EAAOO,OAER,qBAAK5M,UAAU,WAAf,UACKH,QAAQC,IAAIuM,GACbA,EAAOrC,KAAI,SAAC5G,EAAMkI,GAAP,OACP,cAACuB,GAAA,EAAD,CAEAlM,QAASyC,EAAMnE,KACf6N,aAAe,EACfC,QAAS,WAAK,EAAKL,YAAYtJ,IAJ/B,SAKKA,EAAMF,SAJJoI,SANQ,SAlCnC,GAAgC0B,IAAMC,W,8FCE/B,SAASC,GAAuBvL,GAAQ,IACrCwL,EAA2CxL,EAA3CwL,MAAOC,EAAoCzL,EAApCyL,KAAMC,EAA8B1L,EAA9B0L,YAAaC,EAAiB3L,EAAjB2L,aAkBlC,OACE,sBAAKlN,MAAO,CAACmN,WAAW,EAAGC,MAAM,GAAjC,UACE,cAACC,GAAA,EAAD,CACElN,QAnB6B,SAACmN,GAClCJ,EAAaI,EAAO,IAmBhBvD,SAAmB,IAATiD,EACVO,aAAW,aAHb,SAKE,cAAC,KAAD,MAEF,cAACF,GAAA,EAAD,CAAYlN,QArBc,SAACmN,GAC7BJ,EAAaI,EAAON,EAAO,IAoBmBjD,SAAmB,IAATiD,EAAYO,aAAW,gBAA7E,SACG,cAAC,KAAD,MAEH,cAACF,GAAA,EAAD,CACElN,QArBwB,SAACmN,GAC7BJ,EAAaI,EAAON,EAAO,IAqBvBjD,SAAUiD,GAAQQ,KAAKC,KAAKV,EAAQE,GAAe,EACnDM,aAAW,YAHb,SAKE,cAAC,KAAD,MAEF,cAACF,GAAA,EAAD,CACElN,QAxB4B,SAACmN,GACjCJ,EAAaI,EAAOE,KAAKE,IAAI,EAAGF,KAAKC,KAAKV,EAAQE,GAAe,KAwB7DlD,SAAUiD,GAAQQ,KAAKC,KAAKV,EAAQE,GAAe,EACnDM,aAAW,YAHb,SAKE,cAAC,KAAD,SAMO,I,UCnDR,SAASI,GAAWpM,GAAQ,IAC1BG,EAAqEH,EAArEG,KAAMmE,EAA+DtE,EAA/DsE,aAAcX,EAAiD3D,EAAjD2D,UAAWzD,EAAsCF,EAAtCE,QAASqI,EAA6BvI,EAA7BuI,YAAatI,EAAgBD,EAAhBC,YAD5B,EAGIwE,oBAAS,GAHb,mBAGvBC,EAHuB,KAGZC,EAHY,OAIJF,mBAAS,IAJL,mBAIvBrH,EAJuB,KAIhBwH,EAJgB,OAKJH,oBAAS,GALL,mBAKvBI,EALuB,aAMJJ,mBAAS,KANL,mBAMvBS,EANuB,KAMhBC,EANgB,OAOEV,mBAAS,IAPX,mBAOvB4H,EAPuB,KAObC,EAPa,OAQU7H,mBAAS,IARnB,mBAQvB8H,EARuB,KAQTC,EARS,OASA/H,oBAAS,GATT,mBASvBgI,EATuB,KASdC,EATc,KAWxBC,EAAI,uCAAG,WAAOC,GAAP,eAAAxK,EAAA,6DACLyK,EAAO,GACXD,EAAIE,QAAJ,uCAAY,WAAOC,GAAP,SAAA3K,EAAA,sDACRyK,EAAKE,EAAO,SAAc,EADlB,2CAAZ,uDAGAR,EAAaO,QAAb,uCAAqB,WAAOC,GAAP,SAAA3K,EAAA,sDACjBlE,QAAQC,IAAI4O,GACZF,EAAKE,IAAW,EAFC,2CAArB,uDALS,SASIF,EATJ,mFAAH,sDAwBZzH,qBAAU,WACRT,GAAa,GACbmG,YAAW,kBAAI4B,GAAW,KAAQ,KAChB,OAAfpI,GACDM,EAAS,CACPjB,YACAqJ,eAAgB,GAChB5D,cAAc,EACdlE,MAAO,KAETsH,EAAgB,KL2XI,SAAC/I,GACvB,IAAMX,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,gBACbZ,QAAS,CACP8B,aAAcb,MAItB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,IKtYJ+K,CAAkB3I,GACjBf,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJwC,EAAStC,EAAKf,SACdiL,EAAgBlK,EAAKf,QAAQ2D,OAFzB,2CADN,uDAKCY,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,uCAAwCA,QAGzD,CAACkD,IAEJO,qBAAU,WACRR,GAAS,SAACyB,GAAD,mBAAC,eACHA,GADE,IAELnB,MAAQgI,OAAOC,KAAKd,GAAWhL,QAAO,SAACoH,GAAD,OAAQ4D,EAAS5D,aAE3D,CAAC4D,IAEHjH,qBAAU,WA3CJ5B,GAAQG,EAAW,CAAC,SAAU,aAC7BJ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACF+C,EAAS7C,EAAKE,SACdmK,EAAKrK,EAAKE,SAASe,KAAnB,uCAAwB,WAAM6J,GAAN,SAAAhL,EAAA,kEACpBkK,EADoB,SACFc,EADE,6EAAxB,uDAFE,2CADN,uDAOCtH,OAAM,SAACnE,GACJV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,qCAAsCA,QAoC5D,CAAC4K,IAEH,IAAMxG,EAAe,SAACE,EAAGC,EAAQC,GAC/B,IAAI7G,EAAI/B,OACG6I,IAAPD,GACF7G,EAAK2G,EAAED,OAAO1G,GACd/B,EAAQ0I,EAAED,OAAOzI,QAEjB+B,EAAK6G,EAAG7G,GACR/B,EAAQ0I,GAEe,mBAAd7I,EAAMkC,IACbpB,QAAQC,IAAI,QACdyG,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN/G,GAAMlC,EAAMkC,SAGfsF,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN/G,EAAK/B,QAKN8P,EAAmB,SAACpH,GACxB,IAAI3G,EAAK2G,EAAED,OAAO1G,GAClBgN,GAAY,SAACjG,GAAD,mBAAC,eACRA,GADO,kBAET/G,GAAM+G,EAAU/G,SAkBfgH,EAAS,YLqUY,SAAC7C,EAAIrG,GAC9B,IAAM0F,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,mBACbZ,QAAS,CACL8B,aAAcb,EACd+C,aAAcpJ,MAI1B,OAAOkG,MAAMtB,GAAYc,GACxBS,KAAKrB,KKlVNoL,CAAqBhJ,EAAclH,GAClCmG,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACFuC,GAAa,GACb1D,EAAaf,QAAQ,sBACrBA,IAHE,2CADN,uDAMC4F,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACjBzD,QAAQyD,MAAM,0CAA2CA,OAIzD+E,EAAS,YLuRQ,SAACC,GACtB,IAAMC,EAAY,eACXD,GAED7D,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,mBACbZ,QAASoE,KAGjB,OAAOtD,MAAMtB,GAAYc,GACxBS,KAAKrB,KKpSNqL,CAAiBnQ,GAChBmG,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACFuC,GAAa,GACf1D,EAAaf,QAAQ,wBACrBA,IAHI,2CADN,uDAMC4F,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACjBzD,QAAQyD,MAAM,uCAAwCA,OAI5D,OACE,cAACtB,EAAA,EAAD,CAAOC,KAAMH,EAAMI,OAAQ,WAC3BoE,GAAa,GACb1E,KAFA,SAGGwM,EACD,cAACjF,EAAA,EAAD,CAAKnJ,UAAU,gCAAgCI,MAAO,CAAC+O,OAAO,SAA9D,SACA,cAACC,GAAA,EAAD,CAASC,KAAK,KAAKC,UAAU,SAASC,KAAK,SAA3C,SACA,sBAAMvP,UAAU,UAAhB,4BAGE,gCACI,cAACgC,EAAA,EAAMG,OAAP,CACCC,aAAW,EADZ,SAEI,cAACJ,EAAA,EAAMK,MAAP,UAA6B,OAAf4D,EAAoB,WAAW,gBAEjD,cAACjE,EAAA,EAAMM,KAAP,UACA,cAACmG,EAAA,EAAD,CAAMxH,GAAI,YAAYyH,YAAU,EAACrC,UAAWA,EAAWsC,SAxD5C,SAACf,GACpBA,EAAEgB,iBACF,IAAMC,EAAOjB,EAAEkB,eACc,IAAzBD,EAAKE,kBACPnB,EAAEgB,iBACFhB,EAAEoB,mBAEJ1C,GAAa,GACTuC,EAAKE,kBACW,OAAf9C,EAAqBoC,IACnBJ,MA8CC,SACI,gCACI,eAACQ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,0BAGA,cAACC,EAAA,EAAD,CACID,GAAI,EACJtJ,UAAU,mDAFd,SAII,cAACyI,EAAA,EAAKe,QAAN,CAAcvK,KAAK,OAAOyK,YAAaQ,EAAaJ,UAAQ,SAIhE,eAACrB,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,8BAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,OACZzI,GAAG,iBACH0I,KAAK,iBACLzK,MAAOH,EAAM4P,eACb/E,SAAUlC,IAEV,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,kDAMJ,cAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,SACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,qBAIA,eAACb,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACI,EAAA,EAAD,CACID,GAAI,EADR,SAGKzC,EAAMmD,KAAI,SAACI,EAAM6B,GAAP,OACP,8BACIA,EAAM,GAAG,EACb,cAACxD,EAAA,EAAK6B,MAAN,CACIP,QAAM,EACN9K,KAAM,WACNgC,GAAImJ,EAAK1E,OACT6E,QAASyD,EAAS5D,EAAK1E,QACvBkE,SAAUoF,EACV7C,MAAO/B,EAAKC,WACb,YAIX,cAACd,EAAA,EAAD,CACID,GAAI,EADR,SAGKzC,EAAMmD,KAAI,SAACI,EAAM6B,GAAP,OACP,8BACIA,EAAM,GAAG,EACb,cAACxD,EAAA,EAAK6B,MAAN,CACIP,QAAM,EACN9K,KAAM,WACNgC,GAAImJ,EAAK1E,OACT6E,QAASyD,EAAS5D,EAAK1E,QACvBkE,SAAUoF,EACV7C,MAAO/B,EAAKC,WACb,eAMX,eAAC5B,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,2BAGA,cAACC,EAAA,EAAD,CACID,GAAI,EACJtJ,UAAU,mDAFd,SAII,cAACyI,EAAA,EAAK6B,MAAN,CACAC,QAASxL,EAAMgM,aACf9L,KAAK,SACLgC,GAAG,eACH2I,SAAUlC,gBAQ1B,eAAC1F,EAAA,EAAMO,OAAP,WACE,cAACC,EAAA,EAAD,CAAQ7B,QAAQ,YAAYJ,QAAS,WAC3C+F,GAAa,GACb1E,KAFM,oBAKA,cAACY,EAAA,EAAD,CAAQqG,KAAM,YAAYlI,QAAQ,UAAU1B,KAAK,SAAjD,6BCvQH,SAASuQ,GAAY7N,GAAO,IAC1BC,EAAoBD,EAApBC,YAAa6N,EAAO9N,EAAP8N,IAClB,OACA,cAACzN,EAAA,EAAD,CAAOqN,KAAK,KAAKK,UAAQ,EAACzN,KAAY,OAANwN,EAAuBvN,OAAQN,EAA/D,SACI,qBAAK6N,IAAKA,MAKH,I,4KCCR,SAASE,KAAQ,IAAD,EACGvJ,mBAAS,IADZ,gCAEKA,mBAAS,OAFd,mBAEdI,EAFc,aAGSJ,mBAAS,KAHlB,mBAGdwJ,EAHc,KAGLC,EAHK,OAIezJ,mBAAS,IAJxB,mBAId0J,EAJc,KAIFC,EAJE,OAKiB3J,mBAAS,IAL1B,mBAKdD,EALc,KAKD6J,EALC,OAMyB5J,mBAAS,IANlC,mBAMd6J,EANc,KAMGC,EANH,OAOK9J,mBAAS,MAPd,mBAOd+J,EAPc,KAOPC,EAPO,OAQOhK,mBAAS,CACnCiK,MAAM,IATa,mBAQdC,EARc,KAQNC,EARM,KAWjB9Q,EAAUC,cAER8Q,EAAS,YP0KI,SAAChM,GAClB,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,WACbZ,QAAS,CACPa,QAAS,SACTR,cAIR,OAAOS,MAAMtB,GAAYc,GACxBS,KAAKrB,KOvLN4M,CAAa,CAAC,WAAY,aAAc,aAAa,eAAgB,WACpEvL,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJ8L,EAAW5L,EAAKE,QAAQnB,QAAO,SAAC0N,GAAD,MAAgC,WAAtBA,EAAOC,cAA2C,OAAlBD,EAAOhL,WAD5E,2CADN,uDAIC+B,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,sCAAuCA,MP2drC,WAClB,IAAMmB,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,kBAGrB,OAAOE,MAAMtB,GAAYc,GACxBS,KAAKrB,IOneN+M,GACC1L,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJgM,EAAc9L,EAAKf,SADf,2CADN,uDAICuE,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,sCAAuCA,OAIzDyD,qBAAU,WACRyJ,IACA1K,GAAe,UACdZ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJmM,EAAmBjM,EAAKf,SACxB8M,EAAenB,OAAOgC,QAAQ5M,EAAKf,SAAS8G,KAAI,SAAC/K,GAAD,MAAS,CACvDgC,GAAIhC,EAAK,GACT0K,KAAM1K,EAAK,GAAG0K,UAJZ,2CADN,uDAQClC,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,uCAAwCA,QAEvD,CAACkD,IAEJ,IAYM5E,EAAc,SAACkP,GACnB,IAAIC,EAAUT,EAAOQ,GACrBP,GAAU,SAACvI,GAAD,mBAAC,eACNA,GADK,kBAEP8I,GAASC,QAId,OACA,gCACE,cAAC7K,GAAD,CACEC,YAAeA,EACfrE,KAAMwO,EAAOD,KACb3K,OAAU,KACVG,SAAYsK,EACZtO,QAAS,WACL2O,IACA5O,EAAY,SAEhBA,YAAa,WACXA,EAAY,WAGhB,cAACoP,GAAA,EAAD,CAAWhR,UAAU,YAArB,SACE,eAACmJ,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAAC2H,GAAA,EAAD,UACE,oBAAGjR,UAAU,eAAb,UACA,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,WAAhB,SACA,cAAC,KAAD,CAAkBM,SAAS,QAAQF,MAAO,CAAC8Q,MAAM,eAHnD,SAOE,oBAAIlR,UAAU,iBAAiBI,MAAO,CAAC8Q,MAAM,WAA7C,sBAMN,cAAC3H,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAAC2H,GAAA,EAAD,UACE,oBAAGjR,UAAU,eAAb,UACA,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,WAAhB,SACA,cAAC,KAAD,CAAkBM,SAAS,QAAQF,MAAO,CAAC8Q,MAAM,eAHnD,SAOE,oBAAIlR,UAAU,iBAAiBI,MAAO,CAAC8Q,MAAM,WAA7C,sBAMN,cAAC3H,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAAC2H,GAAA,EAAD,UACE,oBAAGjR,UAAU,eAAb,UACA,qBAAKA,UAAU,mBAAf,SACE,sBAAMA,UAAU,WAAhB,SACA,cAAC,KAAD,CAAkBM,SAAS,QAAQF,MAAO,CAAC8Q,MAAM,eAHnD,cAOE,oBAAIlR,UAAU,iBAAiBI,MAAO,CAAC8Q,MAAM,WAA7C,SACCpB,EAAWlD,gBAKlB,cAACrD,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,cAAC2H,GAAA,EAAD,UACE,oBAAGjR,UAAU,eAAb,UACA,qBAAKA,UAAU,qBAAf,SACE,sBAAMA,UAAU,WAAhB,SACA,cAAC,KAAD,CAAkBM,SAAS,QAAQF,MAAO,CAAC8Q,MAAM,eAHnD,uBAOE,oBAAIlR,UAAU,iBAAiBI,MAAO,CAAC8Q,MAAM,WAA7C,SACGtB,EAAQhD,qBAOrB,qBAAK5M,UAAU,UAAf,SACA,eAACmJ,EAAA,EAAD,WACA,cAACI,EAAA,EAAD,CAAKD,GAAI,EAAT,SACM,eAAC2H,GAAA,EAAD,CAAM7Q,MAAO,CAAC+Q,OAAO,SAArB,UACA,cAACC,GAAA,EAAD,CAAYpR,UAAU,YAAYW,QAAQ,KAAK0Q,UAAU,KAAzD,yBAGA,cAACC,GAAA,EAAD,CAAgBD,UAAWE,KAAOvR,UAAU,iBAAiBI,MAAO,CAAC,aAAa,QAAlF,SACE,eAACoR,GAAA,EAAD,CAAO7D,aAAW,eAAlB,UACE,cAAC8D,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAwB,qCACxB,cAACD,GAAA,EAAD,CAAWC,MAAM,cAGrB,cAACC,GAAA,EAAD,UACG/B,EAAW9F,KAAI,SAAC8H,EAAK7F,GAAN,OACd,eAACyF,GAAA,EAAD,WACA,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBE,EAAIjM,WAC7B,cAAC8L,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACI,cAACnE,GAAA,EAAD,CAAYrN,MAAO,CAAC2R,QAAQ,GAC5BxR,QAAS,WACL6P,EAAS0B,EAAIjM,UACbjE,EAAY,SAHhB,SAKE,cAAC,KAAD,UARSkQ,EAAIjM,yBAmB7B,cAAC0D,EAAA,EAAD,CAAKD,GAAI,EAAT,SACE,eAAC2H,GAAA,EAAD,CAAM7Q,MAAO,CAAC+Q,OAAO,SAArB,UACA,cAACC,GAAA,EAAD,CAAYpR,UAAU,YAAYW,QAAQ,KAAK0Q,UAAU,KAAzD,kCAGA,cAACC,GAAA,EAAD,CAAgBD,UAAWE,KAAOvR,UAAU,iBAAiBI,MAAO,CAAC,aAAa,QAAlF,SACE,eAACoR,GAAA,EAAD,CAAOQ,cAAY,EAACrE,aAAW,eAA/B,UACE,cAAC8D,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAwB,qCACxB,cAACD,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAwB,uCACxB,cAACD,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAwB,uCACxB,cAACD,GAAA,EAAD,CAAWC,MAAM,cAGrB,cAACC,GAAA,EAAD,UACGjC,EAAQ5F,KAAI,SAAC8H,EAAK7F,GAAN,OACX,eAACyF,GAAA,EAAD,WACA,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBE,EAAIjM,WAC3B,cAAC8L,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBE,EAAI9K,aAC7B,cAAC2K,GAAA,EAAD,CAAWC,MAAM,OAAjB,cAA2D7J,IAAlCkI,EAAgB6B,EAAI7K,YAA0B6K,EAAI7K,WAAagJ,EAAgB6B,EAAI7K,YAAY0C,OACxH,cAACgI,GAAA,EAAD,CAAWC,MAAM,QAAjB,SACE,cAACnE,GAAA,EAAD,CAAYrN,MAAO,CAAC2R,QAAQ,GAC5BxR,QAAS,WA9Jd,IAACmF,IA+JeoM,EAAIpM,OA9JjCD,GAAYC,GACXR,KADD,uCACM,WAAOjB,GAAP,eAAAF,EAAA,sDACAuB,EAAYrB,EAAKf,QAAQoC,UAC7B7F,EAAQM,KAAK,YAAYkS,OAAO3M,GAAW,SAAS2M,OAAOvM,IAFvD,2CADN,uDAKC+B,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,qCAAsCA,OAqJpC,SAIE,cAAC,KAAD,UATSwO,EAAIjM,iCCjN9B,SAASqM,KACd,IAAM5S,EAAeC,qBAAWd,GAExBW,GADYE,EAAaP,MACZO,EAAbF,UACJK,EAAUC,cAJQ,EAKI0G,mBAAS,CACjC+L,SAAU,GACVC,SAAU,KAPU,mBAKfrT,EALe,KAKRwH,EALQ,KAShBmB,EAAe,SAACE,GAAO,IAAD,EACJA,EAAED,OAAhB1G,EADkB,EAClBA,GAAI/B,EADc,EACdA,MACZqH,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN/G,EAAK/B,QAgEV,OACE,qBAAKc,UAAU,sBAAf,SACE,qBAAKA,UAAU,iCAAf,SACE,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,gDAAf,UACE,oBAAIA,UAAU,YAAd,mBACA,mBAAGA,UAAU,kBAAb,8CAGA,iCACE,qBAAKA,UAAU,kBAAf,SACE,uBACEiB,GAAG,WACHhC,KAAK,WACLyK,YAAY,WACZD,SAAS,WACTzJ,UAAU,oDACV4J,SAAUlC,EACVxI,MAAOH,EAAMoT,aAGjB,qBAAKnS,UAAU,kBAAf,SACE,uBACEiB,GAAG,WACHhC,KAAK,WACLyK,YAAY,WACZD,SAAS,WACTzJ,UAAU,iEACV4J,SAAUlC,EACVxI,MAAOH,EAAMqT,aAGjB,mBAAGnR,GAAG,cAAcjB,UAAU,gBAC9B,wBACEf,KAAK,SACLe,UAAU,uEACVO,QAnGD,SAACqH,GAChBA,EAAEgB,iBADoB,IAEhBuJ,EAAuBpT,EAAvBoT,SAAUC,EAAarT,EAAbqT,SAsCC,WAAbD,GAAsC,WAAbC,GAC3BhT,EAAS,CACPH,KAAM,UACNC,OAAO,IAETE,EAAS,CACPH,KAAM,UACNC,MAAOiT,IAET1S,EAAQM,KAAK,UACgB,IAApBoS,EAASvF,OAClByF,SAASC,eAAe,eAAeC,UACrC,2BAC2B,IAApBH,EAASxF,OAClByF,SAASC,eAAe,eAAeC,UACrC,2BAEFF,SAASC,eAAe,eAAeC,UACrC,gCAsCU,qCAiBH,I,kDC5HR,SAASC,GAAT,GAA6B,EAATC,MAAU,IAC/BhT,EAAUC,cADoB,EAEI0G,mBAAS,IAFb,mBAE3BsM,EAF2B,KAEdC,EAFc,OAGVvM,mBAAS,IAHC,mBAG3BwM,EAH2B,KAGrBC,EAHqB,OAINzM,mBAAS,CACnC0M,QAAQ,EACRC,KAAK,IAN2B,mBAI3BzC,EAJ2B,KAInBC,EAJmB,OAQRnK,mBAAS,IARD,mBAQ3B+J,EAR2B,KAQpBC,EARoB,OASRhK,mBAAS,CACjC8D,YAAa,GACb8I,SAAU,GACVC,YAAa,KAZmB,mBAS3BlU,EAT2B,KASpBwH,EAToB,OAcFH,mBAAS,CACvC8D,YAAa,GACb8I,SAAU,GACVC,YAAa,KAjBmB,mBAc3BC,EAd2B,KAcjBC,EAdiB,OA+BR/M,oBAAS,GA/BD,mBA+B3BI,EA/B2B,KAgC5BgK,GAhC4B,KAgCnB,WACbjM,GAAY,CAAC,YAAa,cAAe,WAAY,gBAClDW,KADH,uCACQ,WAAOjB,GAAP,SAAAF,EAAA,sDACJlE,QAAQC,IAAImE,EAAKE,SACjBwO,EAAe1O,EAAKE,SAFhB,2CADR,uDAKGsD,OAAM,SAACnE,GACNzD,QAAQyD,MAAM,sBAAuBA,QAG3CyD,qBAAU,WACRyJ,MACC,CAAChK,IAEJO,qBAAU,WACR/D,MACC,CAAC0P,EAAaQ,IAEjB,IAAMxL,EAAe,SAACE,GAAO,IAAD,EACJA,EAAED,OAAhB1G,EADkB,EAClBA,GAAI/B,EADc,EACdA,MACZqH,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN/G,EAAK/B,QAIJ0C,EAAc,SAACkP,GACnB,IAAIC,EAAUT,EAAOQ,GACrBP,GAAU,SAACvI,GAAD,mBAAC,eACNA,GADK,kBAEP8I,GAASC,QASR/N,EAAS,SAAC4E,GAAO,IACfsC,EAAuCgJ,EAAvChJ,YAAa8I,EAA0BE,EAA1BF,SAAUC,EAAgBC,EAAhBD,YACzBG,EAAUV,EACd7S,QAAQC,IAAIsT,GACZP,EACEO,EAAQpQ,QACN,SAAC8O,GAAD,OACEA,EAAG,YAAgBuB,cAAc9H,QAAQrB,EAAYmJ,gBAAkB,GACvEvB,EAAG,SAAauB,cAAc9H,QAAQyH,EAASK,gBAAkB,GACjEvB,EAAG,YAAgBuB,cAAc9H,QAAQ0H,EAAYI,gBAAkB,OAKzEC,EAAS,SAAC1L,ITyCC,WACf,IAAMnD,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,gBACbZ,QAAS,CACP+F,YAAa,GACb+I,YAAa,GACbD,SAAU,GACVO,cAAe,GACfC,UAAW,GACXC,UAAW,OAInB,OAAOxO,MAAMtB,GAAYc,GACxBS,KAAKrB,KS1DN6P,GACGxO,KADH,+BAAAnB,EAAA,MACQ,WAAOE,GAAP,eAAAF,EAAA,sDACAqB,EAAKnB,EAAKf,QAAQoC,UACtB7F,EAAQM,KAAK,YAAcqF,GAFvB,2CADR,uDAKGqC,OAAM,SAACnE,GACNzD,QAAQyD,MAAM,sBAAuBA,OAQrCqQ,EAAG,uCAAG,WAAOrO,GAAP,SAAAvB,EAAA,sDACVyB,GAAWF,GACVJ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJyM,IACA5O,EAAY,UACZgB,EAAaf,QAAQ,mBAHjB,2CADN,uDAMC4F,OAAM,SAACnE,GACNzD,QAAQyD,MAAM,sBAAuBA,MAR7B,2CAAH,sDApGyB,EAiHV0J,IAAM5G,SAAS,GAjHL,mBAiH3BgH,EAjH2B,KAiHrBwG,EAjHqB,QAkHI5G,IAAM5G,SAAS,GAlHnB,qBAkH3BiH,GAlH2B,MAkHdwG,GAlHc,MAoH5BC,GAAYzG,GAAcO,KAAKmG,IAAI1G,GAAauF,EAAKhG,OAASQ,EAAOC,IAW3E,OACE,gCACE,cAAC3L,EAAD,CACEI,KAAMwO,EAAOwC,OACbjR,QAAS,WACP8R,EAAIxD,IAENvO,YAAa,WACXA,EAAY,WAEdpB,MAAM,mBACNuB,KAAK,yBAEP,cAACL,EAAD,CACEI,KAAMwO,EAAOyC,IACblR,QAAS,WACPyR,KAEF1R,YAAa,WACXA,EAAY,QAEdpB,MAAM,mBACNuB,KAAK,uBAGP,sBAAK/B,UAAU,UAAf,UACA,eAACgU,GAAA,EAAD,WACE,cAACA,GAAA,EAAW3S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACyS,GAAA,EAAW3S,KAAZ,CAAiB4S,QAAM,EAAvB,yBAEA,cAACxL,EAAA,EAAD,CAAMyL,QAAM,EAAClU,UAAU,YAAY2I,SAAU,SAACf,GAAKA,EAAEgB,kBAArD,SACE,eAACO,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAACb,EAAA,EAAKe,QAAN,CACEvI,GAAG,cACHyI,YAAY,OACZE,SAAUlC,EACVxI,MAAOH,EAAMmL,gBAGjB,cAACX,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAACb,EAAA,EAAKe,QAAN,CACEvI,GAAG,WACHyI,YAAY,WACZE,SAAUlC,EACVxI,MAAOH,EAAMiU,aAGjB,cAACzJ,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAACb,EAAA,EAAKe,QAAN,CACEvI,GAAG,cACHyI,YAAY,OACZE,SAAUlC,EACVxI,MAAOH,EAAMkU,gBAGjB,cAAC1J,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC9G,EAAA,EAAD,CAAQvD,KAAK,SAASsB,QAAS,WAAK4S,EAAYpU,IAAhD,sBAIF,cAACwK,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC9G,EAAA,EAAD,CAAQvD,KAAK,SAAS0B,QAAQ,YAAYJ,QA1KxC,WACZgG,EAAS,CACP2D,YAAa,GACb8I,SAAU,GACVC,YAAa,KAEfE,EAAY,CACVjJ,YAAa,GACb8I,SAAU,GACVC,YAAa,MAiKL,sBAIF,cAAC1J,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC9G,EAAA,EAAD,CACExC,UAAU,kBACVf,KAAK,SACLsB,QAAS,WACPqB,EAAY,QAJhB,6BAaR,qBAAK5B,UAAU,UAAf,SACE,cAACsR,GAAA,EAAD,CAAgBD,UAAWE,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO7D,aAAW,eAAlB,UACE,cAAC8D,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,sBACA,cAACA,GAAA,EAAD,CAAWC,MAAM,OAAjB,sBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,OAAjB,kBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,0BAGJ,eAACC,GAAA,EAAD,YACIxE,GAAc,EAChBuF,EAAKuB,MAAM/G,EAAOC,GAAaD,EAAOC,GAAcA,IACpDuF,GAAM5I,KAAI,SAAC8H,GAAD,OACR,eAACJ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWN,UAAU,KAAK+C,MAAM,MAAhC,SACGtC,EAAI5H,cAEP,cAACyH,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBE,EAAIkB,WAC7B,cAACrB,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBE,EAAImB,cAC7B,eAACtB,GAAA,EAAD,CAAWC,MAAM,QAAQxR,MAAO,CAAC2R,QAAQ,GAAzC,UACE,cAACtE,GAAA,EAAD,CAAYlN,QAAS,kBArIzB+E,EAqIoCwM,EAAIxM,eApIpD7F,EAAQM,KAAK,YAAcuF,GADhB,IAACA,GAqII,SACE,cAAC,KAAD,CACEhE,aAAYwQ,EAAIxM,UAChB+J,KAAM,GACN6B,MAAM,gBAGV,cAACzD,GAAA,EAAD,CAAYlN,QAAS,kBA1KhB+E,EA0KoCwM,EAAIxM,UAzK7D8K,EAAS9K,QACT1D,EAAY,UAFQ,IAAC0D,GA0KL,SACE,cAAC,KAAD,CAAO4L,MAAM,MAAM7B,KAAM,YAfhByC,EAAI5H,gBAoBpB4J,GAAY,GACX,cAACpC,GAAA,EAAD,CAAUtR,MAAO,CAAE+Q,OAAQ,GAAK2C,IAAhC,SACE,cAACnC,GAAA,EAAD,CAAW0C,QAAS,SAI1B,cAACC,GAAA,EAAD,UACA,cAAC5C,GAAA,EAAD,UACE,cAAC6C,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,CAAErI,MAAO,MAAOjN,OAAQ,IACpDmV,QAAS,EACTlH,MAAOyF,EAAKhG,OACZS,YAAaA,GACbD,KAAMA,EACNqH,YAAa,CACXC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEVrH,aA9IW,SAACI,EAAOkH,GAC/BhB,EAAQgB,IA8IIC,oBA3IkB,SAACnH,GAC/BmG,GAAeiB,SAASpH,EAAM/F,OAAOzI,MAAO,KAC5C0U,EAAQ,IA0IImB,iBAAkB7H,mBAWnB,I,4BClRR,SAAS8H,KAAe,IACvB1P,EAAa2P,cAAb3P,UADsB,EAEMc,oBAAS,GAFf,mBAErBC,EAFqB,KAEVC,EAFU,OAGFF,mBAAS,CACjC8D,YAAa,GACb+I,YAAa,GACbD,SAAU,GACVO,cAAe,GACfC,UAAW,GACXC,UAAW,KATe,mBAGrB1U,EAHqB,KAGdwH,EAHc,OAWFH,oBAAS,GAXP,mBAWrBI,EAXqB,aAYYJ,mBAAS,KAZrB,mBAYrB8O,EAZqB,KAYPC,EAZO,KAc5BpO,qBAAU,WACRxB,GAAeD,GACZJ,KADH,uCACQ,WAAOjB,GAAP,SAAAF,EAAA,sDACJwC,EAAStC,EAAKf,SADV,2CADR,uDAIGuE,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,uCAAwCA,MAExDwC,GAAe,WACdZ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJoR,EAAgBtG,OAAOgC,QAAQ5M,EAAKf,SAAS8G,KAAI,SAAC/K,GAAD,MAAS,CACxDgC,GAAIhC,EAAK,GACT0K,KAAM1K,EAAK,GAAG0K,UAHZ,2CADN,uDAOClC,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,wCAAyCA,QAE1D,CAACkD,IAEJ,IAAMkB,EAAe,SAACE,GAAO,IAAD,EACJA,EAAED,OAAhB1G,EADkB,EAClBA,GAAI/B,EADc,EACdA,MACZqH,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN/G,EAAK/B,QAgBJ+I,EAAS,YVyNS,SAAC7C,EAAIrG,GAC3B,IAAM0F,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,gBACbZ,QAAS,CACTmB,UAAWF,EACX+C,aAAcpJ,MAItB,OAAOkG,MAAMtB,GAAYc,GACxBS,KAAKrB,KUtONuR,CAAkB9P,EAAWvG,GAC1BmG,KADH,uCACQ,WAAOjB,GAAP,SAAAF,EAAA,sDACJnB,EAAaf,QAAQ,sBADjB,2CADR,uDAIG4F,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,sBAAuBA,OAI3C,OACE,gCACE,eAAC0Q,GAAA,EAAD,WACE,cAACA,GAAA,EAAW3S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACyS,GAAA,EAAW3S,KAAZ,CAAiBE,KAAK,WAAtB,sBACA,cAACyS,GAAA,EAAW3S,KAAZ,CAAiB4S,QAAM,EAAvB,6BAEF,eAACxL,EAAA,EAAD,CAAMC,YAAU,EAACrC,UAAWA,EAAWsC,SA9BtB,SAACf,GACpBA,EAAEgB,iBACF,IAAMC,EAAOjB,EAAEkB,eACc,IAAzBD,EAAKE,kBACPnB,EAAEgB,iBACFhB,EAAEoB,mBAEJ1C,GAAa,GACbzG,QAAQC,IAAI+I,EAAKE,iBACbF,EAAKE,iBAAiBd,KAqBxB,UACE,eAACQ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,wBAGA,cAACC,EAAA,EAAD,CACED,GAAI,EADN,SAGE,cAACb,EAAA,EAAKe,QAAN,CAAcvK,KAAK,OAAOyK,YAAapE,EAAWwE,UAAQ,SAI9D,eAACrB,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,0BAGA,eAACC,EAAA,EAAD,CACED,GAAI,EADN,UAGE,cAACb,EAAA,EAAKe,QAAN,CACEC,UAAQ,EACRC,YAAY,OACZzI,GAAG,cACH0I,KAAK,cACLzK,MAAOH,EAAMmL,YACbN,SAAUlC,IAEZ,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,qDAMJ,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,0BAGA,eAACC,EAAA,EAAD,CACED,GAAI,EADN,UAGE,eAACb,EAAA,EAAKe,QAAN,CACEO,QAAM,EACNN,UAAQ,EACRP,GAAG,SACHjI,GAAG,cACH0I,KAAK,cACLzK,MAAOH,EAAMkU,YACbrJ,SAAUlC,EAPZ,UASE,wBAAQxI,MAAO,GAAf,6BAEEgW,EAAalL,KAAI,SAAC/K,GAAD,OACf,wBAAQC,MAAOD,EAAKgC,GAApB,SAAyBhC,EAAK0K,aAIpC,cAAClB,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,qDAMJ,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,sBAGA,eAACC,EAAA,EAAD,CACED,GAAI,EADN,UAGE,cAACb,EAAA,EAAKe,QAAN,CACEC,UAAQ,EACRxI,GAAG,WACH0I,KAAK,WACLzK,MAAOH,EAAMiU,SACbpJ,SAAUlC,IAEZ,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,iDAMJ,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,oCAGA,eAACC,EAAA,EAAD,CACED,GAAI,EADN,UAGE,cAACb,EAAA,EAAKe,QAAN,CACEC,UAAQ,EACRxI,GAAG,YACH0I,KAAK,YACLzK,MAAOH,EAAM0U,UACb7J,SAAUlC,IAEZ,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,+DAMJ,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,wBAGA,eAACC,EAAA,EAAD,CACED,GAAI,EADN,UAGE,cAACb,EAAA,EAAKe,QAAN,CACEC,UAAQ,EACRxI,GAAG,YACH0I,KAAK,YACLzK,MAAOH,EAAMyU,UACb5J,SAAUlC,IAEZ,cAACe,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,mDAKJ,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,yBAGA,cAACb,EAAA,EAAKW,MAAN,CACEC,QAAM,EACNC,GAAI,EAFN,SAIE,cAAC,KAAD,CACEoL,WAAY,CACVjL,UAAU,GAEZC,YAAY,gBACZzI,GAAG,gBACH0I,KAAK,gBACL0L,QAAS,KACTnW,MAAO+S,OAAOlT,EAAMwU,eACpB3J,SAAU,SAAChC,GACTrB,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN,gBAAkB8M,SAASlN,SAGhC0N,QAAS,SAACpW,EAAOmW,GACf,OAAqB,IAAjBnW,EAAM0N,eAWlB,cAACnE,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,SACE,cAACI,EAAA,EAAD,CAAKD,GAAI,EACRtJ,UAAU,6BADX,SAEE,cAACwC,EAAA,EAAD,CAAQvD,KAAK,SAAb,8BAQG,I,+BClPR,SAASsW,GAAgB5T,GAAQ,IACjC2D,EAAa2P,cAAb3P,UADgC,EAECc,mBAAS,IAFV,mBAE9B8D,EAF8B,KAEjBsL,EAFiB,OAGXpP,mBAAS,CACjCqP,aAAc,EACdC,uBAAwB,EACxBC,kBAAkB,EAClBC,oBAAoB,EACpBC,eAAe,IARoB,mBAG9B9W,EAH8B,KAGvBwH,EAHuB,OAUXH,oBAAS,GAVE,mBAU9BI,EAV8B,UAYrCO,qBAAU,WACRxB,GAAeD,GACdJ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJyR,EAAevR,EAAKf,QAAQgH,aADxB,2CADN,uDAICzC,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,wCAAyCA,MAkBzDiD,EAPU,CACRkP,aAAc,EACdC,uBAAwB,EACxBC,kBAAkB,EAClBC,oBAAoB,EACpBC,eAAe,MAGhB,CAACrP,IAEJ,IAAMkB,EAAe,SAACE,EAAGC,EAAQC,GAC/B,IAAI7G,EAAI/B,OACG6I,IAAPD,GACF7G,EAAK2G,EAAED,OAAO1G,GACd/B,EAAQ0I,EAAED,OAAOzI,QAEjB+B,EAAK6G,EAAG7G,GACR/B,EAAQ0I,GAEe,mBAAd7I,EAAMkC,GACfsF,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN/G,GAAMlC,EAAMkC,QAGfsF,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN/G,EAAK/B,QAUN+I,EAAS,aAIf,SAAS6N,EAASC,GAChB,OAAOA,EAAM,QAGf,OACE,gCACE,eAAC/B,GAAA,EAAD,WACE,cAACA,GAAA,EAAW3S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACyS,GAAA,EAAW3S,KAAZ,CAAiBE,KAAK,WAAtB,sBACA,cAACyS,GAAA,EAAW3S,KAAZ,CAAiB4S,QAAM,EAAvB,iCAEF,cAACD,GAAA,EAAD,UACA,oBAAI5T,MAAO,CAAC8Q,MAAM,WAAlB,SAA+BhH,MAE/B,eAACzB,EAAA,EAAD,CAAME,SAvBW,SAACf,GACpBA,EAAEgB,iBACFX,KAqBE,UACE,eAACQ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,mCAGA,cAACC,EAAA,EAAD,CACED,GAAI,EACJtJ,UAAU,mDAFZ,SAIE,cAACgW,GAAA,EAAD,UACE,cAAC,KAAD,CACEC,QAAM,EACNhV,GAAG,eACHiV,OAAQJ,EACR9V,UAAU,eACVd,MAAOH,EAAM0W,aACb1B,IAAK,EACLjG,IAAK,IACLlE,SAAUlC,WAMlB,eAACe,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,0DAGA,cAACC,EAAA,EAAD,CACED,GAAI,EACJtJ,UAAU,mDAFZ,SAIE,cAACgW,GAAA,EAAD,UACE,cAAC,KAAD,CACEC,QAAM,EACNhV,GAAG,yBACHiV,OAAQJ,EACR9V,UAAU,eACVd,MAAOH,EAAM2W,uBACb3B,IAAK,EACLjG,IAAK,IACLlE,SAAUlC,WAMlB,eAACe,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,mDAGA,cAACC,EAAA,EAAD,CACED,GAAI,EACJtJ,UAAU,mDAFZ,SAIE,cAACyI,EAAA,EAAK6B,MAAN,CACEC,QAASxL,EAAM4W,iBACf1W,KAAK,SACLgC,GAAG,mBACH2I,SAAUlC,SAKhB,eAACe,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,4DAGA,cAACC,EAAA,EAAD,CACED,GAAI,EACJtJ,UAAU,oDAFZ,SAIE,cAACyI,EAAA,EAAK6B,MAAN,CACEC,QAASxL,EAAM8W,cACf5W,KAAK,SACLgC,GAAG,gBACH2I,SAAUlC,SAKhB,eAACe,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,6CAGA,cAACC,EAAA,EAAD,CACED,GAAI,EACJtJ,UAAU,oDAFZ,SAIE,cAACyI,EAAA,EAAK6B,MAAN,CACEC,QAASxL,EAAM6W,mBACf3W,KAAK,SACLgC,GAAG,qBACH2I,SAAUlC,SAKhB,cAACe,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,SACE,cAACI,EAAA,EAAD,CAAKD,GAAI,EACRtJ,UAAU,6BADX,SAEE,cAACwC,EAAA,EAAD,CAAQvD,KAAK,SAAb,8BAQG,I,oDC5LR,SAASkX,KAAW,IAAD,EACKlB,cAArB3P,EADgB,EAChBA,UAAWI,EADK,EACLA,OADK,GAERhG,cACG0W,cAAZC,SACiBjQ,mBAAS,KAJT,mBAIjBwM,EAJiB,KAIXC,EAJW,OAKIzM,mBAAS,CACnC0M,QAAQ,EACRzC,MAAM,IAPgB,mBAKjBC,EALiB,KAKTC,EALS,OAScnK,mBAAS,IATvB,mBASjB8D,EATiB,KASJsL,EATI,OAUQpP,mBAAS,IAVjB,mBAUjBiE,EAViB,KAUPiM,EAVO,OAWElQ,oBAAS,GAXX,gCAYEA,mBAAS,OAZX,mBAYjB+J,EAZiB,KAYVC,EAZU,OAaEhK,oBAAS,GAbX,mBAajBI,EAbiB,aAccJ,mBAAS,KAdvB,mBAcjBD,EAdiB,KAcJ6J,EAdI,OAesB5J,mBAAS,IAf/B,mBAejB6J,EAfiB,KAeAC,EAfA,KAgBlBM,EAAS,WACbjL,GAAeD,GACdJ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJyR,EAAevR,EAAKf,QAAQgH,aADxB,2CADN,uDAICzC,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,wCAAyCA,MAEzDmC,GAAYC,GACXR,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJuS,EAAYrS,EAAKf,QAAQmH,UADrB,2CADN,uDAIC5C,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,qCAAsCA,MZoIxC,SAAC8B,EAAIZ,GACnB,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,WACbZ,QAAS,CACPa,QAAS,SACTR,UACAa,QAAQ,CACNK,OAAQN,OAKlB,OAAOH,MAAMtB,GAAYc,GACxBS,KAAKrB,IYnJN0S,CAAU7Q,EAAQ,CAAC,WAAY,aAAc,aAAc,iBACxDR,KADH,uCACQ,WAAOjB,GAAP,SAAAF,EAAA,sDACJlE,QAAQC,IAAImE,EAAKE,SACjB0O,EAAQ5O,EAAKE,SAFT,2CADR,uDAKGsD,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,kCAAmCA,MAEnDwC,GAAe,UAChBZ,KADC,uCACI,WAAOjB,GAAP,SAAAF,EAAA,sDACJmM,EAAmBjM,EAAKf,SACxB8M,EAAenB,OAAOgC,QAAQ5M,EAAKf,SAAS8G,KAAI,SAAC/K,GAAD,MAAS,CACvDgC,GAAIhC,EAAK,GACT0K,KAAM1K,EAAK,GAAG0K,UAJZ,2CADJ,uDAQDlC,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,uCAAwCA,OAG1DyD,qBAAU,WACRyJ,MACC,CAAChK,IAEJ,IAAM5E,EAAc,SAACkP,GACnB,IAAIC,EAAUT,EAAOQ,GACrBP,GAAU,SAACvI,GAAD,mBAAC,eACNA,GADK,kBAEP8I,GAASC,QAIR4C,EAAG,uCAAG,WAAO9N,GAAP,SAAA9B,EAAA,sDACV6B,GAAUC,GACTX,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJyM,IACA5O,EAAY,UACZgB,EAAaf,QAAQ,kBAHjB,2CADN,uDAMC4F,OAAM,SAACnE,GACNzD,QAAQyD,MAAM,qCAAsCA,MAR5C,2CAAH,sDAnEe,GAgFA0J,IAAM5G,SAAS,GAhFf,qBAgFjBgH,GAhFiB,MAgFXwG,GAhFW,SAiFc5G,IAAM5G,SAAS,GAjF7B,qBAiFjBiH,GAjFiB,MAiFJwG,GAjFI,MAmFlBC,GAAYzG,GAAcO,KAAKmG,IAAI1G,GAAauF,EAAKhG,OAASQ,GAAOC,IAW3E,OACE,gCACE,cAAC3L,EAAD,CACEI,KAAMwO,EAAOwC,OACbjR,QAAS,WACP8R,EAAIxD,IAENvO,YAAa,WACXA,EAAY,WAEdpB,MAAM,mBACNuB,KAAK,wBAEP,cAACmE,GAAD,CACEC,YAAeA,EACfrE,KAAMwO,EAAOD,KACbxK,SAAYsK,EACZzK,OAAUA,EACV7D,QAAS,WACL2O,IACA5O,EAAY,SAEhBA,YAAa,WACXA,EAAY,WAIhB,sBAAK5B,UAAU,UAAf,UACA,eAACgU,GAAA,EAAD,WACE,cAACA,GAAA,EAAW3S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACyS,GAAA,EAAW3S,KAAZ,CAAiBE,KAAK,WAAtB,sBACA,cAACyS,GAAA,EAAW3S,KAAZ,CAAiBE,KAAM,YAAY+D,EAAU,QAA7C,mBACA,cAAC0O,GAAA,EAAW3S,KAAZ,CAAiB4S,QAAM,EAAvB,wBAEF,sBAAKjU,UAAU,4BAAf,UACA,qBAAII,MAAO,CAAC8Q,MAAM,WAAlB,UAA+BhH,EAA/B,MAA+CG,KAC/C,qBAAKjK,MAAO,CAAC,YAAY,OACvB,cAACqI,EAAA,EAAD,CAAMyL,QAAM,EAAClU,UAAU,YAAY2I,SAAU,SAACf,GAAKA,EAAEgB,kBAArD,SACE,cAACO,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC9G,EAAA,EAAD,CACExC,UAAU,kBACVf,KAAK,SACLsB,QAAS,WACP6P,EAAS,MACTxO,EAAY,SALhB,+BAeR,qBAAK5B,UAAU,UAAf,SACE,cAACsR,GAAA,EAAD,CAAgBD,UAAWE,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO7D,aAAW,eAAlB,UACE,cAAC8D,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAwB,qCACxB,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,uCAC1B,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,uCAC1B,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,yCAC1B,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAAyB,+CAG7B,eAACC,GAAA,EAAD,YACIxE,GAAc,EAChBuF,EAAKuB,MAAM/G,GAAOC,GAAaD,GAAOC,GAAcA,IACpDuF,GAAM5I,KAAI,SAAC8H,EAAK7F,GAAN,OACR,eAACyF,GAAA,EAAD,WACA,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBE,EAAIjM,WAC3B,cAAC8L,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BE,EAAI9K,aAC/B,cAAC2K,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2B3B,EAAgB6B,EAAI7K,YAAY0C,OAC3D,cAACgI,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA8C,WAAnBE,EAAInB,aAC/B,cAAC6F,GAAA,EAAD,CAAShW,MAAM,SAAf,SACA,cAAC,KAAD,CAAuBJ,MAAO,CAAE8Q,MAAO,eAGvC,cAACsF,GAAA,EAAD,CAAShW,MAAM,UAAf,SACA,cAAC,KAAD,CAA2CJ,MAAO,CAAE8Q,MAAO,iBAG3D,eAACS,GAAA,EAAD,CAAWC,MAAM,QAAQxR,MAAO,CAAC2R,QAAQ,GAAzC,UACA,cAACyE,GAAA,EAAD,CAAShW,MAAM,OAAf,SACE,cAACiN,GAAA,EAAD,CAAYlN,QAAS,WACjB6P,EAAS0B,EAAIjM,UACbjE,EAAY,SAFhB,SAIE,cAAC,KAAD,CACEyN,KAAM,GACN6B,MAAM,kBAIZ,cAACsF,GAAA,EAAD,CAAShW,MAAM,SAAf,SACE,cAACiN,GAAA,EAAD,CAAYlN,QAAS,WACjB6P,EAAS0B,EAAIjM,UACbjE,EAAY,WAFhB,SAIE,cAAC,KAAD,CAAOsP,MAAM,MAAM7B,KAAM,cA9BhByC,EAAIzH,aAoCpByJ,GAAY,GACX,cAACpC,GAAA,EAAD,CAAUtR,MAAO,CAAE+Q,OAAQ,GAAK2C,IAAhC,SACE,cAACnC,GAAA,EAAD,CAAW0C,QAAS,SAI1B,cAACC,GAAA,EAAD,UACA,cAAC5C,GAAA,EAAD,UACE,cAAC6C,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,CAAErI,MAAO,MAAOjN,OAAQ,IACpDmV,QAAS,EACTlH,MAAOyF,EAAKhG,OACZS,YAAaA,GACbD,KAAMA,GACNqH,YAAa,CACXC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEVrH,aAtIW,SAACI,EAAOkH,GAC/BhB,GAAQgB,IAsIIC,oBAnIkB,SAACnH,GAC/BmG,GAAeiB,SAASpH,EAAM/F,OAAOzI,MAAO,KAC5C0U,GAAQ,IAkIImB,iBAAkB7H,mBAWnB,I,oBC1OR,SAASuJ,KAAS,IACfnR,EAAa2P,cAAb3P,UACF7F,EAAUC,cACT2W,EAAYD,cAAZC,SAHe,EAIEjQ,mBAAS,IAJX,mBAIfwM,EAJe,KAITC,EAJS,OAKYzM,mBAAS,IALrB,mBAKfsE,EALe,KAKJgM,EALI,OAMoBtQ,mBAAS,IAN7B,mBAMfuQ,EANe,KAMAC,EANA,OAOgBxQ,mBAAS,IAPzB,mBAOf8D,EAPe,KAOFsL,EAPE,OAQMpP,mBAAS,CACnC0M,QAAQ,EACRzC,MAAM,IAVc,mBAQfC,EARe,KAQPC,EARO,OAYInK,oBAAS,GAZb,mBAYf0K,EAZe,KAYR+F,EAZQ,OAaIzQ,mBAAS,IAbb,mBAaf+J,EAbe,KAaRC,EAbQ,OAcIhK,oBAAS,GAdb,mBAcfI,EAde,KAehBgK,GAfgB,KAeP,WACbjL,GAAeD,GACdJ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJyR,EAAevR,EAAKf,QAAQgH,aADxB,2CADN,uDAICzC,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,wCAAyCA,MAEzD6B,GAAQG,EAAW,CAAC,SAAU,WAAY,aACzCJ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJlE,QAAQC,IAAImE,EAAKE,SACjB0O,EAAQ5O,EAAKE,SAFT,2CADN,uDAKCsD,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,gCAAiCA,MAEjDwC,GAAe,QACdZ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJ6S,EAAiB3S,EAAKf,SACtBwT,EAAa7H,OAAOgC,QAAQ5M,EAAKf,SAAS8G,KAAI,SAAC/K,GAAD,MAAS,CACrDgC,GAAIhC,EAAK,GACT0K,KAAM1K,EAAK,GAAG0K,UAJZ,2CADN,uDAQClC,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,qCAAsCA,QAGxDyD,qBAAU,WACRyJ,MACC,CAAChK,IAEJ,IAAMsQ,EAAe,SAACpR,EAAQ2E,Ib+af,SAAC3E,GACd,IAAMjB,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,WACbZ,QAAQ,CACJuB,aAIZ,OAAOT,MAAMtB,GAAYc,GACxBS,KAAKrB,Ka3bNkT,CAASrR,GACRR,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJnB,EAAaf,QAAQ,eAAewI,GADhC,2CADN,uDAIC5C,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,gCAAiCA,OAI7C1B,EAAc,SAACkP,GACnB,IAAIC,EAAUT,EAAOQ,GACrBP,GAAU,SAACvI,GAAD,mBAAC,eACNA,GADK,kBAEP8I,GAASC,QAQR4C,EAAG,uCAAG,WAAOjO,GAAP,SAAA3B,EAAA,sDACV4B,GAAQD,GACPR,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJyM,IACA5O,EAAY,UACZgB,EAAaf,QAAQ,gBAHjB,2CADN,uDAMC4F,OAAM,SAACnE,GACNzD,QAAQyD,MAAM,mCAAoCA,MAR1C,2CAAH,sDAzEa,EAsFE0J,IAAM5G,SAAS,GAtFjB,oBAsFfgH,GAtFe,MAsFTwG,GAtFS,SAuFgB5G,IAAM5G,SAAS,GAvF/B,qBAuFfiH,GAvFe,MAuFFwG,GAvFE,MAyFhBC,GAAYzG,GAAcO,KAAKmG,IAAI1G,GAAauF,EAAKhG,OAASQ,GAAOC,IAW3E,OACE,gCACE,cAAC3L,EAAD,CACEI,KAAMwO,EAAOwC,OACbjR,QAAS,WACP8R,EAAIxD,IAENvO,YAAa,WACXA,EAAY,WAEdpB,MAAM,mBACNuB,KAAK,sBAEP,cAACyI,GAAD,CACEE,UAAaA,EACb5I,KAAMwO,EAAOD,KACb3K,OAAUyK,EACV1F,SAAYqG,EACZxL,UAAaA,EACbzD,QAAS,WACL2O,IACA5O,EAAY,SAEhBA,YAAa,WACXA,EAAY,WAIhB,sBAAK5B,UAAU,UAAf,UACA,eAACgU,GAAA,EAAD,WACE,cAACA,GAAA,EAAW3S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACyS,GAAA,EAAW3S,KAAZ,CAAiBE,KAAK,WAAtB,sBACA,cAACyS,GAAA,EAAW3S,KAAZ,CAAiB4S,QAAM,EAAvB,sBAEF,sBAAKjU,UAAU,4BAAf,UACA,oBAAII,MAAO,CAAC8Q,MAAM,WAAlB,SAA+BhH,IAC/B,qBAAK9J,MAAO,CAAC,YAAY,OACvB,cAACqI,EAAA,EAAD,CAAMyL,QAAM,EAACvL,SAAU,SAACf,GAAKA,EAAEgB,kBAA/B,SACE,cAACO,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC9G,EAAA,EAAD,CACExC,UAAU,kBACVf,KAAK,SACLsB,QAAS,WACLsW,GAAS,GACXjV,EAAY,SALhB,+BAeR,qBAAK5B,UAAU,UAAf,SACE,cAACsR,GAAA,EAAD,CAAgBD,UAAWE,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO7D,aAAW,eAAlB,UACE,cAAC8D,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAwB,qCACxB,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,uCAC1B,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,uCAC1B,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAAyB,+CAG7B,eAACC,GAAA,EAAD,YACIxE,GAAc,EAChBuF,EAAKuB,MAAM/G,GAAOC,GAAaD,GAAOC,GAAcA,IACpDuF,GAAM5I,KAAI,SAAC8H,EAAK7F,GAAN,OACR,eAACyF,GAAA,EAAD,WACA,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyBE,EAAIpM,SAC3B,cAACiM,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BE,EAAIzH,WAC/B,cAACsH,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2B+E,EAAc7E,EAAIhH,UAAUnB,OACvD,eAACgI,GAAA,EAAD,CAAWC,MAAM,QAAQxR,MAAO,CAAC2R,QAAQ,GAAzC,UACA,cAACyE,GAAA,EAAD,CAAShW,MAAM,UAAf,SACE,cAACiN,GAAA,EAAD,CACArN,MAAO,CAAC2R,QAAQ,YAChBxR,QAAS,WA7GX,IAACmF,IA8GaoM,EAAIpM,OA7GhCjG,EAAQM,KAAKsW,EAAU,IAAKpE,OAAOvM,KA0GnB,SAKE,cAAC,KAAD,CACE2J,KAAM,GACN6B,MAAM,kBAIZ,cAACsF,GAAA,EAAD,CAAShW,MAAM,OAAf,SACE,cAACiN,GAAA,EAAD,CACArN,MAAO,CAAC2R,QAAQ,YACfxR,QAAS,WACN6P,EAAS0B,EAAIpM,QACbmR,GAAS,GACTjV,EAAY,SALhB,SAOE,cAAC,KAAD,CACEyN,KAAM,GACN6B,MAAM,kBAIV,cAACsF,GAAA,EAAD,CAAShW,MAAM,YAAf,SACA,cAACiN,GAAA,EAAD,CACArN,MAAO,CAAC2R,QAAQ,YACfxR,QAAS,WACNuW,EAAahF,EAAIpM,OAAQoM,EAAIzH,WAHjC,SAKE,cAAC,KAAD,CACEgF,KAAM,GACN6B,MAAM,cAIZ,cAACsF,GAAA,EAAD,CAAShW,MAAM,SAAf,SACE,cAACiN,GAAA,EAAD,CACArN,MAAO,CAAC2R,QAAQ,YACfxR,QAAS,WACN6P,EAAS0B,EAAIpM,QACb9D,EAAY,WAJhB,SAME,cAAC,KAAD,CAAOsP,MAAM,MAAM7B,KAAM,cAlDhByC,EAAIzH,aAwDpByJ,GAAY,GACX,cAACpC,GAAA,EAAD,CAAUtR,MAAO,CAAE+Q,OAAQ,GAAK2C,IAAhC,SACE,cAACnC,GAAA,EAAD,CAAW0C,QAAS,SAI1B,cAACC,GAAA,EAAD,UACA,cAAC5C,GAAA,EAAD,UACE,cAAC6C,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,CAAErI,MAAO,MAAOjN,OAAQ,IACpDmV,QAAS,EACTlH,MAAOyF,EAAKhG,OACZS,YAAaA,GACbD,KAAMA,GACNqH,YAAa,CACXC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEVrH,aAzJW,SAACI,EAAOkH,GAC/BhB,GAAQgB,IAyJIC,oBAtJkB,SAACnH,GAC/BmG,GAAeiB,SAASpH,EAAM/F,OAAOzI,MAAO,KAC5C0U,GAAQ,IAqJImB,iBAAkB7H,mBAWnB,I,oDC/PR,SAAS8J,GAAUrV,GAAQ,IAC3B2D,EAAa2P,cAAb3P,UAD0B,EAEPc,mBAAS,IAFF,mBAExBwM,EAFwB,KAElBC,EAFkB,OAGLzM,mBAAS,MAHJ,mBAGxB+J,EAHwB,KAGjBC,EAHiB,OAIOhK,mBAAS,IAJhB,mBAIxB8D,EAJwB,KAIXsL,EAJW,OAKLpP,mBAAS,CACjC6Q,QAAS,GACTC,SAAU,GACVC,QAAS,KARoB,mBAKxBpY,EALwB,KAKjBwH,EALiB,OAULH,oBAAS,GAVJ,mBAUxBI,EAVwB,UA6B/BO,qBAAU,WAjBRxB,GAAeD,GACdJ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJyR,EAAevR,EAAKf,QAAQgH,aADxB,2CADN,uDAICzC,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,wCAAyCA,MAmDzDuP,EAtCU,CACN,CACI5R,GAAI,EACJgW,QAAS,YACTC,SAAU,WACVC,QAAS,aAEb,CACIlW,GAAI,EACJgW,QAAS,YACTC,SAAU,WACVC,QAAS,aAEb,CACIlW,GAAI,EACJgW,QAAS,YACTC,SAAU,WACVC,QAAS,aAEb,CACIlW,GAAI,EACJgW,QAAS,YACTC,SAAU,WACVC,QAAS,aAEb,CACIlW,GAAI,EACJgW,QAAS,YACTC,SAAU,WACVC,QAAS,aAEb,CACIlW,GAAI,EACJgW,QAAS,YACTC,SAAU,WACVC,QAAS,iBAIhB,CAAC3Q,IAEJ,IAAMkB,EAAe,SAACE,GAAO,IAAD,EACJA,EAAED,OAAhB1G,EADkB,EAClBA,GAAI/B,EADc,EACdA,MACZqH,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN/G,EAAK/B,QA5EqB,EA8FP8N,IAAM5G,SAAS,GA9FR,mBA8FxBgH,EA9FwB,KA8FlBwG,EA9FkB,OA+FO5G,IAAM5G,SAAS,GA/FtB,mBA+FxBiH,EA/FwB,KA+FXwG,EA/FW,KAiGzBC,EAAYzG,EAAcO,KAAKmG,IAAI1G,EAAauF,EAAKhG,OAASQ,EAAOC,GAY3E,OACE,gCACE,sBAAKrN,UAAU,UAAf,UACA,eAACgU,GAAA,EAAD,WACE,cAACA,GAAA,EAAW3S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACyS,GAAA,EAAW3S,KAAZ,CAAiBE,KAAK,WAAtB,sBACA,cAACyS,GAAA,EAAW3S,KAAZ,CAAiB4S,QAAM,EAAvB,kCAEF,cAACD,GAAA,EAAD,UACA,oBAAI5T,MAAO,CAAC8Q,MAAM,WAAlB,SAA+BhH,SAG/B,qBAAKlK,UAAU,UAAf,SACE,cAACsR,GAAA,EAAD,CAAgBD,UAAWE,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO7D,aAAW,eAAlB,UACE,cAAC8D,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,SAAjB,qBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,2BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,0BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,0BAGJ,eAACC,GAAA,EAAD,YACIxE,EAAc,EAChBuF,EAAKuB,MAAM/G,EAAOC,EAAaD,EAAOC,EAAcA,GACpDuF,GAAM5I,KAAI,SAAC8H,GAAD,OACR,eAACJ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWN,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAA5C,SACGE,EAAImF,UAEP,cAACtF,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACGzB,IAAU2B,EAAI7Q,GACf,cAACmW,GAAA,EAAD,CACInW,GAAG,WACHkL,MAAM,WACNjN,MAASH,EAAMmY,SACftN,SAAYlC,IACfoK,EAAIoF,WAGP,cAACvF,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACGzB,IAAU2B,EAAI7Q,GACf,cAACmW,GAAA,EAAD,CACInW,GAAG,UACHkL,MAAM,WACNjN,MAASH,EAAMoY,QACfvN,SAAYlC,IACfoK,EAAIqF,UAGP,cAACxF,GAAA,EAAD,CAAWC,MAAM,QAASxR,MAAO,CAAC2R,QAAQ,GAA1C,SACa,OAAV5B,EACI,cAAC1C,GAAA,EAAD,CAAYlN,QAAS,kBA7E/B,SAAC8W,GAAS,IACdpW,EAAkCoW,EAAlCpW,GAAIgW,EAA8BI,EAA9BJ,QAASC,EAAqBG,EAArBH,SAAUC,EAAWE,EAAXF,QAC9B5Q,EAAS,CACL0Q,UACAC,WACAC,YACJ/G,EAASnP,GAuEuCoP,CAAKyB,IAAhC,SACG,cAAC,KAAD,CACAzC,KAAM,GACN6B,MAAM,gBAIVf,IAAU2B,EAAI7Q,GACd,gCACI,cAACwM,GAAA,EAAD,CAAYlN,QAAS,aAArB,SACI,cAAC,KAAD,CACA8O,KAAM,GACN6B,MAAM,cAGV,cAACzD,GAAA,EAAD,CAAYlN,QAAS,kBAAM6P,EAAS,OAApC,SACI,cAAC,KAAD,CACAf,KAAM,GACN6B,MAAM,eAKb,cAACzD,GAAA,EAAD,CAAYtD,UAAY,EAAxB,SACG,cAAC,KAAD,CACAkF,KAAM,WAnDHyC,EAAI7Q,OA0DpB6S,EAAY,GACX,cAACpC,GAAA,EAAD,CAAUtR,MAAO,CAAE+Q,OAAQ,GAAK2C,GAAhC,SACE,cAACnC,GAAA,EAAD,CAAW0C,QAAS,SAI1B,cAACC,GAAA,EAAD,UACA,cAAC5C,GAAA,EAAD,UACE,cAAC6C,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,CAAErI,MAAO,MAAOjN,OAAQ,IACpDmV,QAAS,EACTlH,MAAOyF,EAAKhG,OACZS,YAAaA,EACbD,KAAMA,EACNqH,YAAa,CACXC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEVrH,aAjHW,SAACI,EAAOkH,GAC/BxE,EAAS,MACTwD,EAAQgB,IAgHIC,oBA7GkB,SAACnH,GAC/BmG,EAAeiB,SAASpH,EAAM/F,OAAOzI,MAAO,KAC5C0U,EAAQ,IA4GImB,iBAAkB7H,mBAWnB,I,UC1NR,SAASoK,GAAY3V,GAC1B,IAAIlC,EAAUC,cADmB,EAEb6X,cAAd3X,EAF2B,EAE3BA,KAAM4X,EAFqB,EAErBA,IAERpK,EADagJ,cAAZC,SACeoB,MAAM,KAAK,GACzB9X,EAAS,SAACC,GACdH,EAAQM,KAAKyX,EAAI5X,IAEnB,OACE,qBAAKI,UAAU,WAAWI,MAAO,CAACsX,WAAW,eAA7C,SACE,cAACC,GAAA,EAAIC,UAAL,CAAe3W,GAAG,oBAAlB,SACE,eAACkI,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKsO,GAAG,OAAR,SACE,eAAC3W,EAAA,EAAD,CAAKP,QAAQ,QAAQX,UAAU,cAA/B,UACE,cAACkB,EAAA,EAAIG,KAAL,UACE,cAACH,EAAA,EAAIC,KAAL,CAAUZ,QAAS,WAAKZ,EAAO,UAAWsU,OAAiB,SAAP7G,EAApD,0BAEF,cAAClM,EAAA,EAAIG,KAAL,UACE,cAACH,EAAA,EAAIC,KAAL,CAAUZ,QAAS,WAAKZ,EAAO,cAAesU,OAAiB,aAAP7G,EAAxD,wBAEF,cAAClM,EAAA,EAAIG,KAAL,UACE,cAACH,EAAA,EAAIC,KAAL,CAAUZ,QAAS,WAAKZ,EAAO,UAAWsU,OAAiB,SAAP7G,EAApD,qBAEF,cAAClM,EAAA,EAAIG,KAAL,UACE,cAACH,EAAA,EAAIC,KAAL,CAAUZ,QAAS,WAAKZ,EAAO,eAAgBsU,OAAiB,cAAP7G,EAAzD,+BAIN,cAAC7D,EAAA,EAAD,CAAKD,GAAI,EAAT,SACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwO,OAAK,EAAClY,KAAI,UAAKA,EAAL,SAAjB,SACE,cAACoV,GAAD,MAEF,cAAC,IAAD,CAAO8C,OAAK,EAAClY,KAAI,UAAKA,EAAL,aAAjB,SACE,cAAC2V,GAAD,MAEF,cAAC,IAAD,CAAOuC,OAAK,EAAClY,KAAI,UAAKA,EAAL,iBAAjB,SACE,cAACuW,GAAD,MAEF,cAAC,IAAD,CAAO2B,OAAK,EAAClY,KAAI,UAAKA,EAAL,SAAjB,SACE,cAAC6W,GAAD,MAEF,cAAC,IAAD,CAAOqB,OAAK,EAAClY,KAAI,UAAKA,EAAL,cAAjB,SACE,cAACoX,GAAD,MAEF,cAAC,IAAD,CAAOpX,KAAMA,EAAb,SACE,cAAC,IAAD,CAAUmY,GAAE,UAAKP,EAAL,yBCtDnB,SAASQ,GAAT,GAA+B,EAATvF,MAAU,IAAD,EACErM,mBAAS,IADX,mBAC7BsM,EAD6B,KAChBC,EADgB,OAEFvM,oBAAS,GAFP,mBAE7BC,EAF6B,KAElBC,EAFkB,OAGVF,mBAAS,IAHC,mBAG7B+J,EAH6B,KAGtBC,EAHsB,OAIZhK,mBAAS,IAJG,mBAI7BwM,EAJ6B,KAIvBC,EAJuB,OAKRzM,mBAAS,CACnC0M,QAAQ,EACRC,KAAK,EACL1C,MAAM,IAR4B,mBAK7BC,EAL6B,KAKrBC,EALqB,OAUVnK,mBAAS,CACjCd,UAAW2S,IACXC,YAAa,KAZqB,mBAU7BnZ,EAV6B,KAUtBwH,EAVsB,OAcJH,mBAAS,CACvCd,UAAW2S,IACXC,YAAa,KAhBqB,mBAc7BhF,EAd6B,KAcnBC,EAdmB,OA4Bd/M,mBAAS,CAC7Bd,UAAW2S,IACXE,WAAY,GACZD,YAAa,KA/BqB,mBA4B7B3J,EA5B6B,KA4BxB6J,EA5BwB,OAiCVhS,oBAAS,GAjCC,mBAiC7BI,EAjC6B,aAkCJJ,mBAAS,KAlCL,mBAkC7BK,EAlC6B,KAkCnBC,EAlCmB,QAmCIN,mBAAS,IAnCb,qBAmC7BiS,GAnC6B,MAmCfC,GAnCe,MAoC9B9H,GAAS,YhBEO,SAAChM,EAASa,GAC9B,IAAMZ,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,WACbZ,QAAS,CACPa,QAAS,eACTR,UACAa,cAIR,OAAOJ,MAAMtB,GAAYc,GACxBS,KAAKrB,KgBhBN0U,CAAgB,CAAC,YAAa,aAAc,gBACzCrT,KADH,uCACQ,WAAOjB,GAAP,SAAAF,EAAA,sDACJlE,QAAQC,IAAImE,EAAKE,SACjBwO,EAAe1O,EAAKE,SAFhB,2CADR,uDAKGsD,OAAM,SAACnE,GACNzD,QAAQyD,MAAM,sBAAuBA,OAGrCgL,GAAI,uCAAG,WAAOC,GAAP,eAAAxK,EAAA,6DACPyK,EAAO,GACXD,EAAIE,QAAJ,uCAAY,WAAOC,GAAP,SAAA3K,EAAA,sDACVyK,EAAKE,EAAQpJ,WAAaoJ,EAAQxE,YADxB,2CAAZ,uDAFW,SAKEsE,EALF,mFAAH,sDAOVzH,qBAAU,WACRxC,GAAY,CAAC,YAAa,gBACzBW,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJ2C,EAAYzC,EAAKE,SACjBmK,GAAKrK,EAAKE,SAASe,KAAnB,uCAAwB,WAAM6J,GAAN,SAAAhL,EAAA,kEACtBuU,GADsB,SACAvJ,EADA,6EAAxB,uDAFI,2CADN,uDAOCtH,OAAM,SAACnE,GACNzD,QAAQyD,MAAM,sBAAuBA,QAEtC,CAACkD,IAEJO,qBAAU,WACRyJ,OACA6H,IAEFtR,qBAAU,WACR/D,OACC,CAAC0P,EAAaQ,IAEjB,IAAMxL,GAAe,SAACE,GAAO,IAAD,EACNA,EAAED,OAAhB1G,EADoB,EACpBA,GAAI/B,EADgB,EAChBA,MACF,cAAL+B,IAAiB/B,EAAQ4V,SAAS5V,IACrCqH,GAAS,SAACyB,GAAD,mBAAC,eACLA,GADI,kBAEN/G,EAAK/B,QAIJsZ,GAAkB,SAAC5Q,GAAM,IAAD,EACRA,EAAED,OAAhB1G,EADsB,EACtBA,GAAI/B,EADkB,EAClBA,MACF,cAAL+B,IAAiB/B,EAAQ4V,SAAS5V,IACrCkZ,GAAO,SAACpQ,GAAD,mBAAC,eACHA,GADE,kBAEJ/G,EAAK/B,QAIJ0C,GAAc,SAACkP,GACnB,IAAIC,EAAUT,EAAOQ,GACrBP,GAAU,SAACvI,GAAD,mBAAC,eACNA,GADK,kBAEP8I,GAASC,QAeR/N,GAAS,SAAC4E,GAAO,IACftC,EAA2B4N,EAA3B5N,UAAW4S,EAAgBhF,EAAhBgF,YAEjBrF,EADcH,EAEJ1P,QACN,SAAC8O,GAAD,OACG2G,OAAOC,MAAMpT,IAAcwM,EAAG,YAAkBxM,IACjD2M,OAAOH,EAAG,aAAiBuB,cAAc9H,QAAQ2M,EAAY7E,gBAAkB,OA+CjFM,GAAM,SAAC1S,IhB3ES,SAACkX,GACrB,IAAM1T,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,qBACbZ,QAAS,CACLgU,iBAIZ,OAAOlT,MAAMtB,GAAYc,GACxBS,KAAKrB,KgB+DN8U,CAAgB1X,GACfiE,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJyM,KACA5O,GAAY,UAFR,2CADN,uDAKC6F,OAAM,SAACnE,GACNzD,QAAQyD,MAAM,sBAAuBA,OA5KL,GAiLZ0J,IAAM5G,SAAS,GAjLH,qBAiL7BgH,GAjL6B,MAiLvBwG,GAjLuB,SAkLE5G,IAAM5G,SAAS,GAlLjB,qBAkL7BiH,GAlL6B,MAkLhBwG,GAlLgB,MAoL9BC,GAAYzG,GAAcO,KAAKmG,IAAI1G,GAAauF,EAAKhG,OAASQ,GAAOC,IAW3E,OACE,gCACE,cAAC3L,EAAD,CACEI,KAAMwO,EAAOwC,OACbjR,QAAS,WACP8R,GAAIxD,IAENvO,YAAa,WACXA,GAAY,WAEdpB,MAAM,mBACNuB,KAAK,uBAEP,eAACC,EAAA,EAAD,CAAOC,KAAMqO,EAAOyC,IAAK7Q,OAAQ,kBAAIN,GAAY,QACjD8N,UAAQ,EADR,UAEA,cAAC1N,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,uCAEF,cAACL,EAAA,EAAMM,KAAP,UACE,eAACmG,EAAA,EAAD,CAAMC,YAAU,EAACrC,UAAWA,EAAWsC,SAvF9B,SAACf,GACdA,EAAEgB,iBACF,IAAMC,EAAOjB,EAAEkB,eACc,IAAzBD,EAAKE,kBACPnB,EAAEgB,iBACFhB,EAAEoB,mBAEJ1C,GAAa,GACbzG,QAAQC,IAAI+I,EAAKE,iBACbF,EAAKE,iBhBxDW,SAAChK,GACrB,IAAM0F,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,qBACbZ,QAASpF,KAGf,OAAOkG,MAAMtB,GAAYc,GACxBS,KAAKrB,IgB8CJ+U,CAAgBrK,GACfrJ,KADD,+BAAAnB,EAAA,MACM,WAAOE,GAAP,SAAAF,EAAA,sDACJyM,KACA5O,GAAY,OAFR,2CADN,uDAKC6F,OAAM,SAACnE,GACNzD,QAAQyD,MAAM,sBAAuBA,OAuErC,UACA,eAACmF,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACE,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,0BAGA,eAACC,EAAA,EAAD,CAAKD,GAAI,EAAT,UACI,eAACb,EAAA,EAAKe,QAAN,CACEO,QAAM,EACNN,UAAQ,EACRP,GAAK,SACLjI,GAAG,YACHyI,YAAY,OACZE,SAAU4O,GACVtZ,MAAOqP,EAAIjJ,UAPb,UASI,wBAAQpG,MAAO,KAAf,kCACCuH,EAASuD,KAAI,SAACC,GAAD,OACV,wBAAQ/K,MAAO+K,EAAQ3E,UAAvB,SAAmC2E,EAAQC,oBAGnD,cAACzB,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,qDAKF,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,6BAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,QACZzI,GAAG,aACH0I,KAAK,aACLzK,MAAOqP,EAAI4J,WACXvO,SAAU4O,KAEV,cAAC/P,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,8CAKJ,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,0BAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,eACZzI,GAAG,cACH0I,KAAK,cACLzK,MAAOqP,EAAI2J,YACXtO,SAAU4O,KAEV,cAAC/P,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,qDAKJ,eAAC+C,EAAA,EAAMO,OAAP,WACI,cAACC,EAAA,EAAD,CAAQ7B,QAAQ,YAAYJ,QAAS,kBAAIqB,GAAY,QAArD,oBAGA,cAACY,EAAA,EAAD,CAAQ7B,QAAQ,UAAU1B,KAAK,SAA/B,gCAOZ,eAAC+C,EAAA,EAAD,CAAOC,KAAMqO,EAAOD,KAAMnO,OAAQ,kBAAIN,GAAY,SAChD8N,UAAQ,EADV,UAEE,cAAC1N,EAAA,EAAMG,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACJ,EAAA,EAAMK,MAAP,wCAEF,cAACL,EAAA,EAAMM,KAAP,UACE,eAACmG,EAAA,EAAD,CAAMC,YAAU,EAACrC,UAAWA,EAAWsC,SApJhC,SAACf,GACZA,EAAEgB,iBACF,IAAMC,EAAOjB,EAAEkB,eACc,IAAzBD,EAAKE,kBACPnB,EAAEgB,iBACFhB,EAAEoB,mBAEJ1C,GAAa,GACbzG,QAAQC,IAAI+I,EAAKE,iBACbF,EAAKE,iBhB/Cc,SAAChK,GACxB,IAAM0F,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACjBC,OAAQ,GACRC,YAAa,qBACbZ,QAAS,CACTgU,WAAYpZ,EAAMoZ,WAClBhQ,aAAcpJ,MAItB,OAAOkG,MAAMtB,GAAYc,GACxBS,KAAKrB,IgBkCFgV,CAAmBtK,GAClBrJ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJyM,KACA5O,GAAY,QAFR,2CADN,uDAKC6F,OAAM,SAACnE,GACNzD,QAAQyD,MAAM,sBAAuBA,OAoIvC,UACI,eAACmF,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,6BAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,QACZzI,GAAG,aACH0I,KAAK,aACLzK,MAAOqP,EAAI4J,WACXvO,SAAU4O,KAEV,cAAC/P,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,8CAKJ,eAACwJ,EAAA,EAAKQ,MAAN,CAAYC,GAAIC,IAAhB,UACA,cAACV,EAAA,EAAKW,MAAN,CAAYC,QAAM,EAACC,GAAI,EAAvB,0BAGA,eAACC,EAAA,EAAD,CACID,GAAI,EADR,UAGI,cAACb,EAAA,EAAKe,QAAN,CACAC,UAAQ,EACRC,YAAY,eACZzI,GAAG,cACH0I,KAAK,cACLzK,MAAOqP,EAAI2J,YACXtO,SAAU4O,KAEV,cAAC/P,EAAA,EAAKe,QAAQK,SAAd,CAAuB5K,KAAK,UAA5B,qDAKJ,eAAC+C,EAAA,EAAMO,OAAP,WACI,cAACC,EAAA,EAAD,CAAQ7B,QAAQ,YAAYJ,QAAS,kBAAIqB,GAAY,SAArD,oBAGA,cAACY,EAAA,EAAD,CAAQ7B,QAAQ,UAAU1B,KAAK,SAA/B,gCAOV,sBAAKe,UAAU,UAAf,UACA,eAACgU,GAAA,EAAD,WACE,cAACA,GAAA,EAAW3S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACyS,GAAA,EAAW3S,KAAZ,CAAiB4S,QAAM,EAAvB,4BAEA,cAACxL,EAAA,EAAD,CAAMyL,QAAM,EAAClU,UAAU,YAAY2I,SAAU,SAACf,GAAKA,EAAEgB,kBAArD,SACE,eAACO,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,eAACb,EAAA,EAAKe,QAAN,CACEO,QAAM,EACNb,GAAK,SACLjI,GAAG,YACHyI,YAAY,OACZE,SAAUlC,GACVxI,MAAOH,EAAMuG,UANf,UAQI,wBAAQpG,MAAO,KAAf,0BACCuH,EAASuD,KAAI,SAACC,GAAD,OACV,wBAAQ/K,MAAO+K,EAAQ3E,UAAvB,SAAmC2E,EAAQC,sBAIrD,cAACX,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAACb,EAAA,EAAKe,QAAN,CACEvI,GAAG,cACHyI,YAAY,eACZE,SAAUlC,GACVxI,MAAOH,EAAMmZ,gBAGjB,cAAC3O,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC9G,EAAA,EAAD,CAAQvD,KAAK,SAASsB,QAAS,WAAK4S,EAAYpU,IAAhD,sBAIF,cAACwK,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC9G,EAAA,EAAD,CAAQvD,KAAK,SAAS0B,QAAQ,YAAYJ,QA1WxC,WACZgG,EAAS,CACPjB,UAAW2S,IACXC,YAAa,KAEf/E,EAAY,CACV7N,UAAW2S,IACXC,YAAa,MAmWL,sBAIF,cAAC3O,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC9G,EAAA,EAAD,CACExC,UAAU,kBACVf,KAAK,SACLsB,QAAS,WACT6X,EAAO,CACH9S,UAAW,GACX6S,WAAY,GACZD,YAAa,KAEf5R,GAAa,GACb1E,GAAY,QAVhB,6BAmBR,qBAAK5B,UAAU,UAAf,SACE,cAACsR,GAAA,EAAD,CAAgBD,UAAWE,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO7D,aAAW,eAAlB,UACE,cAAC8D,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,SAAjB,qBACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,4BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,0BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,0BAGJ,eAACC,GAAA,EAAD,YACIxE,GAAc,EAChBuF,EAAKuB,MAAM/G,GAAOC,GAAaD,GAAOC,GAAcA,IACpDuF,GAAM5I,KAAI,SAAC8H,GAAD,OACR,eAACJ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWN,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAA5C,SACGyG,GAAavG,EAAIxM,aAEpB,cAACqM,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACE,qBAAK5R,UAAU,aAAf,SACE,qBAAKA,UAAU,aAAf,SACE,4BAAI8R,EAAIqG,mBAId,cAACxG,GAAA,EAAD,CAAWC,MAAM,SAAjB,SACE,qBAAK5R,UAAU,aAAf,SACE,qBAAKA,UAAU,aAAf,SACE,4BAAI8R,EAAIoG,oBAId,eAACvG,GAAA,EAAD,CAAWC,MAAM,QAAQxR,MAAO,CAAC2R,QAAQ,GAAzC,UACE,cAACtE,GAAA,EAAD,CAAYlN,QAAS,YAlVjB,SAAC+H,GAAY,IAC5BhD,EAAsCgD,EAAtChD,UAAW6S,EAA2B7P,EAA3B6P,WAAYD,EAAe5P,EAAf4P,YAC5B5R,GAAa,GACb8R,EAAO,CACH9S,YACA6S,aACAD,gBAEJtW,GAAY,QA0UgCkX,CAAchH,IAA1C,SACE,cAAC,KAAD,CACEzC,KAAM,GACN6B,MAAM,gBAGV,cAACzD,GAAA,EAAD,CAAYlN,QAAS,WACjB6P,EAAS0B,EAAIqG,YACbvW,GAAY,WAFhB,SAIE,cAAC,KAAD,CAAOsP,MAAM,MAAM7B,KAAM,YA7BhByC,EAAIqG,eAkCpBrE,GAAY,GACX,cAACpC,GAAA,EAAD,CAAUtR,MAAO,CAAE+Q,OAAQ,GAAK2C,IAAhC,SACE,cAACnC,GAAA,EAAD,CAAW0C,QAAS,SAI1B,cAACC,GAAA,EAAD,UACA,cAAC5C,GAAA,EAAD,UACE,cAAC6C,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,CAAErI,MAAO,MAAOjN,OAAQ,IACpDmV,QAAS,EACTlH,MAAOyF,EAAKhG,OACZS,YAAaA,GACbD,KAAMA,GACNqH,YAAa,CACXC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEVrH,aAjSW,SAACI,EAAOkH,GAC/BhB,GAAQgB,IAiSIC,oBA9RkB,SAACnH,GAC/BmG,GAAeiB,SAASpH,EAAM/F,OAAOzI,MAAO,KAC5C0U,GAAQ,IA6RImB,iBAAkB7H,mBAWnB,I,yCCteR,SAAS6L,GAAT,GAA4B,EAATtG,MAAU,IAAD,MACKrM,mBAAS,IADd,mBAC1BsM,EAD0B,KACbC,EADa,OAECvM,oBAAS,GAFV,gCAGTA,mBAAS,KAHA,mBAG1BwM,EAH0B,KAGpBC,EAHoB,OAICzM,mBAAS,IAJV,mBAI1BsE,EAJ0B,KAIfgM,EAJe,OAKDtQ,mBAAS,MALR,mBAK1B4S,EAL0B,KAKhBC,EALgB,KAc3BC,EAAmB,CACvBhP,YAAa,eACbiP,YAAa,eACbC,SAAU,YACV/O,SAAU,YACVS,SAAU,YACVuO,cAAe,iBACfC,eAAgB,eAChBC,cAAe,iBACfC,cAAe,iBACfC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,WAAY,eAERC,EAAS,CACb,cACA,cACA,WACA,WACA,WACA,gBACA,gBACA,gBACA,iBACA,SACA,SACA,SACA,cAEIC,EAAc,CAClB5P,YAAa,QACbiP,YAAa,QACbC,SAAU,QACV/O,SAAU,QACVS,SAAU,QACVuO,cAAe,QACfC,eAAgB,QAChBC,cAAe,QACfC,cAAe,QACfC,OAAQ,OACRC,OAAQ,OACRC,OAAQ,OACRC,WAAY,QAERG,EACI,OADJA,EAEI,OAFJA,EAGI,OAHJA,EAIQ,OA/DmB,EAkEP3T,mBAAS,CACjC4T,SAAU,cACVzL,IAAK,GACL0L,UAAW,KACXC,QAAS,OAtEsB,mBAkE1Bnb,EAlE0B,KAkEnBwH,EAlEmB,OAwEDH,mBAAS,CACvC4T,SAAU,cACVzL,IAAK,GACL0L,UAAW,KACXC,QAAS,OA5EsB,mBAwE1BhH,EAxE0B,KAwEhBC,EAxEgB,OA8EP/M,oBAAS,GA9EF,mBA8E1BI,EA9E0B,aA+EDJ,mBAAS,KA/ER,mBAgF3BoK,IAhF2B,UAgFlB,YjB1DO,SAAChM,EAASa,GAC9B,IAAMZ,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,WACbZ,QAAS,CACPa,QAAS,cACTR,UACAa,cAIR,OAAOJ,MAAMtB,GAAYc,GACxBS,KAAKrB,KiB4CNsW,CAAgBN,EAAOrO,OAAO,SAAU,IACrCtG,KADH,uCACQ,WAAOjB,GAAP,SAAAF,EAAA,sDACJlE,QAAQC,IAAImE,EAAKE,QAAQgQ,MAAM,EAAE,IACjCxB,EAAe1O,EAAKE,SAFhB,2CADR,uDAKGsD,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,sBAAuBA,QAG3CyD,qBAAU,WACRyJ,KACA1K,GAAe,QACdZ,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJ2S,EAAazS,EAAKf,SADd,2CADN,uDAICuE,OAAM,SAACnE,GACNV,EAAaU,MAAM,uBACnBzD,QAAQyD,MAAM,qCAAsCA,QAErD,CAACkD,IAEJO,qBAAU,WACR/D,OACC,CAAC0P,EAAaQ,IAEjB,IAAMxL,GAAe,SAACE,GAAO,IAAD,EACJA,EAAED,OAAhB1G,EADkB,EAClBA,GAAI/B,EADc,EACdA,MAEVqH,EADM,aAALtF,EACQ,SAAC+G,GAAD,MAAgB,CACvBgS,SAAU9a,EACVqP,IAAK,KAGE,SAACvG,GAAD,mBAAC,eACLA,GADI,kBAEN/G,EAAK/B,OAKN8D,GAAS,SAAC4E,GAAO,IACfoS,EAAkB9G,EAAlB8G,SAAUzL,EAAQ2E,EAAR3E,IAEhBsE,EADcH,EAEJ1P,QACN,SAAC8O,GAAD,OACEA,EAAIkI,GAAU3G,cAAc9H,QAAQgD,EAAI8E,gBAAkB,KAC5D+G,MACA,SAACrW,EAAEsW,GAAH,OAAStW,EAAEwV,cAAgBc,EAAEd,cAAiB,GAAK,OAKnDe,GAAK,uCAAG,WAAO1S,GAAP,SAAA7D,EAAA,sDACZwC,EAAS,CACPyT,SAAU,cACVzL,IAAK,GACL0L,UAAW,KACXC,QAAS,OAEX/G,EAAY,CACV6G,SAAU,cACVzL,IAAK,GACL0L,UAAW,KACXC,QAAS,OAXC,2CAAH,sDAvIsB,GAsJTlN,IAAM5G,SAAS,GAtJN,qBAsJ1BgH,GAtJ0B,MAsJpBwG,GAtJoB,SAuJK5G,IAAM5G,SAAS,GAvJpB,qBAuJ1BiH,GAvJ0B,MAuJbwG,GAvJa,MAyJ3BC,GAAYzG,GAAcO,KAAKmG,IAAI1G,GAAauF,EAAKhG,OAASQ,GAAOC,IAW3E,OACE,gCACE,cAACmC,GAAD,CACAC,IAAOuJ,EACPpX,YAAa,WACXqX,EAAY,SAGd,sBAAKjZ,UAAU,UAAf,UACA,eAACgU,GAAA,EAAD,WACE,cAACA,GAAA,EAAW3S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACyS,GAAA,EAAW3S,KAAZ,CAAiB4S,QAAM,EAAvB,mCAEA,cAACxL,EAAA,EAAD,CAAMyL,QAAM,EAAClU,UAAU,YAAY2I,SAAU,SAACf,GAAKA,EAAEgB,kBAArD,SACE,eAACO,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAACb,EAAA,EAAKe,QAAN,CACEO,QAAM,EACNb,GAAK,SACLjI,GAAG,WACH2I,SAAUlC,GACVxI,MAAOH,EAAMib,SALf,SA9KS,CACnB,cACA,cACA,WACA,WACA,gBACA,kBA+K2BhQ,KAAI,SAACuQ,GAAD,OACb,wBAAQrb,MAAOqb,EAAf,SAA4BrB,EAAiBqB,YAIvD,cAAChR,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAACb,EAAA,EAAKe,QAAN,CACEvI,GAAG,MACHyI,YAAawP,EAAiBna,EAAMib,UACpCpQ,SAAUlC,GACVxI,MAAOH,EAAMwP,QAGjB,cAAChF,EAAA,EAAD,CAAKD,GAAG,OAAOtJ,UAAU,SAAzB,SACA,cAACyI,EAAA,EAAKW,MAAN,sBAEA,cAACG,EAAA,EAAD,CAAKD,GAAG,OAAR,SACA,cAAC,MAAD,GACAkR,aAAW,EACTxa,UAAU,aACVya,SAAU1b,EAAMkb,UAChBS,QAAS3b,EAAMmb,QACfS,gBAAgB,kBALlB,0BAMY,gBANZ,gCAOkB,uBAPlB,0BAQY,SAAAC,GAAI,OAAIlT,GAAa,CAC7BC,OAAO,CACLzI,MAAM0b,EACN3Z,GAAI,kBAXV,8DAea,cAfb,2BAgBa,YAhBb,8BAiBiB,IAjBjB,4BAkBc,QAlBd,2BAmBa,uBAnBb,sBAoBQ,cApBR,qCAqBuB,iBArBvB,MAwBA,cAACsI,EAAA,EAAD,CAAKD,GAAG,OAAOtJ,UAAU,SAAzB,SACA,cAACyI,EAAA,EAAKW,MAAN,oBAEA,cAACG,EAAA,EAAD,CAAKD,GAAG,OAAR,SACA,cAAC,MAAD,GACAkR,aAAW,EACTxa,UAAU,aACVya,SAAU1b,EAAMmb,QAChBW,QAAS9b,EAAMkb,UACfU,gBAAgB,kBALlB,0BAMY,gBANZ,gCAOkB,uBAPlB,0BAQY,SAAAC,GAAI,OAAIlT,GAAa,CAC7BC,OAAO,CACLzI,MAAM0b,EACN3Z,GAAI,gBAXV,8DAea,cAfb,2BAgBa,YAhBb,8BAiBiB,IAjBjB,4BAkBc,QAlBd,2BAmBa,uBAnBb,sBAoBQ,cApBR,qCAqBuB,iBArBvB,MAwBA,cAACsI,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC9G,EAAA,EAAD,CAAQvD,KAAK,SAASsB,QAAS,WAAK4S,EAAYpU,IAAhD,sBAIF,cAACwK,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC9G,EAAA,EAAD,CAAQvD,KAAK,SAAS0B,QAAQ,YAAYJ,QAAS+Z,GAAnD,8BAOR,sBAAKta,UAAU,UAAf,UACE,cAACsR,GAAA,EAAD,CAAgBD,UAAWE,KAAOvR,UAAU,+BAA5C,SACE,eAACwR,GAAA,EAAD,CAAO7D,aAAW,eAAlB,UACE,cAAC8D,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACGmI,EAAO7P,KAAI,SAAC8Q,GAAD,OACV,cAACnJ,GAAA,EAAD,CAAWC,MAAM,SAASxR,MAAO,CAAC,YAAY0Z,EAAYgB,IAA1D,SAAoE5B,EAAiB4B,YAI3F,eAACjJ,GAAA,EAAD,YACIxE,GAAc,EAChBuF,EAAKuB,MAAM/G,GAAOC,GAAaD,GAAOC,GAAcA,IACpDuF,GAAM5I,KAAI,SAAC8H,GAAD,OACR,eAACJ,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAW3R,UAAU,YAAYqR,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAAlE,SACGE,EAAI5H,cAEP,cAACyH,GAAA,EAAD,CAAW3R,UAAU,YAAYqR,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAAlE,SACGE,EAAIqH,cAEP,cAACxH,GAAA,EAAD,CAAW3R,UAAU,YAAYqR,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAAlE,UACoB,IAAjBE,EAAIsH,SACL,cAAC,KAAD,CAAYlI,MAAM,UAAU7B,KAAM,KAClC,cAAC,KAAD,CAAU6B,MAAM,MAAM7B,KAAM,OAE9B,cAACsC,GAAA,EAAD,CAAW3R,UAAU,YAAYqR,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAAlE,SACGE,EAAIzH,WAEP,cAACsH,GAAA,EAAD,CAAW3R,UAAU,YAAYqR,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAAlE,SACGlH,EAAUoH,EAAIhH,UAAUnB,OAE3B,cAACgI,GAAA,EAAD,CAAW3R,UAAU,YAAYqR,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAAlE,SACGE,EAAIyH,gBAEP,cAAC5H,GAAA,EAAD,CAAW3R,UAAU,YAAYqR,UAAU,KAAK+C,MAAM,MAAMxC,MAAM,SAAlE,SACGE,EAAI0H,gBAEP,cAAC7H,GAAA,EAAD,CAAW3R,UAAU,YAAY4R,MAAM,SAAvC,SACE,qBAAK5R,UAAU,aAAf,SACE,qBAAKA,UAAU,aAAf,SACE,4BAAI8R,EAAIuH,sBAId,cAAC1H,GAAA,EAAD,CAAW3R,UAAU,YAAY4R,MAAM,SAAvC,SACwB,OAArBE,EAAIwH,eAAsB,KAC3B,qBAAKtZ,UAAU,aAAf,SACE,qBAAKA,UAAU,aAAf,SACE,4BAAI8R,EAAIwH,uBAId,cAAC3H,GAAA,EAAD,CAAW3R,UAAU,YAAY4R,MAAM,SAAvC,SACE,qBACA5R,UAAU,aACVO,QAAW,kBAAI0Y,EAAYnH,EAAI2H,SAC/BrZ,MAAO,CAAC,OAAS2Z,GACjBtK,IAAKqC,EAAI2H,WAEX,cAAC9H,GAAA,EAAD,CAAW3R,UAAU,YAAY4R,MAAM,SAAvC,SACE,qBACA5R,UAAU,aACVO,QAAW,kBAAI0Y,EAAYnH,EAAI4H,SAC/BtZ,MAAO,CAAC,OAAS2Z,GACjBtK,IAAKqC,EAAI4H,WAEX,cAAC/H,GAAA,EAAD,CAAW3R,UAAU,YAAY4R,MAAM,SAAvC,SACE,qBACA5R,UAAU,aACVO,QAAW,kBAAI0Y,EAAYnH,EAAI6H,SAC/BvZ,MAAO,CAAC,OAAS2Z,GACjBtK,IAAKqC,EAAI6H,WAEX,cAAChI,GAAA,EAAD,CAAW3R,UAAU,YAAY4R,MAAM,SAAvC,SACE,qBACA5R,UAAU,aACVO,QAAW,kBAAI0Y,EAAYnH,EAAI8H,aAC/BxZ,MAAO,CAAC,OAAS2Z,GACjBtK,IAAKqC,EAAI8H,iBAjEE9H,EAAIiJ,UAqEpBjH,GAAY,GACX,cAACpC,GAAA,EAAD,CAAUtR,MAAO,CAAE+Q,OAAQ,GAAK2C,IAAhC,SACE,cAACnC,GAAA,EAAD,CAAW0C,QAAS,cAM9B,cAAC3C,GAAA,EAAD,CAAU1R,UAAU,gCAApB,SACI,cAACuU,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BH,QAAS,GACTlH,MAAOyF,EAAKhG,OACZS,YAAaA,GACbD,KAAMA,GACNqH,YAAa,CACXC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEVrH,aAxNa,SAACI,EAAOkH,GAC/BhB,GAAQgB,IAwNEC,oBArNoB,SAACnH,GAC/BmG,GAAeiB,SAASpH,EAAM/F,OAAOzI,MAAO,KAC5C0U,GAAQ,IAoNEmB,iBAAkB7H,aC5XzB,SAAS8N,GAAT,GAAgC,EAATvI,MAC5B,OAAQ,qBAAKzS,UAAU,gCAAf,SAA+C,+CAG1C,I,0CCMR,SAASib,KAAgB,IAAD,EACL7U,mBAAS,IADJ,mBACtBwM,EADsB,KAChBC,EADgB,OAEDzM,mBAAS,CACnC0M,QAAQ,EACRzC,MAAM,IAJqB,mBAEtBC,EAFsB,KAEdC,EAFc,OAMAnK,mBAAS,MANT,mBAMtB6D,EANsB,KAMdiR,EANc,OAOH9U,mBAAS,IAPN,mBAOtB+J,EAPsB,KAOfC,EAPe,OAQHhK,oBAAS,GARN,mBAQtBI,EARsB,aASWJ,mBAAS,KATpB,mBAStBiS,EATsB,KASRC,EATQ,OAUKlS,mBAAS,IAVd,mBAUtB+U,EAVsB,KAUXC,EAVW,OAWEhV,mBAAS,IAXX,mBAWtBK,EAXsB,KAWbC,EAXa,KAYvB4H,EAAI,uCAAG,WAAOC,EAAK8M,EAAYC,GAAxB,eAAAvX,EAAA,6DACPyK,EAAO,GACXD,EAAIE,QAAJ,uCAAY,WAAOC,GAAP,SAAA3K,EAAA,sDACVyK,EAAKE,EAAQ2M,IAAe3M,EAAQ4M,GAD1B,2CAAZ,uDAFW,SAKE9M,EALF,mFAAH,0DAoBVzH,qBAAU,WAZRxC,GAAY,CAAC,YAAa,gBACvBW,KADH,uCACQ,WAAOjB,GAAP,SAAAF,EAAA,sDACJlE,QAAQC,IAAImE,EAAKE,SACjBuC,EAAYzC,EAAKE,SACjBmK,EAAKrK,EAAKE,QAAS,YAAa,eAAee,KAA/C,uCAAoD,WAAM6J,GAAN,SAAAhL,EAAA,kEAClDuU,EADkD,SAC5BvJ,EAD4B,6EAApD,uDAHI,2CADR,uDAQGtH,OAAM,SAACnE,GACNzD,QAAQyD,MAAM,gCAAiCA,QAKlD,CAACkD,IAEJ,IAAMgK,EAAS,YnBmBK,SAAClL,EAAWd,GAC9B,IAAMC,EAAiB,CACnBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3B5C,KAAM6C,KAAKC,UAAU,CACnBC,OAAQ,GACRC,YAAa,WACbZ,QAAS,CACPa,QAAS,aACTR,UACAa,QAAQ,CACJC,iBAKZ,OAAOL,MAAMtB,GAAYc,GACxBS,KAAKrB,KmBnCN0X,CAActR,EAAS,CAAC,eAAgB,iBAAkB,eAAgB,UACzE/E,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJlE,QAAQC,IAAImE,EAAKE,SACjB0O,EAAQ5O,EAAKE,SAFT,2CADN,uDAKCsD,OAAM,SAACnE,GACNzD,QAAQyD,MAAM,gCAAiCA,OAgBnDyD,qBAAU,WACRyJ,IACa,OAAVvG,GAbH9E,GAAQ8E,EAAQ,CAAC,SAAS,aACvB/E,KADH,uCACQ,WAAOjB,GAAP,SAAAF,EAAA,sDACJuK,EAAKrK,EAAKE,QAAS,SAAU,YAAYe,KAAzC,uCAA8C,WAAM6J,GAAN,SAAAhL,EAAA,kEAC5CqX,EAD4C,SACzBrM,EADyB,6EAA9C,uDADI,2CADR,uDAMGtH,OAAM,SAACnE,GACNzD,QAAQyD,MAAM,gCAAiCA,QAOnD,CAAC2G,IAEH,IAAMrI,EAAc,SAACkP,GACnB,IAAIC,EAAUT,EAAOQ,GACrBP,GAAU,SAACvI,GAAD,mBAAC,eACNA,GADK,kBAEP8I,GAASC,QAIR4C,EAAG,uCAAG,WAAO1N,GAAP,SAAAlC,EAAA,sDACViC,GAAcC,GACbf,KADD,uCACM,WAAOjB,GAAP,SAAAF,EAAA,sDACJyM,IACA5O,EAAY,UACZgB,EAAaf,QAAQ,gBAHjB,2CADN,uDAMC4F,OAAM,SAACnE,GACNzD,QAAQyD,MAAM,mCAAoCA,MAR1C,2CAAH,sDAxEoB,EAoFL0J,IAAM5G,SAAS,GApFV,mBAoFtBgH,EApFsB,KAoFhBwG,EApFgB,OAqFS5G,IAAM5G,SAAS,GArFxB,oBAqFtBiH,GArFsB,MAqFTwG,GArFS,MAuFvBC,GAAYzG,GAAcO,KAAKmG,IAAI1G,GAAauF,EAAKhG,OAASQ,EAAOC,IAW3E,OACE,gCACE,cAAC3L,EAAD,CACEI,KAAMwO,EAAOwC,OACbjR,QAAS,WACP8R,EAAIxD,IAENvO,YAAa,WACXA,EAAY,WAEdpB,MAAM,mBACNuB,KAAK,sBAENuO,EAAOD,KACR,cAACtC,GAAD,CACEjM,KAAMwO,EAAOD,KACb/K,UAAa2E,EACbC,YAAemO,EAAapO,GAC5BhE,aAAgBkK,EAChBtO,QAAS,WACL2O,IACA5O,EAAY,SAEhBA,YAAa,WACXA,EAAY,WAEb,KAEH,sBAAK5B,UAAU,UAAf,UACA,eAACgU,GAAA,EAAD,WACE,cAACA,GAAA,EAAW3S,KAAZ,CAAiBE,KAAK,QAAtB,kBACA,cAACyS,GAAA,EAAW3S,KAAZ,CAAiB4S,QAAM,EAAvB,6BAEA,cAACxL,EAAA,EAAD,CAAMyL,QAAM,EAAClU,UAAU,YAAY2I,SAAU,SAACf,GAAKA,EAAEgB,kBAArD,SACE,eAACO,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,eAACb,EAAA,EAAKe,QAAN,CACEO,QAAM,EACNb,GAAK,SACLjI,GAAG,YACH2I,SAAU,SAAChC,GACTsT,EAAWtT,EAAED,OAAOzI,QAEtBA,MAAO+K,EAPT,UASE,wBAAQ/K,MAAM,GAAd,kCACGuH,EAASuD,KAAI,SAACuE,GAAD,OACV,wBAAQrP,MAAOqP,EAAIjJ,UAAnB,SAA+BiJ,EAAIrE,sBAI7C,cAACX,EAAA,EAAD,CAAKD,GAAG,OAAR,SACE,cAAC9G,EAAA,EAAD,CACExC,UAAU,kBACVf,KAAK,SACLsB,QAAS,WACP6P,EAAS,MACTxO,EAAY,SALhB,6BAcR,qBAAK5B,UAAU,UAAf,SACE,cAACsR,GAAA,EAAD,CAAgBD,UAAWE,KAA3B,SACE,eAACC,GAAA,EAAD,CAAO7D,aAAW,eAAlB,UACE,cAAC8D,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAwB,0CACxB,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,uCAC1B,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,wCAC1B,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA0B,6CAC1B,cAACD,GAAA,EAAD,CAAWC,MAAM,QAAjB,SAAyB,+CAG7B,eAACC,GAAA,EAAD,YACIxE,GAAc,EAChBuF,EAAKuB,MAAM/G,EAAOC,GAAaD,EAAOC,GAAcA,IACpDuF,GAAM5I,KAAI,SAAC8H,EAAK7F,GAAN,OACR,eAACyF,GAAA,EAAD,WACA,cAACC,GAAA,EAAD,CAAWC,MAAM,OAAjB,SAAyByG,EAAapO,KACpC,cAAC0H,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BE,EAAInD,iBAC/B,cAACgD,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA4BE,EAAIjL,MAAOmD,KAAI,SAACI,GAAD,OACzC,gCAAM+Q,EAAU/Q,GAAhB,IAAuB,+BAEzB,cAACuH,GAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BE,EAAI/G,aAC/B,cAAC,KAAD,CAAiB3K,MAAO,CAAC8Q,MAAM,aAC9B,cAAC,KAAD,CAAc9Q,MAAO,CAAC8Q,MAAM,WAE7B,eAACS,GAAA,EAAD,CAAWC,MAAM,QAAQxR,MAAO,CAAC2R,QAAQ,GAAzC,UACE,cAACtE,GAAA,EAAD,CAAYlN,QAAS,WACjB6P,EAAS0B,EAAI7L,cACbrE,EAAY,SAFhB,SAIE,cAAC,KAAD,CACEyN,KAAM,GACN6B,MAAM,gBAGV,cAACzD,GAAA,EAAD,CAAYlN,QAAS,WACjB6P,EAAS0B,EAAI7L,cACbrE,EAAY,WAFhB,SAIE,cAAC,KAAD,CAAOsP,MAAM,MAAM7B,KAAM,YAxBhByC,EAAIzH,aA6BpByJ,GAAY,GACX,cAACpC,GAAA,EAAD,CAAUtR,MAAO,CAAE+Q,OAAQ,GAAK2C,IAAhC,SACE,cAACnC,GAAA,EAAD,CAAW0C,QAAS,SAI1B,cAACC,GAAA,EAAD,UACA,cAAC5C,GAAA,EAAD,UACE,cAAC6C,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,CAAErI,MAAO,MAAOjN,OAAQ,IACpDmV,QAAS,EACTlH,MAAOyF,EAAKhG,OACZS,YAAaA,GACbD,KAAMA,EACNqH,YAAa,CACXC,WAAY,CAAE,aAAc,iBAC5BC,QAAQ,GAEVrH,aA1IW,SAACI,EAAOkH,GAC/BhB,EAAQgB,IA0IIC,oBAvIkB,SAACnH,GAC/BmG,GAAeiB,SAASpH,EAAM/F,OAAOzI,MAAO,KAC5C0U,EAAQ,IAsIImB,iBAAkB7H,mBCjORsO,KAmD1B,SAASC,GAAT,GAA8C,IAAtB5c,EAAqB,EAArBA,SAAa6c,EAAQ,4BAErClc,EADeD,qBAAWd,GACCM,MAC7BT,EAAOkB,EAAYlB,KACnBE,EAAUgB,EAAYhB,QAC1B,OACE,cAAC,IAAD,2BACMkd,GADN,IAEEC,OAAQ,SAACha,GAAD,OACNrD,EACE,sBAAK0B,UAAU,QAAf,UACI,cAAC,GAAD,IACF,cAACX,EAAD,IACA,qBAAK4B,GAAG,eAAejB,UAAWxB,EAAQ,yBAAyB,sBAAnE,SACGwO,IAAM4O,aAAa/c,EAAU,CAAEgd,OAAQla,EAAM8Q,MAAMoJ,cAIxD,cAAC,IAAD,CACE9D,GAAI,CACF1B,SAAU,IACVtX,MAAO,CAAE+c,KAAMna,EAAMqR,iBASnC,SAAS+I,GAAT,GAA6C,IAAtBld,EAAqB,EAArBA,SAAa6c,EAAQ,4BAGtCpd,EAFiBiB,qBAAWd,GACCM,MACVT,KACvB,OACE,cAAC,IAAD,2BACMod,GADN,IAEEC,OAAQ,gBAAG3I,EAAH,EAAGA,SAAH,OACN1U,EACE,cAAC,IAAD,CACEyZ,GAAI,CACF1B,SAAU,QACVtX,MAAO,CAAE+c,KAAM9I,MAIrB,cAAC,GAAD,IACEnU,OAOKmd,OAzFR,WACL,OAEE,aADA,CACC,KAAD,UACE,eAAC,IAAD,WACE,cAACP,GAAD,CAAc7b,KAAK,QAAnB,SACE,cAAC,GAAD,MAEF,cAAC6b,GAAD,CAAc7b,KAAK,sBAAnB,SACE,cAAC0X,GAAD,MAEF,cAACmE,GAAD,CAAc7b,KAAK,WAAnB,SACE,cAAC4S,GAAD,MAEF,cAACiJ,GAAD,CAAc7b,KAAK,SAAnB,SACE,cAACoY,GAAD,MAEF,cAACyD,GAAD,CAAc7b,KAAK,WAAnB,SACE,cAACmZ,GAAD,MAEF,cAAC0C,GAAD,CAAc7b,KAAK,WAAnB,SACE,cAACob,GAAD,MAEF,cAACS,GAAD,CAAc7b,KAAK,eAAnB,SACE,cAACqb,GAAD,MAEF,cAACc,GAAD,CAAanc,KAAK,IAAlB,SACE,cAACsS,GAAD,YCrDJ+J,GAAc5J,SAASC,eAAe,QAC5C4J,IAASP,OACP,cAAC,EAAD,UACE,cAAC,aAAD,UACE,cAAC,GAAD,QAGJM,M","file":"static/js/main.ad716ecf.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  auth: true,\r\n  user: \"huajun\",\r\n  toggled: false\r\n};\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    switch (action.type) {\r\n      case \"setAuth\":\r\n        return {\r\n          ...state,\r\n          auth: action.value\r\n        };\r\n      case \"setUser\":\r\n        return {\r\n          ...state,\r\n          user: action.value\r\n        };\r\n      case \"setToggled\":\r\n        return {\r\n          ...state,\r\n          toggled: !state.toggled\r\n        };\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { store, StateProvider };\r\n","import {\r\n  SidebarContent,\r\n  ProSidebar,\r\n  Menu,\r\n  MenuItem,\r\n  SubMenu\r\n} from \"react-pro-sidebar\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport { List } from \"react-bootstrap-icons\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { store } from \"../store.js\";\r\nimport { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport CodeIcon from '@material-ui/icons/Code';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport LocalParkingIcon from '@material-ui/icons/LocalParking';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nexport function NavBar() {\r\n  const storeContext = useContext(store);\r\n  const { dispatch } = storeContext;\r\n  const globalState = storeContext.state;\r\n  const {toggled, user}  = globalState;\r\n  let history = useHistory();\r\n  const logout = () => {\r\n    dispatch({\r\n      type: \"setAuth\",\r\n      value: false\r\n    });\r\n    dispatch({\r\n      type: \"setUser\",\r\n      value: \"\"\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n  const direct = (path) => {\r\n    console.log(\"clicked\", path);\r\n    history.push(path);\r\n  };\r\n  const toggleSideBar = () => {\r\n    dispatch({\r\n      type: \"setToggled\"\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"h-100 fixed-top clickThrough\">\r\n      <ProSidebar\r\n        className=\"clickAble navbar-default navbar-static-top sideBar\"\r\n        collapsed={toggled}\r\n        width=\"250px\"\r\n        //collapsedWidth=\"px\"\r\n      >\r\n        <SidebarContent>\r\n          <Menu iconShape=\"circle\">\r\n            <MenuItem \r\n              style={{\"background\":\"#2c3b41\",\"height\":\"60px\", \"pointer-events\":\"none\"}}\r\n              className=\"d-flex justify-content-center align-items-center\">\r\n              <div style={{\"padding-top\":\"10px\", \"color\":\"white\"}}>\r\n                <h5>Admin</h5>\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem \r\n              icon={<AccountCircleIcon fontSize='large'/>}\r\n              style={{\"pointer-events\":\"none\", \"border-bottom\":\"1px solid gray\"}}>\r\n              <div style={{ \"color\":\"white\"}}>\r\n                Welcome, {user}\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<HomeIcon onClick={()=>direct(\"/home\")}/>}>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<InfoIcon onClick={()=>direct(\"/project\")} />}>\r\n              <div onClick={()=>direct(\"/project\")}>\r\n                Project\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<CodeIcon onClick={()=>direct(\"/regex\")} />}>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<StorageIcon onClick={()=>direct(\"/records\")} />}>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n                Exit/Entry Records\r\n              </div>\r\n            </MenuItem>\r\n            <MenuItem icon={<LocalParkingIcon onClick={()=>direct(\"/parking\")} />}>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </MenuItem>\r\n            <SubMenu title=\"Access\" icon={<PaymentIcon/>}>\r\n              <MenuItem  onClick={()=>direct(\"/accessRules\")} >Access Rules</MenuItem>\r\n              <MenuItem>Tracking</MenuItem>\r\n            </SubMenu>\r\n          </Menu>\r\n        </SidebarContent>\r\n      </ProSidebar>\r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" className={\"clickAble navBar\"+(toggled?\" navBar-collapsed\":\" navBar-expand\")}>\r\n        <Navbar.Brand \r\n        className=\"sideBar\" \r\n        onClick={toggleSideBar}>\r\n          <List />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"nav-dropdown\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto nav-dropdown\">\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/home\")}>\r\n                Home\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/project\")}>\r\n                Project\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/regex\")}>\r\n                Plate Regex\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/records\")}>\r\n                Log Records\r\n              </div>\r\n            </Nav.Link>\r\n            <Nav.Link>\r\n              <div onClick={()=>direct(\"/parking\")}>\r\n                Parking Records\r\n              </div>\r\n            </Nav.Link>\r\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item data-value=\"/home\" onClick={direct}>\r\n                Action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Navbar.Text>\r\n            <Nav.Link onClick={logout}>Signout</Nav.Link>\r\n          </Navbar.Text>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { NavBar };\r\n","import { Button, Modal } from \"react-bootstrap\";\r\n\r\nexport function ConfirmModal(props) {\r\n  let toggleModal = props.toggleModal;\r\n  let success = props.success;\r\n  let hide = props.hide;\r\n  let body = props.body;\r\n  let title = props.title;\r\n  return (\r\n    <Modal show={hide} onHide={toggleModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{body}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={toggleModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={()=>{\r\n          success();\r\n        }}>\r\n          Confirm\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { ConfirmModal};\r\n","import { Button, Modal, Form } from \"react-bootstrap\";\r\nimport {useState} from 'react';\r\n\r\nexport function QueryModal(props) {\r\n    let toggleModal = props.toggleModal;\r\n    let success = props.success;\r\n    let hide = props.hide;\r\n    let body = props.body;\r\n    let title = props.title;\r\n    const [value,setValue] = useState(\"\");\r\n    const handleChange = (e) =>{\r\n      setValue(e.target.value);\r\n    }\r\n    const exit = () =>{\r\n      setValue(\"\");\r\n      toggleModal();\r\n    }\r\n    return (\r\n      <Modal show={hide} onHide={exit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Label>{body}</Form.Label>\r\n            <Form.Control \r\n            value={value}\r\n            onChange={handleChange}\r\n            />\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={exit}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>{\r\n              success(value);\r\n              exit();\r\n              }}>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default {QueryModal};","import { Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nconst alertSubject = new Subject();\r\nconst defaultId = 'default-alert';\r\n\r\nexport const alertService = {\r\n    onAlert,\r\n    success,\r\n    error,\r\n    info,\r\n    warn,\r\n    alert,\r\n    clear\r\n};\r\n\r\nexport const alertType = {\r\n    success: 'success',\r\n    error: 'danger',\r\n    info: 'info',\r\n    warning: 'warning'\r\n}\r\n\r\n// enable subscribing to alerts observable\r\nfunction onAlert(id = defaultId) {\r\n    return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\r\n}\r\n\r\n// convenience methods\r\nfunction success(message, options) {\r\n    alert({ ...options, type: alertType.success, message });\r\n}\r\n\r\nfunction error(message, options) {\r\n    alert({ ...options, type: alertType.error, message });\r\n}\r\n\r\nfunction info(message, options) {\r\n    alert({ ...options, type: alertType.info, message });\r\n}\r\n\r\nfunction warn(message, options) {\r\n    alert({ ...options, type: alertType.warning, message });\r\n}\r\n\r\n// core alert method\r\nfunction alert(alert) {\r\n    alert.id = alert.id || defaultId;\r\n    alertSubject.next(alert);\r\n}\r\n\r\n// clear alerts\r\nfunction clear(id = defaultId) {\r\n    alertSubject.next({ id });\r\n}","import { alertService } from './index.js';\r\n\r\nconst server_URL = process.env.REACT_APP_SERVER_URL;\r\n\r\nconst returnFunc = async (response) => {\r\n    const data = await response.json();\r\n    if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.content) || response.status;\r\n        return Promise.reject(error);\r\n    }\r\n    return data;\r\n}\r\n\r\nconst getProjects = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"project\",\r\n            columns\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getMovementLogs = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"movementLog\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getSpecialPlate = (columns, filters) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"specialPlate\",\r\n            columns,\r\n            filters\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAccessRule = (projectID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"accessRule\",\r\n            columns,\r\n            filters:{\r\n                projectID\r\n            }\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createSpecialPlate\",\r\n          content: state\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delSpecialPlate = (matchPlate) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteSpecialPlate\",\r\n            content: {\r\n                matchPlate\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateSpecialPlate = (state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifySpecialPlate\",\r\n            content: {\r\n            matchPlate: state.matchPlate,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst addProject = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"createProject\",\r\n          content: {\r\n            projectName: \"\",\r\n            projectType: \"\",\r\n            location: \"\",\r\n            contactNumber: \"\",\r\n            maCompany: \"\",\r\n            equipManu: \"\"\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGate = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getTable\",\r\n            content: {\r\n            objName: \"gate\",\r\n            columns,\r\n            filters:{\r\n                projectID: ID\r\n            }\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDevice = (ID, columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"device\",\r\n            columns,\r\n            filters:{\r\n              gateID: ID\r\n            }\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAllDevice = (columns) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getTable\",\r\n          content: {\r\n            objName: \"device\",\r\n            columns\r\n          }\r\n        })\r\n      };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createGate = (projectID,values) =>{\r\n    const newGateReq = {\r\n        ...values,\r\n        projectID\r\n    };\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createGate\",\r\n            content: newGateReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createDevice = (gateID, values) =>{\r\n    const newDeviceReq = {\r\n        ...values,\r\n        gateID\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createDevice\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getProjectInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getProject\",\r\n            content: {\r\n            projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delProject = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteProject\",\r\n            content: {\r\n                projectID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateProjectInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyProject\",\r\n            content: {\r\n            projectID: ID,\r\n            modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getBusinessInfo = (ID) =>{\r\n    //Pending Function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateBusinessInfo = (ID, state) =>{\r\n    //Pending function\r\n    const requestOptions = {\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getGateInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delGate = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"deleteGate\",\r\n            content: {\r\n                gateID: ID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateGateInfo = (ID, state) =>{\r\n    console.log(state);\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyGate\",\r\n            content: {\r\n                gateID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getDeviceInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delDevice = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteDevice\",\r\n          content: {\r\n              deviceID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateDeviceInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyDevice\",\r\n            content: {\r\n                deviceID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst createAccessRule = (values) =>{\r\n    const newDeviceReq = {\r\n        ...values\r\n    }\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"createAccessRule\",\r\n            content: newDeviceReq\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getAccessRuleInfo = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"getAccessRule\",\r\n          content: {\r\n            accessRuleID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst updateAccessRuleInfo = (ID, state) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"modifyAccessRule\",\r\n            content: {\r\n                accessRuleID: ID,\r\n                modifyParams: state\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getObjectTypes = (obj) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getObjectTypes\",\r\n            content: {\r\n                objName: obj\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getWhitelistTags = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getWhitelistTags\"\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst openGate = (gateID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"openGate\",\r\n            content:{\r\n                gateID\r\n            }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst getNewDevices = () =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            authID: \"\",\r\n            serviceName: \"getNewDevice\"\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nconst delAccessRule = (ID) =>{\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          authID: \"\",\r\n          serviceName: \"deleteAccessRule\",\r\n          content: {\r\n              accessRuleID: ID\r\n          }\r\n        })\r\n    };\r\n    return fetch(server_URL, requestOptions)\r\n    .then(returnFunc)\r\n}\r\n\r\nexport {\r\n    getGate,\r\n    getDevice,\r\n    createGate,\r\n    createDevice,\r\n    getProjectInfo,\r\n    updateProjectInfo,\r\n    getBusinessInfo,\r\n    updateBusinessInfo,\r\n    getGateInfo,\r\n    updateGateInfo,\r\n    getDeviceInfo,\r\n    updateDeviceInfo,\r\n    getProjects,\r\n    addProject,\r\n    delProject,\r\n    delGate,\r\n    delDevice,\r\n    getMovementLogs,\r\n    getSpecialPlate,\r\n    delSpecialPlate,\r\n    updateSpecialPlate,\r\n    addSpecialPlate,\r\n    getAccessRule,\r\n    createAccessRule,\r\n    getAccessRuleInfo,\r\n    updateAccessRuleInfo,\r\n    getObjectTypes,\r\n    getWhitelistTags,\r\n    openGate,\r\n    getAllDevice,\r\n    getNewDevices,\r\n    delAccessRule\r\n};","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport { alertService, createDevice, getDeviceInfo, updateDeviceInfo, getGate, getProjects } from '../services/index.js';\r\n\r\nexport function DeviceModal(props) {\r\n    let {hide, gateID, toggleModal, success, deviceID, deviceTypes } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [projects, setProjects] = useState([]);\r\n    const [curProject, setCurProject] = useState(\"\");\r\n    const [gates, setGates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    if(deviceID===null){\r\n      setState({\r\n        gateID,\r\n        deviceID: \"\",\r\n        deviceName: \"\",\r\n        deviceType: \"\",\r\n        deviceCarpark: \"\",\r\n        manufacturer: \"\",\r\n        manufacturerCode: \"\",\r\n        direction: \"\",\r\n        isPrimaryDevice: false,\r\n        isGateControl: false\r\n      });\r\n    }else{\r\n      getDeviceInfo(deviceID)\r\n      .then(async (data) => {\r\n        console.log(data.message);\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Device, There was an error!\", error);\r\n      });\r\n      if(gateID===null){\r\n        handleChange({\r\n          target:{\r\n            id: \"gateID\",\r\n            value: \"\"\r\n          }\r\n        });\r\n        getProjects([\"projectID\",\"projectName\"])\r\n        .then(async (data) => {\r\n          setCurProject(\"\");\r\n          setProjects(data.content);\r\n        })\r\n        .catch((error) => {\r\n          alertService.error(\"There was an error!\");\r\n          console.error(\"Get Projects, There was an error!\", error);\r\n        });\r\n      }\r\n    }\r\n  }, [dummy,hide]);\r\n\r\n  useEffect(()=>{\r\n    handleChange({\r\n      target:{\r\n        id: \"gateID\",\r\n        value: \"\"\r\n      }\r\n    });\r\n    if(curProject === null)setGates([]);\r\n    else{\r\n      getGate(curProject,[\"gateID\",\"gateName\"])\r\n      .then(async (data) => {\r\n        setGates(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gates, There was an error!\", error);\r\n      });\r\n    }\r\n  },[curProject])\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(deviceID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    let tempState = state;\r\n    delete tempState[\"deviceStatus\"];\r\n    updateDeviceInfo(deviceID, tempState)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createDevice(gateID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Device, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{deviceID===null?\"Add Device\":\"Edit Device\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id =\"deviceModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device ID\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >{deviceID===null?\r\n                        <div><Form.Control\r\n                        required\r\n                        placeholder=\"ID\"\r\n                        id=\"deviceID\"\r\n                        name=\"deviceID\"\r\n                        type =\"text\"\r\n                        value={state.deviceID}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device ID is a required field.\r\n                        </Form.Control.Feedback></div>:<Form.Control type=\"text\" placeholder={state.deviceID} readOnly />}\r\n                    </Col>\r\n                    </Form.Group>\r\n                    {gateID===null?\r\n                    <div>\r\n                      <Form.Group as={Row}>\r\n                        <Form.Label column sm={6}>\r\n                            Project\r\n                        </Form.Label>\r\n                        <Col\r\n                            sm={6}\r\n                        >\r\n                          <Form.Control\r\n                            custom\r\n                            required\r\n                            as=\"select\"\r\n                            id=\"project\"\r\n                            name=\"project\"\r\n                            value={curProject}\r\n                            onChange={(e)=>{\r\n                              setCurProject(e.target.value);\r\n                            }}\r\n                            >\r\n                            <option value={\"\"}>--Select Project--</option>\r\n                            {projects.map((project)=>(\r\n                              <option value={project.projectID}>{project.projectName}</option>\r\n                            ))}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            Project is a required field.\r\n                          </Form.Control.Feedback>\r\n                        </Col>\r\n                      </Form.Group>\r\n                      <Form.Group as={Row}>\r\n                        <Form.Label column sm={6}>\r\n                            Gate\r\n                        </Form.Label>\r\n                        <Col\r\n                            sm={6}\r\n                        >\r\n                          <Form.Control\r\n                            disabled = {curProject===\"\"}\r\n                            custom\r\n                            required\r\n                            as=\"select\"\r\n                            id=\"gateID\"\r\n                            name=\"gateID\"\r\n                            value={state.gateID}\r\n                            onChange={handleChange}\r\n                            >\r\n                            <option value={\"\"}>--Select Project--</option>\r\n                            {gates.map((gate)=>(\r\n                              <option value={gate.gateID}>{gate.gateName}</option>\r\n                            ))}\r\n                          </Form.Control>\r\n                          <Form.Control.Feedback type=\"invalid\">\r\n                            Gate is a required field.\r\n                          </Form.Control.Feedback>\r\n                        </Col>\r\n                      </Form.Group>\r\n                      </div>\r\n                      :null\r\n                    }\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"deviceName\"\r\n                        name=\"deviceName\"\r\n                        value={state.deviceName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"deviceType\"\r\n                        name=\"deviceType\"\r\n                        value={state.deviceType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        {deviceTypes.map((type)=>(\r\n                          <option value={type.id}>{type.name}</option>\r\n                        ))}\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Carpark\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Carpark\"\r\n                        id=\"deviceCarpark\"\r\n                        name=\"deviceCarpark\"\r\n                        value={state.deviceCarpark}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Capark is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Manufacturer\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer\"\r\n                        id=\"manufacturer\"\r\n                        name=\"manufacturer\"\r\n                        value={state.manufacturer}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Manufacturer Code\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer Code\"\r\n                        id=\"manufacturerCode\"\r\n                        name=\"manufacturerCode\"\r\n                        value={state.manufacturerCode}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer Code is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Direction\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Direction\"\r\n                        id=\"direction\"\r\n                        name=\"direction\"\r\n                        value={state.direction}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Direction is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Primary Device?\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isPrimaryDevice}\r\n                        type=\"switch\"\r\n                        id=\"isPrimaryDevice\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Control Gate?\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isGateControl}\r\n                        type=\"switch\"\r\n                        id=\"isGateControl\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"deviceModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { DeviceModal };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport TimeField from 'react-simple-timefield';\r\nimport { alertService, createGate, getGateInfo, updateGateInfo, getWhitelistTags } from '../services/index.js';\r\n\r\nexport function GateModal(props) {\r\n    let {hide, gateID, toggleModal, success, newState, projectID, gateTypes } = props;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [whiteListTags, setWhiteListTags] = useState([]);\r\n    const newInitialState = {\r\n      gateName: \"\",\r\n      gateType: \"\",\r\n      isChargeable: false,\r\n      ledOnTime: \"00:00:00\",\r\n      ledOffTime: \"00:00:00\",\r\n      allowedTypes: []\r\n    };\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    console.log(\"gateModal\", gateID, projectID, newState);\r\n    if(!hide){\r\n      setState(newInitialState);\r\n    }else if(newState){\r\n      setState(newInitialState);\r\n    }else{\r\n      getGateInfo(gateID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n        console.log(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Gate, There was an error!\", error);\r\n      });\r\n    }\r\n    getWhitelistTags()\r\n    .then(async (data) => {\r\n      setWhiteListTags(data.message.whitelistTags);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get WhiteList Tags, There was an error!\", error);\r\n    });\r\n  }, [dummy,hide]);\r\n\r\n  const handleTagChange = (e) =>{\r\n    let {id, value} = e.target;\r\n    let idx = state.allowedTypes.indexOf(id);\r\n    if(idx==-1){\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        allowedTypes: prevState.allowedTypes.concat([id])\r\n      }));\r\n    }else{\r\n      let tempList = state.allowedTypes;\r\n      tempList.splice(idx,1);\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        allowedTypes: tempList\r\n      }));\r\n    }\r\n  }\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    console.log(typeof state[id]);\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(newState) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateGateInfo(gateID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createGate(projectID, state)\r\n    .then(async (data) => {\r\n      setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Gate, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n      setValidated(false);\r\n      toggleModal();}}>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{newState?\"Add Gate\":\"Edit Gate\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id='gateModal' noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"gateName\"\r\n                        name=\"gateName\"\r\n                        value={state.gateName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"gateType\"\r\n                        name=\"gateType\"\r\n                        value={state.gateType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        {gateTypes.map((type)=>(\r\n                          <option value={type.id}>{type.name}</option>\r\n                        ))}\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Charge fee for entry\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                    Time to turn on the LPR camera’s LED\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex\"\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOnTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOnTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOnTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Time to turn off the LPR\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        className=\"align-items-center d-flex\"\r\n                        sm={6}\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOffTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <Form.Control\r\n                              required\r\n                              id = \"ledOffTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOffTime\"\r\n                              placeholder=\"Time\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Whitelist Tags\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                      <Col\r\n                          sm={6}\r\n                      >\r\n                        {whiteListTags.map((tag, index)=>(\r\n                            <div>{\r\n                                index%2==0?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={tag}\r\n                                checked={state.allowedTypes.includes(tag)}\r\n                                onChange={handleTagChange}\r\n                                label={tag}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                      </Col>\r\n                      <Col\r\n                          sm={6}\r\n                      >\r\n                        {whiteListTags.map((tag, index)=>(\r\n                            <div>{\r\n                                index%2==1?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={tag}\r\n                                checked={state.allowedTypes.includes(tag)}\r\n                                onChange={handleTagChange}\r\n                                label={tag}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                      </Col>\r\n                    </Form.Group>\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"gateModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { GateModal };\r\n","import React from 'react';\r\n\r\nimport { alertService, alertType } from '../services/index.js';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nexport class AlertGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            alerts: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // subscribe to new alert notifications\r\n        this.subscription = alertService.onAlert(this.props.id)\r\n            .subscribe(alert => {\r\n                // add alert to array\r\n                this.setState({ alerts: [...this.state.alerts, alert] });\r\n\r\n                // auto close alert if required\r\n                setTimeout(() => this.removeAlert(alert), 3000);\r\n            });\r\n\r\n        // clear alerts on location change\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // unsubscribe & unlisten to avoid memory leaks\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert) {\r\n        this.setState({ alerts: this.state.alerts.filter(x => x !== alert) })\r\n    }\r\n\r\n    render() {\r\n        const { alerts } = this.state;\r\n        if (!alerts.length) return null;\r\n        return (\r\n            <div className=\"alertGrp\">\r\n                {console.log(alerts),\r\n                alerts.map((alert,idx) =>\r\n                    <Alert \r\n                    key = {idx} \r\n                    variant={alert.type}\r\n                    dismissible = {true}\r\n                    onClose={()=>{this.removeAlert(alert)}}>\r\n                        {alert.message}\r\n                    </Alert>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default {AlertGroup} ;","import {IconButton} from '@material-ui/core';\r\n\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nexport function TablePaginationActions(props) {\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div style={{flexShrink:0, right:0}}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        <FirstPageIcon />\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n         <KeyboardArrowLeft />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        <KeyboardArrowRight />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        <LastPageIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default {TablePaginationActions};","import { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, createAccessRule, getAccessRuleInfo, updateAccessRuleInfo, getGate } from '../services/index.js';\r\n\r\nexport function RulesModal(props) {\r\n    let {hide, accessRuleID, projectID, success, projectName, toggleModal } = props;\r\n    let cnt = 0;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [gates, setGates] = useState([]);\r\n    const [curGates, setCurGates] = useState({});\r\n    const [initialGates, setInitialGates] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const func = async (val) =>{\r\n        let temp = {};\r\n        val.forEach(async (element)=>{\r\n            temp[element[\"gateID\"]] = false;\r\n        });\r\n        initialGates.forEach(async (element)=>{\r\n            console.log(element);\r\n            temp[element] = true;\r\n        });\r\n        return await temp;\r\n    };\r\n    const loadGates = () =>{\r\n        getGate(projectID, [\"gateID\", \"gateName\"])\r\n        .then(async (data) => {\r\n            setGates(data.content);\r\n            func(data.content).then(async(list)=>{\r\n                setCurGates(await list);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            alertService.error(\"There was an error!\");\r\n            console.error(\"Get Gate Rule, There was an error!\", error);\r\n        });\r\n    }\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    setTimeout(()=>setLoading(false), 600);\r\n    if(accessRuleID===null){\r\n      setState({\r\n        projectID,\r\n        accessRuleName: \"\",\r\n        isChargeable: false,\r\n        gates: []\r\n      });\r\n      setInitialGates([]);\r\n    }else{\r\n      getAccessRuleInfo(accessRuleID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n        setInitialGates(data.message.gates);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Access Rule, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    setState((prevState)=>({\r\n        ...prevState,\r\n        gates: (Object.keys(curGates)).filter((gate)=>curGates[gate])\r\n      }));\r\n  },[curGates]);\r\n\r\n  useEffect(()=>{\r\n    loadGates();\r\n  },[initialGates]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleGateChange = (e) =>{\r\n    let id = e.target.id;\r\n    setCurGates((prevState) => ({\r\n      ...prevState,\r\n      [id]: !prevState[id]\r\n    }));\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(accessRuleID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    updateAccessRuleInfo(accessRuleID, state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Access Rule, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    createAccessRule(state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Access Rule, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n      {loading?\r\n      <Row className=\"d-flex justify-content-center\" style={{margin:\"200px\"}}>\r\n      <Spinner size=\"lg\" animation=\"border\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n    </Row>:\r\n        <div>\r\n            <Modal.Header\r\n             closeButton>\r\n                <Modal.Title>{accessRuleID===null?\"Add Rule\":\"Edit Rule\"}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Form id =\"ruleModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Project Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={projectName} readOnly />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Access Rule Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"accessRuleName\"\r\n                        name=\"accessRuleName\"\r\n                        value={state.accessRuleName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Rule Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gates\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row}>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        {gates.map((gate, index)=>(\r\n                            <div>{\r\n                                index%2==0?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={gate.gateID}\r\n                                checked={curGates[gate.gateID]}\r\n                                onChange={handleGateChange}\r\n                                label={gate.gateName}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                    </Col>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        {gates.map((gate, index)=>(\r\n                            <div>{\r\n                                index%2==1?\r\n                            <Form.Check \r\n                                custom\r\n                                type={'checkbox'}\r\n                                id={gate.gateID}\r\n                                checked={curGates[gate.gateID]}\r\n                                onChange={handleGateChange}\r\n                                label={gate.gateName}\r\n                            />:null\r\n                            }</div>\r\n                        ))}\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Is Chargeable\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n            </Form>\r\n          </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n            Cancel\r\n          </Button>\r\n          <Button form =\"ruleModal\" variant=\"primary\" type=\"submit\">\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n        </div>\r\n      }\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { RulesModal };\r\n","import {Modal} from 'react-bootstrap';\r\n\r\nexport function ImageModal (props){\r\n    let {toggleModal, src} = props;\r\n    return(\r\n    <Modal size=\"lg\" centered show={src===null?false:true} onHide={toggleModal}>\r\n        <img src={src}/>\r\n    </Modal>\r\n    );\r\n}\r\n\r\nexport default {ImageModal};","import React, { useState, useContext, useEffect } from \"react\";\r\nimport {Jumbotron, Row, Col, Card } from 'react-bootstrap';\r\nimport {getAllDevice, getObjectTypes, alertService, getGateInfo, getNewDevices} from '../services/index.js';\r\nimport {IconButton, Typography  , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, TableHead, TableRow, Paper, CardActions } from '@material-ui/core';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport { TablePaginationActions , DeviceModal} from \"../components/index.js\";\r\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nexport function Home() {\r\n  const [rows, setRows] = useState([]);\r\n  const [dummy, setDummy] = useState(null);\r\n  const [devices, setDevices] = useState([]);\r\n  const [newDevices, setNewDevices] = useState([]);\r\n  const [deviceTypes, setDeviceTypes] = useState([]);\r\n  const [deviceTypeNames, setDeviceTypeNames] = useState({});\r\n  const [curID, setCurID] = useState(null);\r\n  const [toggle, setToggle] = useState({\r\n    edit: false\r\n  });\r\n  let history = useHistory();\r\n\r\n  const reload = () =>{\r\n    getAllDevice([\"deviceID\", \"deviceName\", \"deviceType\",\"deviceStatus\", \"gateID\"])\r\n    .then(async (data) => {\r\n      setDevices(data.content.filter((device)=>device.deviceStatus!==\"online\"&&device.gateID !== null));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get All Device, there was an error!\", error);\r\n    });\r\n    getNewDevices()\r\n    .then(async (data) => {\r\n      setNewDevices(data.message);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get All Device, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n    getObjectTypes(\"device\")\r\n    .then(async (data) => {\r\n      setDeviceTypeNames(data.message);\r\n      setDeviceTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Device Types!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  const direct = (gateID) =>{\r\n    getGateInfo(gateID)\r\n    .then(async (data) => {\r\n      let projectID = data.message.projectID;\r\n      history.push('/project/'+String(projectID)+'/gate/'+String(gateID));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate Info, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  return (\r\n  <div>\r\n    <DeviceModal\r\n      deviceTypes = {deviceTypes}\r\n      hide={toggle.edit}\r\n      gateID = {null}\r\n      deviceID = {curID}\r\n      success={() => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n      }}\r\n      toggleModal={() => {\r\n        toggleModal(\"edit\");\r\n      }}\r\n    />\r\n    <Jumbotron className=\"dashboard\">\r\n      <Row>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv success\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Sample\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#66bb6a\"}}>\r\n                ~\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv warning\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Sample\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#ffa726\"}} >\r\n              ~\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv info\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              New Devices\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#26c6da\"}}>\r\n              {newDevices.length}\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={3}>\r\n          <Card>            \r\n            <p className=\"cardHomeText\">\r\n            <div className=\"cardIconDiv danger\">\r\n              <span className=\"cardIcon\">\r\n              <InfoOutlinedIcon fontSize='large' style={{color:\"white\"}}/>\r\n              </span>\r\n            </div>\r\n              Disconnected Devices\r\n              <h3 className=\"cardHomeNumber\" style={{color:\"#ef5350\"}}>\r\n                {devices.length}\r\n              </h3>\r\n          </p>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Jumbotron>\r\n    <div className=\"content\">\r\n    <Row>\r\n    <Col sm={4}>\r\n          <Card style={{height:\"465px\"}}>\r\n          <Typography className=\"cardTitle\" variant=\"h6\" component=\"h2\">\r\n            New Devices\r\n          </Typography>\r\n          <TableContainer component={Paper} className=\"scrollbar-grey\" style={{\"box-shadow\":\"none\"}}>\r\n            <Table aria-label=\"simple table\">\r\n              <TableHead >\r\n                <TableRow>\r\n                  <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                  <TableCell align=\"left\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {newDevices.map((row, index) => (\r\n                  <TableRow key={row.deviceID}>\r\n                  <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                      <IconButton style={{padding:0}}\r\n                      onClick={() => {\r\n                          setCurID(row.deviceID);\r\n                          toggleModal(\"edit\");\r\n                      }}>\r\n                        <BuildIcon\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          </Card>\r\n        </Col>\r\n        <Col sm={8}>\r\n          <Card style={{height:\"465px\"}} >\r\n          <Typography className=\"cardTitle\" variant=\"h6\" component=\"h2\">\r\n             Disconnected Devices\r\n          </Typography>\r\n          <TableContainer component={Paper} className=\"scrollbar-grey\" style={{\"box-shadow\":\"none\"}}>\r\n            <Table stickyHeader aria-label=\"simple table\">\r\n              <TableHead >\r\n                <TableRow>\r\n                  <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                  <TableCell align=\"left\"><b>Name</b></TableCell>\r\n                  <TableCell align=\"left\"><b>Type</b></TableCell>\r\n                  <TableCell align=\"left\"></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {devices.map((row, index) => (\r\n                  <TableRow key={row.deviceID}>\r\n                  <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                    <TableCell align=\"left\">{row.deviceName}</TableCell>\r\n                    <TableCell align=\"left\">{deviceTypeNames[row.deviceType]===undefined ? row.deviceType : deviceTypeNames[row.deviceType].name}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <IconButton style={{padding:0}}\r\n                      onClick={() => {\r\n                          direct(row.gateID);\r\n                      }}>\r\n                        <OpenInNewIcon\r\n                        />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default { Home };\r\n","import React, { useState, useContext } from \"react\";\r\nimport { store } from \"../store.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport function Login() {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  const { dispatch } = storeContext;\r\n  let history = useHistory();\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n  const reqLogin = (e) => {\r\n    e.preventDefault();\r\n    let { username, password } = state;\r\n    /*\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    };\r\n    \r\n    fetch(server_URL + \"/login\", requestOptions)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n  \r\n      // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      }\r\n  \r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      return(\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/home\"\r\n          }}\r\n        />\r\n      );\r\n    })\r\n    .catch((error) => {\r\n      this.setState({ errorMessage: error.toString() });\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    if (username === \"huajun\" && password === \"huajun\") {\r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      dispatch({\r\n        type: \"setUser\",\r\n        value: username\r\n      });\r\n      history.push(\"/home\");\r\n    } else if (username.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Username cannot be blank\";\r\n    } else if (password.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Password cannot be blank\";\r\n    } else {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Invalid Username or Password\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"maincontainer h-100\">\r\n      <div className=\"container-fluid bg-light h-100\">\r\n        <div className=\"login d-flex align-items-center py-5\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-10 col-sm-6 col-md-5 col-xl-4 mx-auto \">\r\n                <h3 className=\"display-4\">Login</h3>\r\n                <p className=\"text-muted mb-4\">\r\n                  Enter your credentials to login.\r\n                </p>\r\n                <form>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"username\"\r\n                      type=\"username\"\r\n                      placeholder=\"Username\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4\"\r\n                      onChange={handleChange}\r\n                      value={state.username}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\r\n                      onChange={handleChange}\r\n                      value={state.password}\r\n                    />\r\n                  </div>\r\n                  <p id=\"login-error\" className=\"text-danger\"></p>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block text-uppercase mb-2 rounded-pill shadow-sm\"\r\n                    onClick={reqLogin}\r\n                  >\r\n                    Sign in\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Login };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, addProject, delProject, alertService } from '../services/index.js';\r\n\r\nexport function Projects({ match }) {\r\n  let history = useHistory();\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false\r\n  });\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n    setCurState({\r\n      projectName: \"\",\r\n      location: \"\",\r\n      projectType: \"\"\r\n    });\r\n  }\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (projectID) => {\r\n    setCurID(projectID);\r\n    toggleModal(\"delete\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectName, location, projectType } = curState;\r\n    let curRows = initialRows;\r\n    console.log(curRows);\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[\"projectName\"].toLowerCase().indexOf(projectName.toLowerCase()) >= 0 &&\r\n          row[\"location\"].toLowerCase().indexOf(location.toLowerCase()) >= 0 &&\r\n          row[\"projectType\"].toLowerCase().indexOf(projectType.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const insert = (e) => {\r\n    addProject()\r\n      .then(async (data) => {\r\n        let ID = data.message.projectID;\r\n        history.push(\"/project/\" + ID);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  const edit = (projectID) => {\r\n    history.push(\"/project/\" + projectID);\r\n  };\r\n\r\n  const del = async (projectID) => {\r\n    delProject(projectID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Project Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this project?\"\r\n      />\r\n      <ConfirmModal\r\n        hide={toggle.add}\r\n        success={() => {\r\n          insert();\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"add\");\r\n        }}\r\n        title=\"Confirm Addition\"\r\n        body=\"Add a new project?\"\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Projects</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectName\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectName}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"location\"\r\n                placeholder=\"Location\"\r\n                onChange={handleChange}\r\n                value={state.location}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectType\"\r\n                placeholder=\"Type\"\r\n                onChange={handleChange}\r\n                value={state.projectType}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Project</TableCell>\r\n                <TableCell align=\"left\">Location</TableCell>\r\n                <TableCell align=\"left\">Type</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.projectName}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.location}</TableCell>\r\n                  <TableCell align=\"left\">{row.projectType}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => edit(row.projectID)}>\r\n                      <PencilSquare\r\n                        data-value={row.projectID}\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => activateModal(row.projectID)}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Projects };\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { alertService, getProjectInfo, updateProjectInfo , getObjectTypes} from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function ProjectForm() {\r\n  let { projectID }= useParams();\r\n  const [validated, setValidated] = useState(false);\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    projectType: \"\",\r\n    location: \"\",\r\n    contactNumber: \"\",\r\n    maCompany: \"\",\r\n    equipManu: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectTypes, setProjectTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Project Info!\", error);\r\n      });\r\n      getObjectTypes(\"project\")\r\n      .then(async (data) => {\r\n        setProjectTypes(Object.entries(data.message).map((type)=>({\r\n          id: type[0],\r\n          name: type[1].name\r\n        })));\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Project Types!\", error);\r\n      });\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()) update();\r\n  };\r\n\r\n  const update = () => {\r\n    updateProjectInfo(projectID, state)\r\n      .then(async (data) => {\r\n        alertService.success('Update Successful!');\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Project Info</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project ID\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control type=\"text\" placeholder={projectID} readOnly />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project Name\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              placeholder=\"Name\"\r\n              id=\"projectName\"\r\n              name=\"projectName\"\r\n              value={state.projectName}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Name is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project Type\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              custom\r\n              required\r\n              as=\"select\"\r\n              id=\"projectType\"\r\n              name=\"projectType\"\r\n              value={state.projectType}\r\n              onChange={handleChange}\r\n            >\r\n              <option value={''}>--Select Type--</option>\r\n              {\r\n                projectTypes.map((type)=>(\r\n                  <option value={type.id}>{type.name}</option>\r\n                ))\r\n              }\r\n            </Form.Control>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Type is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Location\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"location\"\r\n              name=\"location\"\r\n              value={state.location}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Location is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Equipment Manufacturer\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"equipManu\"\r\n              name=\"equipManu\"\r\n              value={state.equipManu}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Equipment Manufacturer is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n      </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            MA Company\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"maCompany\"\r\n              name=\"maCompany\"\r\n              value={state.maCompany}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              MA Company is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Contact No.\r\n          </Form.Label>\r\n          <Form.Label\r\n            column\r\n            sm={4}\r\n          >\r\n            <PhoneInput\r\n              inputProps={{\r\n                required: true\r\n              }}\r\n              placeholder=\"+XX-XXXX-XXXX\"\r\n              id=\"contactNumber\"\r\n              name=\"contactNumber\"\r\n              country={\"sg\"}\r\n              value={String(state.contactNumber)}\r\n              onChange={(e)=>{\r\n                setState((prevState) => ({\r\n                  ...prevState,\r\n                  [\"contactNumber\"]: parseInt(e)\r\n                }));\r\n              }}\r\n              isValid={(value, country) => {\r\n                if (value.length === 0) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              }}\r\n            />\r\n          </Form.Label>\r\n        </Form.Group>\r\n\r\n        \r\n        <Form.Group as={Row}>\r\n          <Col sm={8}\r\n           className=\"d-flex justify-content-end\">\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ProjectForm };\r\n","import { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, InputGroup, Breadcrumb } from \"react-bootstrap\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport { alertService, getBusinessInfo, updateBusinessInfo, getProjectInfo } from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function BusinessDetails(props) {\r\n  let {projectID} = useParams();\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    barrierDelay: 5,\r\n    networkWarningDuration: 5,\r\n    instantImgUpload: false,\r\n    vehicleColorDetect: false,\r\n    localImgStore: false\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    /*   \r\n    getBusinessInfo(projectID)\r\n    .then(async (data) => {\r\n      setState(data.message)\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    let res = {\r\n      barrierDelay: 5,\r\n      networkWarningDuration: 5,\r\n      instantImgUpload: false,\r\n      vehicleColorDetect: false,\r\n      localImgStore: false\r\n    };\r\n    setState(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    update();\r\n  };\r\n\r\n  const update = () => {\r\n    /* Pending API for project details update*/\r\n  };\r\n\r\n  function myFormat(num) {\r\n    return num + \" mins\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Business Details</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Breadcrumb>\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      </Breadcrumb>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Barrier Opening Delay\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"barrierDelay\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.barrierDelay}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Duration before issuing network down warning\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"networkWarningDuration\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.networkWarningDuration}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Instant Image Upload to Server\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.instantImgUpload}\r\n              type=\"switch\"\r\n              id=\"instantImgUpload\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Local Storage of images after uploading\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.localImgStore}\r\n              type=\"switch\"\r\n              id=\"localImgStore\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Vehicle Colour Detection\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.vehicleColorDetect}\r\n              type=\"switch\"\r\n              id=\"vehicleColorDetect\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col sm={8}\r\n           className=\"d-flex justify-content-end\">\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { BusinessDetails };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, DeviceModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getDevice, alertService, delDevice, getObjectTypes, getProjectInfo, getGateInfo} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\r\nimport SignalCellularConnectedNoInternet0BarIcon from '@material-ui/icons/SignalCellularConnectedNoInternet0Bar';\r\n\r\nexport function Devices (){\r\n    let { projectID, gateID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [gateName, setGateName] = useState(\"\");\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(null);\r\n  const [dummy, setDummy] = useState(false);\r\n  const [deviceTypes, setDeviceTypes] = useState([]);\r\n  const [deviceTypeNames, setDeviceTypeNames] = useState([]);\r\n  const reload = () =>{\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    getGateInfo(gateID)\r\n    .then(async (data) => {\r\n      setGateName(data.message.gateName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate Info, there was an error!\", error);\r\n    });\r\n    getDevice(gateID, [\"deviceID\", \"deviceName\", \"deviceType\", \"deviceStatus\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Device, there was an error!\", error);\r\n      });\r\n      getObjectTypes(\"device\")\r\n    .then(async (data) => {\r\n      setDeviceTypeNames(data.message);\r\n      setDeviceTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Device Types!\", error);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (deviceID) => {\r\n    delDevice(deviceID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Device Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Device, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this device?\"\r\n      />\r\n      <DeviceModal\r\n        deviceTypes = {deviceTypes}\r\n        hide={toggle.edit}\r\n        deviceID = {curID}\r\n        gateID = {gateID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item href={\"/project/\"+projectID+\"/gate\"}>Gates</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Devices</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"d-flex align-items-center\">\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName} / {gateName}</h5>\r\n      <div style={{\"flex-grow\":\"1\"}}></div>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"center\"><b>Status</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.deviceID}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceName}</TableCell>\r\n                  <TableCell align=\"center\">{deviceTypeNames[row.deviceType].name}</TableCell>\r\n                  <TableCell align=\"center\">{row.deviceStatus==='online'?\r\n                  <Tooltip title=\"Online\">\r\n                  <SignalCellularAltIcon style={{ color: \"#4caf50\" }}/>\r\n                  </Tooltip>\r\n                  :\r\n                  <Tooltip title=\"Offline\">\r\n                  <SignalCellularConnectedNoInternet0BarIcon style={{ color: \"#f44336\" }}/>\r\n                  </Tooltip>\r\n                  }</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.deviceID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Devices };","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu, Unlock } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, GateModal, TablePaginationActions } from \"../../components/index.js\";\r\nimport {getGate, alertService, delGate, getObjectTypes, openGate, getProjectInfo, getProjects} from '../../services/index.js';\r\nimport { Directions } from \"@material-ui/icons\";\r\n\r\nexport function Gates (){\r\n    let { projectID }= useParams();\r\n    let history = useHistory();\r\n    let {pathname} = useLocation();\r\n  const [rows, setRows] = useState([]);\r\n  const [gateTypes, setGateTypes] = useState([]);\r\n  const [gateTypeNames, setGateTypeNames] = useState([]);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [modal, setModal] = useState(true);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    getGate(projectID, [\"gateID\", \"gateName\", \"gateType\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Gate, there was an error!\", error);\r\n    });\r\n    getObjectTypes(\"gate\")\r\n    .then(async (data) => {\r\n      setGateTypeNames(data.message);\r\n      setGateTypes(Object.entries(data.message).map((type)=>({\r\n        id: type[0],\r\n        name: type[1].name\r\n      })));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Gate Types!\", error);\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n  }, [dummy]);\r\n\r\n  const openGateFunc = (gateID, gateName) =>{\r\n    openGate(gateID)\r\n    .then(async (data) => {\r\n      alertService.success(\"Opened Gate \"+gateName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Open Gate!\", error);\r\n    });\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const devices = (gateID) => {\r\n    history.push(pathname +\"/\"+ String(gateID));\r\n  };\r\n\r\n  const del = async (gateID) => {\r\n    delGate(gateID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Gate Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Gate, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this gate?\"\r\n      />\r\n      <GateModal\r\n        gateTypes = {gateTypes}\r\n        hide={toggle.edit}\r\n        gateID = {curID}\r\n        newState = {modal}\r\n        projectID = {projectID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Gates</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div className=\"d-flex align-items-center\">\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      <div style={{\"flex-grow\":\"1\"}}></div>\r\n        <Form inline onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                    setModal(true);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        </div>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>ID</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Type</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{row.gateID}</TableCell>\r\n                  <TableCell align=\"center\">{row.gateName}</TableCell>\r\n                  <TableCell align=\"center\">{gateTypeNames[row.gateType].name}</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                  <Tooltip title=\"Devices\">\r\n                    <IconButton \r\n                    style={{padding:\"5px 10px\"}}\r\n                    onClick={() => {\r\n                        devices(row.gateID);\r\n                    }}>\r\n                      <Cpu\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Edit\">\r\n                    <IconButton\r\n                    style={{padding:\"5px 10px\"}}\r\n                     onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        setModal(false);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Open Gate\">\r\n                    <IconButton\r\n                    style={{padding:\"5px 10px\"}}\r\n                     onClick={() => {\r\n                        openGateFunc(row.gateID, row.gateName);\r\n                    }}>\r\n                      <Unlock\r\n                        size={21}\r\n                        color=\"green\"\r\n                      />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  <Tooltip title=\"Delete\">\r\n                    <IconButton\r\n                    style={{padding:\"5px 10px\"}}\r\n                     onClick={() => {\r\n                        setCurID(row.gateID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Gates };","import React, { useState, useEffect } from \"react\";\r\nimport { Breadcrumb } from \"react-bootstrap\";\r\nimport {Input , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { TablePaginationActions } from \"../../components/index.js\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getProjectInfo, alertService} from '../../services/index.js';\r\n\r\nimport { PencilSquare } from \"react-bootstrap-icons\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport function LedConfig(props) {\r\n  let {projectID} = useParams();\r\n  const [rows, setRows] = useState([]);\r\n  const [curID, setCurID] = useState(null);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    trigger: \"\",\r\n    voiceMsg: \"\",\r\n    textMsg: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    /*getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setInitialRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n    let res = [\r\n        {\r\n            id: 1,\r\n            trigger: \"Trigger 1\",\r\n            voiceMsg: \"Sample 1\",\r\n            textMsg: \"Sample 01\"\r\n        },\r\n        {\r\n            id: 2,\r\n            trigger: \"Trigger 2\",\r\n            voiceMsg: \"Sample 2\",\r\n            textMsg: \"Sample 02\"\r\n        },\r\n        {\r\n            id: 3,\r\n            trigger: \"Trigger 3\",\r\n            voiceMsg: \"Sample 3\",\r\n            textMsg: \"Sample 03\"\r\n        },\r\n        {\r\n            id: 4,\r\n            trigger: \"Trigger 4\",\r\n            voiceMsg: \"Sample 4\",\r\n            textMsg: \"Sample 04\"\r\n        },\r\n        {\r\n            id: 5,\r\n            trigger: \"Trigger 5\",\r\n            voiceMsg: \"Sample 5\",\r\n            textMsg: \"Sample 05\"\r\n        },\r\n        {\r\n            id: 6,\r\n            trigger: \"Trigger 6\",\r\n            voiceMsg: \"Sample 6\",\r\n            textMsg: \"Sample 06\"\r\n        }\r\n    ];\r\n    setRows(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const save = () =>{\r\n    // API\r\n    //reload();\r\n  }\r\n\r\n  const edit = (vals) =>{\r\n    const {id, trigger, voiceMsg, textMsg} = vals;\r\n    setState({\r\n        trigger, \r\n        voiceMsg, \r\n        textMsg});\r\n    setCurID(id);\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setCurID(null);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>LED Configuration</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Breadcrumb>\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      </Breadcrumb>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Trigger</TableCell>\r\n                <TableCell align=\"center\">Voice Message</TableCell>\r\n                <TableCell align=\"center\">Text Message</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.trigger}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"voiceMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.voiceMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.voiceMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"textMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.textMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.textMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"right\"  style={{padding:0}}>\r\n                    {curID === null?\r\n                        (<IconButton onClick={() => edit(row)}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            color=\"royalblue\"\r\n                            />\r\n                        </IconButton>)\r\n                        :(\r\n                        curID === row.id?\r\n                        <div>\r\n                            <IconButton onClick={() => save()}>\r\n                                <SaveIcon\r\n                                size={21}\r\n                                color=\"primary\"\r\n                                />\r\n                            </IconButton>\r\n                            <IconButton onClick={() => setCurID(null)}>\r\n                                <CloseIcon\r\n                                size={21}\r\n                                color=\"error\"\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                        :\r\n                        (<IconButton disabled = {true}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            />\r\n                        </IconButton>)\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { LedConfig };\r\n","import {\r\n  ProjectForm,\r\n  BusinessDetails,\r\n  Devices,\r\n  LedConfig,\r\n  Gates\r\n} from \"./projectSubPages/index.js\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport {Nav, Tab} from \"react-bootstrap\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nexport function EditProject(props) {\r\n  let history = useHistory();\r\n  let { path, url } = useRouteMatch();\r\n  let {pathname} = useLocation();\r\n  let page = pathname.split('/')[3];\r\n  const direct = (path) =>{\r\n    history.push(url+path);\r\n  }\r\n  return (\r\n    <div className=\"tabModal\" style={{background:\"transparent\"}}>\r\n      <Tab.Container id=\"left-tabs-example\" >\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/info\")}} active = {page===\"info\"}>Infomation</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/business\")}} active = {page===\"business\"}>Business</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/gate\")}} active = {page===\"gate\"}>Gates</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/ledconfig\")}} active = {page===\"ledconfig\"}>LED Config</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n          <Switch>\r\n            <Route exact path={`${path}/info`}>\r\n              <ProjectForm />\r\n            </Route>\r\n            <Route exact path={`${path}/business`}>\r\n              <BusinessDetails />\r\n            </Route>\r\n            <Route exact path={`${path}/gate/:gateID`}>\r\n              <Devices />\r\n            </Route>\r\n            <Route exact path={`${path}/gate`}>\r\n              <Gates />\r\n            </Route>\r\n            <Route exact path={`${path}/ledconfig`}>\r\n              <LedConfig />\r\n            </Route>\r\n            <Route path={path}>\r\n              <Redirect to={`${url}/info`} />\r\n            </Route>\r\n          </Switch>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { EditProject };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb, Modal } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { ConfirmModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getProjects, \r\n  getSpecialPlate,\r\n  delSpecialPlate,\r\n  updateSpecialPlate,\r\n  addSpecialPlate } from '../services/index.js';\r\n\r\nexport function PlateRegex({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false,\r\n    edit: false\r\n  });\r\n  const [state, setState] = useState({\r\n    projectID: NaN,\r\n    actualPlate: \"\"\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    projectID: NaN,\r\n    actualPlate: \"\"\r\n  });\r\n  const reset = () =>{\r\n    setState({\r\n      projectID: NaN,\r\n      actualPlate: \"\"\r\n    });\r\n    setCurState({\r\n      projectID: NaN,\r\n      actualPlate: \"\"\r\n    });\r\n  }\r\n  const [val, setVal] = useState({\r\n    projectID: NaN,\r\n    matchPlate: \"\",\r\n    actualPlate: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const reload = () =>{\r\n    getSpecialPlate([\"projectID\", \"matchPlate\", \"actualPlate\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  const func = async (val) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element.projectID] = element.projectName;\r\n    });\r\n    return await temp;\r\n  };\r\n  useEffect(() => {\r\n    getProjects([\"projectID\", \"projectName\"])\r\n    .then(async (data) => {\r\n      setProjects(data.content);\r\n      func(data.content).then(async(list)=>{\r\n        setProjectNames(await list);\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n  },projectNames);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleChangeVal = (e) =>{\r\n    let { id, value } = e.target;\r\n    if(id===\"projectID\")value = parseInt(value);\r\n    setVal((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  }\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (values) => {\r\n    let {projectID, matchPlate, actualPlate} = values;\r\n    setValidated(false);\r\n    setVal({\r\n        projectID,\r\n        matchPlate,\r\n        actualPlate\r\n      });\r\n    toggleModal(\"edit\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectID, actualPlate } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          (Number.isNaN(projectID) || row[\"projectID\"] === projectID) &&\r\n          String(row[\"actualPlate\"]).toLowerCase().indexOf(actualPlate.toLowerCase()) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const insert = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n      addSpecialPlate(val)\r\n      .then(async (data) => {\r\n        reload();\r\n        toggleModal(\"add\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n    }\r\n  };\r\n\r\n  const edit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()){\r\n        updateSpecialPlate(val)\r\n        .then(async (data) => {\r\n          reload();\r\n          toggleModal(\"edit\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"There was an error!\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  const del = (id) => {\r\n    delSpecialPlate(id)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this regex?\"\r\n      />\r\n      <Modal show={toggle.add} onHide={()=>toggleModal(\"add\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Add Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={insert}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={5}>\r\n            Project Name\r\n          </Form.Label>\r\n          <Col sm={6}>\r\n              <Form.Control\r\n                custom\r\n                required\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChangeVal}\r\n                value={val.projectID}\r\n              >\r\n                  <option value={null}>--Select a Project--</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Project Name is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n        </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"add\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n    <Modal show={toggle.edit} onHide={()=>toggleModal(\"edit\")}\r\n      centered>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Edit Plate Regex Record</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form noValidate validated={validated} onSubmit={edit}>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Regex for Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Regex\"\r\n                id=\"matchPlate\"\r\n                name=\"matchPlate\"\r\n                value={val.matchPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Regex is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Form.Group as={Row}>\r\n            <Form.Label column sm={5}>\r\n                Actual Plate\r\n            </Form.Label>\r\n            <Col\r\n                sm={6}\r\n            >\r\n                <Form.Control\r\n                required\r\n                placeholder=\"Actual Plate\"\r\n                id=\"actualPlate\"\r\n                name=\"actualPlate\"\r\n                value={val.actualPlate}\r\n                onChange={handleChangeVal}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                Actual Plate is a required field.\r\n                </Form.Control.Feedback>\r\n            </Col>\r\n            </Form.Group>\r\n            <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={()=>toggleModal(\"edit\")}>\r\n                Cancel\r\n                </Button>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                Confirm\r\n                </Button>\r\n            </Modal.Footer>\r\n        </Form>\r\n      </Modal.Body>\r\n    </Modal>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Plate Regex</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectID}\r\n              >\r\n                  <option value={null}>All Projects</option>\r\n                  {projects.map((project)=>(\r\n                      <option value={project.projectID}>{project.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"actualPlate\"\r\n                placeholder=\"Actual Plate\"\r\n                onChange={handleChange}\r\n                value={state.actualPlate}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                setVal({\r\n                    projectID: \"\",\r\n                    matchPlate: \"\",\r\n                    actualPlate: \"\"\r\n                    });\r\n                  setValidated(false);\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Project</TableCell>\r\n                <TableCell align=\"center\">Regex of Plate</TableCell>\r\n                <TableCell align=\"center\">Actual Plate</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.matchPlate}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {projectNames[row.projectID]}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.matchPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.actualPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {activateModal(row)}}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.matchPlate);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { PlateRegex };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { ImageModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getMovementLogs, getObjectTypes, alertService } from '../services/index.js';\r\nimport { LockFill, UnlockFill } from \"react-bootstrap-icons\";\r\n\r\nimport DatePicker from 'react-datepicker';\r\n\r\nexport function Records({ match }) {\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [rows, setRows] = useState([]);\r\n  const [gateTypes, setGateTypes] = useState({});\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const  queryFields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\"\r\n  ];\r\n  const fieldPlaceholder = {\r\n    projectName: \"Project Name\",\r\n    vehicleType: \"Vehicle Type\",\r\n    isOpened: \"Is Opened\",\r\n    gateName: \"Gate Name\",\r\n    gateType: \"Gate Type\",\r\n    originalPlate: \"Original Plate\",\r\n    confirmedPlate: \"Actual Plate\",\r\n    detectionTime: \"Detection Time\",\r\n    confirmedTime: \"Confirmed Time\",\r\n    image1: \"Image 1\",\r\n    image2: \"Image 2\",\r\n    image3: \"Image 3\",\r\n    plateImage: \"Plate Image\"\r\n  };\r\n  const fields = [\r\n    \"projectName\",\r\n    \"vehicleType\",\r\n    \"isOpened\",\r\n    \"gateName\",\r\n    \"gateType\",\r\n    \"detectionTime\",\r\n    \"confirmedTime\",\r\n    \"originalPlate\",\r\n    \"confirmedPlate\",\r\n    \"image1\",\r\n    \"image2\",\r\n    \"image3\",\r\n    \"plateImage\"\r\n  ];\r\n  const fieldLength = {\r\n    projectName: \"120px\",\r\n    vehicleType: \"120px\",\r\n    isOpened: \"120px\",\r\n    gateName: \"120px\",\r\n    gateType: \"120px\",\r\n    originalPlate: \"120px\",\r\n    confirmedPlate: \"120px\",\r\n    detectionTime: \"230px\",\r\n    confirmedTime: \"230px\",\r\n    image1: \"90px\",\r\n    image2: \"90px\",\r\n    image3: \"90px\",\r\n    plateImage: \"90px\"\r\n  };\r\n  const fieldHeight = {\r\n    image1: \"50px\",\r\n    image2: \"50px\",\r\n    image3: \"50px\",\r\n    plateImage: \"50px\",\r\n    isOpened: \"30px\"\r\n  }\r\n  const [state, setState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\",\r\n    startTime: null,\r\n    endTime: null\r\n  });\r\n  const [curState, setCurState] = useState({\r\n    curField: \"projectName\",\r\n    val: \"\",\r\n    startTime: null,\r\n    endTime: null\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projects, setProjects] = useState([]);\r\n  const reload = () =>{\r\n    getMovementLogs(fields.concat(\"logID\"), [])\r\n      .then(async (data) => {\r\n        console.log(data.content.slice(0,6));\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n    getObjectTypes(\"gate\")\r\n    .then(async (data) => {\r\n      setGateTypes(data.message);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error Get Gate Types!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows, curState]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    if(id===\"curField\"){\r\n      setState((prevState) => ({\r\n        curField: value,\r\n        val: \"\"\r\n      }));\r\n    }else{\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { curField, val } = curState;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[curField].toLowerCase().indexOf(val.toLowerCase()) >= 0 \r\n      ).sort(\r\n        (a,b)=> (a.detectionTime < b.detectionTime) ? 1 : -1\r\n      )\r\n    );\r\n  };\r\n  \r\n  const reset = async (e) =>{\r\n    setState({\r\n      curField: \"projectName\",\r\n      val: \"\",\r\n      startTime: null,\r\n      endTime: null\r\n    });\r\n    setCurState({\r\n      curField: \"projectName\",\r\n      val: \"\",\r\n      startTime: null,\r\n      endTime: null\r\n    });\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ImageModal\r\n      src = {imageSrc}\r\n      toggleModal={()=>{\r\n        setImageSrc(null);\r\n      }}\r\n      />\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Entry Exit Records</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"curField\"\r\n                onChange={handleChange}\r\n                value={state.curField}\r\n              >\r\n                  {queryFields.map((queryField)=>(\r\n                      <option value={queryField}>{fieldPlaceholder[queryField]}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"val\"\r\n                placeholder={fieldPlaceholder[state.curField]}\r\n                onChange={handleChange}\r\n                value={state.val}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\" className=\"d-flex\">\r\n            <Form.Label>From:</Form.Label>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n            <DatePicker\r\n            isClearable\r\n              className=\"dateRecord\"\r\n              selected={state.startTime}\r\n              maxDate={state.endTime}\r\n              popperClassName=\"dateTimePopper\"\r\n              className=\"form-control\"\r\n              placeholderText=\"YYYY-MM-DD HH:MM:SS\"\r\n              onChange={date => handleChange({\r\n                target:{\r\n                  value:date,\r\n                  id: \"startTime\"\r\n                }\r\n              })}\r\n              showTimeSelect\r\n              dateFormat=\"yyyy-MM-dd\"\r\n              timeFormat=\"HH:mm:ss\"\r\n              timeIntervals={15}\r\n              timeCaption=\"time\"\r\n              dateFormat=\"yyyy-MM-dd HH:mm:ss\"\r\n              title=\"Start Time\"\r\n              clearButtonClassName=\"dateTimeClear\"\r\n            />\r\n            </Col>\r\n            <Col sm=\"auto\" className=\"d-flex\">\r\n            <Form.Label>To:</Form.Label>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n            <DatePicker\r\n            isClearable\r\n              className=\"dateRecord\"\r\n              selected={state.endTime}\r\n              minDate={state.startTime}\r\n              popperClassName=\"dateTimePopper\"\r\n              className=\"form-control\"\r\n              placeholderText=\"YYYY-MM-DD HH:MM:SS\"\r\n              onChange={date => handleChange({\r\n                target:{\r\n                  value:date,\r\n                  id: \"endTime\"\r\n                }\r\n              })}\r\n              showTimeSelect\r\n              dateFormat=\"yyyy-MM-dd\"\r\n              timeFormat=\"HH:mm:ss\"\r\n              timeIntervals={15}\r\n              timeCaption=\"time\"\r\n              dateFormat=\"yyyy-MM-dd HH:mm:ss\"\r\n              title=\"Start Time\"\r\n              clearButtonClassName=\"dateTimeClear\"\r\n            />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={()=>{setCurState(state)}}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" variant=\"secondary\" onClick={reset}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper} className=\"overflowTable scrollbar-grey\">\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {fields.map((field) =>(\r\n                  <TableCell align=\"center\" style={{\"min-width\":fieldLength[field]}}>{fieldPlaceholder[field]}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.logID}>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.vehicleType}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.isOpened === true?\r\n                    <UnlockFill color=\"#64D381\" size={25} />:\r\n                    <LockFill color=\"red\" size={25} />}\r\n            </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.gateName}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {gateTypes[row.gateType].name}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.detectionTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.confirmedTime}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.originalPlate}</u>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    {row.confirmedPlate===null?null:\r\n                    <div className=\"outerPlate\" >\r\n                      <div className=\"innerPlate\">\r\n                        <u>{row.confirmedPlate}</u>\r\n                      </div>\r\n                    </div>}\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image1)} \r\n                    style={{\"height\":fieldHeight.image1}} \r\n                    src={row.image1}/>\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image2)} \r\n                    style={{\"height\":fieldHeight.image2}} \r\n                    src={row.image2} />\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.image3)} \r\n                    style={{\"height\":fieldHeight.image3}} \r\n                    src={row.image3} />\r\n                  </TableCell>\r\n                  <TableCell className=\"padding-0\" align=\"center\">\r\n                    <img \r\n                    className=\"imageClick\"\r\n                    onClick = {()=>setImageSrc(row.plateImage)} \r\n                    style={{\"height\":fieldHeight.plateImage}} \r\n                    src={row.plateImage} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TableRow className=\"d-flex justify-content-center\">\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 50]}\r\n              colSpan={13}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n        </TableRow>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Records };\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport function ParkRecords({ match }) {\r\n  return (<div className=\"d-flex justify-content-center\"><h1>Pending API</h1></div>);\r\n}\r\n\r\nexport default { ParkRecords };\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport {Tooltip, TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { PencilSquare, Trash, Cpu } from \"react-bootstrap-icons\";\r\n\r\nimport { useHistory, useParams, useLocation } from \"react-router-dom\";\r\nimport { ConfirmModal, RulesModal, TablePaginationActions } from \"../components/index.js\";\r\nimport {getGate, alertService, delGate, getProjects, getAccessRule, delAccessRule} from '../services/index.js';\r\nimport { Directions, MonetizationOn } from \"@material-ui/icons\";\r\nimport MoneyOffIcon from '@material-ui/icons/MoneyOff';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\n\r\nexport function ParkingRules (){\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    edit: false\r\n  });\r\n  const [project,setProject] = useState(null);\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectNames, setProjectNames] = useState({});\r\n  const [gateNames, setGateNames] = useState({});\r\n  const [projects,setProjects] = useState([]);\r\n  const func = async (val, inputField, outputField) =>{\r\n    let temp = {};\r\n    val.forEach(async (element)=>{\r\n      temp[element[inputField]] = element[outputField];\r\n    });\r\n    return await temp;\r\n  };\r\n  const reloadProjects = () =>{\r\n    getProjects([\"projectID\", \"projectName\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setProjects(data.content);\r\n        func(data.content, \"projectID\", \"projectName\").then(async(list)=>{\r\n          setProjectNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    reloadProjects();\r\n  }, [dummy]);\r\n\r\n  const reload = () =>{\r\n    getAccessRule(project, [\"accessRuleID\", \"accessRuleName\", \"isChargeable\", \"gates\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Get Gate, there was an error!\", error);\r\n    });\r\n  }\r\n\r\n  const reloadGates = () =>{\r\n    getGate(project,[\"gateID\",\"gateName\"])\r\n      .then(async (data) => {\r\n        func(data.content, \"gateID\", \"gateName\").then(async(list)=>{\r\n          setGateNames(await list);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Get Gate, there was an error!\", error);\r\n      });\r\n  }\r\n\r\n  useEffect(()=>{\r\n    reload();\r\n    if(project!==null)reloadGates();\r\n  },[project]);\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const del = async (accessRuleID) => {\r\n    delAccessRule(accessRuleID)\r\n    .then(async (data) => {\r\n      reload();\r\n      toggleModal(\"delete\");\r\n      alertService.success(\"Rule Deleted\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Delete Rule, There was an error!\", error);\r\n    });\r\n  };\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this rule?\"\r\n      />\r\n      {toggle.edit?\r\n      <RulesModal\r\n        hide={toggle.edit}\r\n        projectID = {project}\r\n        projectName = {projectNames[project]}\r\n        accessRuleID = {curID}\r\n        success={() => {\r\n            reload();\r\n            toggleModal(\"edit\");\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"edit\");\r\n        }}\r\n      />:null}\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Access Rules</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\" onSubmit={(e)=>{e.preventDefault();}}>\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                custom\r\n                as = \"select\"\r\n                id=\"projectID\"\r\n                onChange={(e)=>{\r\n                  setProject(e.target.value);\r\n                }}\r\n                value={project}\r\n              >\r\n                <option value=\"\">--Select a Project--</option>\r\n                  {projects.map((val)=>(\r\n                      <option value={val.projectID}>{val.projectName}</option>\r\n                  ))}\r\n              </Form.Control>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setCurID(null);\r\n                  toggleModal(\"edit\");\r\n                }}\r\n              >\r\n                + Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead >\r\n              <TableRow>\r\n                <TableCell align=\"left\"><b>Project</b></TableCell>\r\n                <TableCell align=\"center\"><b>Name</b></TableCell>\r\n                <TableCell align=\"center\"><b>Gates</b></TableCell>\r\n                <TableCell align=\"center\"><b>Chargeable</b></TableCell>\r\n                <TableCell align=\"right\"><b>Actions</b></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row, index) => (\r\n                <TableRow key={row.gateName}>\r\n                <TableCell align=\"left\">{projectNames[project]}</TableCell>\r\n                  <TableCell align=\"center\">{row.accessRuleName}</TableCell>\r\n                  <TableCell align=\"center\">{(row.gates).map((gate)=>(\r\n                    <div>{gateNames[gate]} <br/></div> \r\n                  ))}</TableCell>\r\n                  <TableCell align=\"center\">{row.isChargeable?\r\n                  <AttachMoneyIcon style={{color:\"#66bb6a\"}}/>\r\n                  :<MoneyOffIcon style={{color:\"red\"}}/>\r\n                  }</TableCell>\r\n                  <TableCell align=\"right\" style={{padding:0}}>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.accessRuleID);\r\n                        toggleModal(\"edit\");\r\n                    }}>\r\n                      <PencilSquare\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => {\r\n                        setCurID(row.accessRuleID);\r\n                        toggleModal(\"delete\");\r\n                    }}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ParkingRules };","import React, { useContext } from \"react\";\nimport { store } from \"./store.js\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport \"./styles.css\";\nimport \"./assets/scrollbar.css\";\nimport { NavBar, AlertGroup } from \"./components/index.js\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport { Home, Login, Projects, EditProject, PlateRegex, Records, ParkRecords, ParkingRules } from \"./pages/index.js\";\n\nclass DebugRouter extends Router {\n  constructor(props) {\n    super(props);\n    console.log(\"initial history is: \", JSON.stringify(this.history, null, 2));\n    this.history.listen((location, action) => {\n      console.log(\n        `The current URL is ${location.pathname}${location.search}${location.hash}`\n      );\n      console.log(\n        `The last navigation action was ${action}`,\n        JSON.stringify(this.history, null, 2)\n      );\n    });\n  }\n}\n\nexport function App() {\n  return (\n    // <DebugRouter>\n    <Router>\n      <Switch>\n        <PrivateRoute path=\"/home\">\n          <Home />\n        </PrivateRoute>\n        <PrivateRoute path=\"/project/:projectID\">\n          <EditProject />\n        </PrivateRoute>\n        <PrivateRoute path=\"/project\">\n          <Projects />\n        </PrivateRoute>\n        <PrivateRoute path=\"/regex\">\n          <PlateRegex />\n        </PrivateRoute>\n        <PrivateRoute path=\"/records\">\n          <Records />\n        </PrivateRoute>\n        <PrivateRoute path=\"/parking\">\n          <ParkRecords />\n        </PrivateRoute>\n        <PrivateRoute path=\"/accessRules\">\n          <ParkingRules />\n        </PrivateRoute>\n        <PublicRoute path=\"/\">\n          <Login />\n        </PublicRoute>\n      </Switch>\n    </Router>\n    // </DebugRouter>\n  );\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  let auth = globalState.auth;\n  let toggled = globalState.toggled;\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth ? (\n          <div className=\"h-100\">\n              <AlertGroup />\n            <NavBar />\n            <div id=\"content-body\" className={toggled?\"content-body-collapsed\":\"content-body-expand\"}>\n              {React.cloneElement(children, { params: props.match.params })}\n            </div>\n          </div>\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ children, ...rest }) {\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  let auth = globalState.auth;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          <Redirect\n            to={{\n              pathname: \"/home\",\n              state: { from: location }\n            }}\n          />\n        ) : \n        <AlertGroup />(\n          children\n        )\n      }\n    />\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { StateProvider } from \"./store.js\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StateProvider>\n    <StrictMode>\n      <App />\n    </StrictMode>\n  </StateProvider>,\n  rootElement\n);\n"],"sourceRoot":""}