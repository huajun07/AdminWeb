{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teowh\\\\Desktop\\\\Projects\\\\Admin_Web\\\\AdminWeb\\\\src\\\\pages\\\\projectSubPages\\\\Devices.js\",\n    _s = $RefreshSig$();\n\nimport { Card, Button, CardDeck, ButtonGroup } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { DevicesModal } from \"../../components/index.js\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Devices(props) {\n  _s();\n\n  let ID = props.ID;\n  const [dummy, setDummy] = useState(false);\n  const [gates, setGates] = useState([]);\n  const [curGate, setCurGate] = useState(null);\n  const [info, setInfo] = useState({\n    type: null,\n    id: null\n  });\n  let cardMenu = [];\n  useEffect(() => {\n    /*\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: props.id\r\n      })\r\n    };\r\n    \r\n    fetch(server_URL + \"/projectIdQuery\", requestOptions)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n          // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      }\r\n          initialRows = response.data;\r\n    })\r\n    .catch((error) => {\r\n      this.setState({ errorMessage: error.toString() });\r\n      console.error(\"There was an error!\", error);\r\n    });*/\n    let res = [{\n      gateID: \"1\",\n      gateName: \"Gate 1\",\n      gateType: \"Entry\"\n    }, {\n      gateID: \"2\",\n      gateName: \"Gate 2\",\n      gateType: \"Exit\"\n    }, {\n      gateID: \"3\",\n      gateName: \"Gate 3\",\n      gateType: \"Entry\"\n    }, {\n      gateID: \"4\",\n      gateName: \"Gate 4\",\n      gateType: \"Entry\"\n    }, {\n      gateID: \"5\",\n      gateName: \"Gate 5\",\n      gateType: \"Entry\"\n    }, {\n      gateID: \"6\",\n      gateName: \"Gate 6\",\n      gateType: \"Entry\"\n    }, {\n      gateID: \"7\",\n      gateName: \"Gate 7\",\n      gateType: \"Entry\"\n    }, {\n      gateID: \"8\",\n      gateName: \"Gate 8\",\n      gateType: \"Entry\"\n    }];\n    setGates(res);\n  }, [dummy]);\n\n  const handleAdd = () => {};\n\n  const del = id => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deviceContainter\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"gateHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Gates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"addGate\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"add\",\n          onClick: handleAdd,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            style: {\n              color: \"#4caf50\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deviceTab cardDiv align-items-center d-flex\",\n        children: /*#__PURE__*/_jsxDEV(CardDeck, {\n          children: gates.map(gate => /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: \"1500px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"delGate\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => del(gates.gateID),\n                children: /*#__PURE__*/_jsxDEV(HighlightOffIcon, {\n                  style: {\n                    color: \"#d32f2f\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: gate.gateName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: gate.gateType === \"Entry\" ? \"../../assets/entry.jpg\" : \"../../assets/exit.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => {\n                  setCurGate(gate.gateID);\n                },\n                children: \"Devices\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"warning\",\n                onClick: () => {\n                  setInfo({\n                    type: \"gate\",\n                    id: gate.gateID\n                  });\n                },\n                children: \"Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), curGate === null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Devices, \"hylz3LKYdJ8pg1XWYMz4yA7k/Uo=\");\n\n_c = Devices;\nexport default {\n  Devices\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Devices\");","map":{"version":3,"sources":["C:/Users/teowh/Desktop/Projects/Admin_Web/AdminWeb/src/pages/projectSubPages/Devices.js"],"names":["Card","Button","CardDeck","ButtonGroup","useState","useEffect","DevicesModal","IconButton","AddIcon","HighlightOffIcon","Devices","props","ID","dummy","setDummy","gates","setGates","curGate","setCurGate","info","setInfo","type","id","cardMenu","res","gateID","gateName","gateType","handleAdd","del","color","map","gate","width"],"mappings":"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","sourcesContent":["import { Card, Button, CardDeck, ButtonGroup } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { DevicesModal } from \"../../components/index.js\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\n\r\nexport function Devices(props) {\r\n  let ID = props.ID;\r\n  const [dummy, setDummy] = useState(false);\r\n  const [gates, setGates] = useState([]);\r\n  const [curGate, setCurGate] = useState(null);\r\n  const [info, setInfo] = useState({\r\n    type: null,\r\n    id: null\r\n  });\r\n  let cardMenu = [];\r\n  useEffect(() => {\r\n    /*\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: props.id\r\n      })\r\n    };\r\n    \r\n    fetch(server_URL + \"/projectIdQuery\", requestOptions)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n  \r\n      // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      }\r\n  \r\n      initialRows = response.data;\r\n    })\r\n    .catch((error) => {\r\n      this.setState({ errorMessage: error.toString() });\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    let res = [\r\n      {\r\n        gateID: \"1\",\r\n        gateName: \"Gate 1\",\r\n        gateType: \"Entry\"\r\n      },\r\n      {\r\n        gateID: \"2\",\r\n        gateName: \"Gate 2\",\r\n        gateType: \"Exit\"\r\n      },\r\n      {\r\n        gateID: \"3\",\r\n        gateName: \"Gate 3\",\r\n        gateType: \"Entry\"\r\n      },\r\n      {\r\n        gateID: \"4\",\r\n        gateName: \"Gate 4\",\r\n        gateType: \"Entry\"\r\n      },\r\n      {\r\n        gateID: \"5\",\r\n        gateName: \"Gate 5\",\r\n        gateType: \"Entry\"\r\n      },\r\n      {\r\n        gateID: \"6\",\r\n        gateName: \"Gate 6\",\r\n        gateType: \"Entry\"\r\n      },\r\n      {\r\n        gateID: \"7\",\r\n        gateName: \"Gate 7\",\r\n        gateType: \"Entry\"\r\n      },\r\n      {\r\n        gateID: \"8\",\r\n        gateName: \"Gate 8\",\r\n        gateType: \"Entry\"\r\n      }\r\n    ];\r\n    setGates(res);\r\n  }, [dummy]);\r\n\r\n  const handleAdd = () => {};\r\n\r\n  const del = (id) => {};\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"deviceContainter\">\r\n        <div id=\"gateHeader\">\r\n          <h4>Gates</h4>\r\n        </div>\r\n        <div id=\"addGate\">\r\n          <IconButton aria-label=\"add\" onClick={handleAdd}>\r\n            <AddIcon style={{ color: \"#4caf50\" }} />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"deviceTab cardDiv align-items-center d-flex\">\r\n          <CardDeck>\r\n            {gates.map((gate) => (\r\n              <Card style={{ width: \"1500px\" }}>\r\n                <div id=\"delGate\">\r\n                  <IconButton onClick={() => del(gates.gateID)}>\r\n                    <HighlightOffIcon style={{ color: \"#d32f2f\" }} />\r\n                  </IconButton>\r\n                </div>\r\n                <Card.Body>\r\n                  <Card.Title>{gate.gateName}</Card.Title>\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src={\r\n                      gate.gateType === \"Entry\"\r\n                        ? \"../../assets/entry.jpg\"\r\n                        : \"../../assets/exit.png\"\r\n                    }\r\n                  />\r\n                </Card.Body>\r\n                <ButtonGroup>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => {\r\n                      setCurGate(gate.gateID);\r\n                    }}\r\n                  >\r\n                    Devices\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"warning\"\r\n                    onClick={() => {\r\n                      setInfo({\r\n                        type: \"gate\",\r\n                        id: gate.gateID\r\n                      });\r\n                    }}\r\n                  >\r\n                    Info\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Card>\r\n            ))}\r\n          </CardDeck>\r\n        </div>\r\n      </div>\r\n      {curGate === null ? <div></div> : <div></div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Devices };\r\n"]},"metadata":{},"sourceType":"module"}