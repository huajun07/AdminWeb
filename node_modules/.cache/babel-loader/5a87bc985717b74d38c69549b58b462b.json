{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nconst alertSubject = new Subject();\nconst defaultId = 'default-alert';\nexport const alertService = {\n  onAlert,\n  success,\n  error,\n  info,\n  warn,\n  alert,\n  clear\n};\nexport const alertType = {\n  success: 'success',\n  error: 'danger',\n  info: 'info',\n  warning: 'warning'\n}; // enable subscribing to alerts observable\n\nfunction onAlert(id = defaultId) {\n  return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\n} // convenience methods\n\n\nfunction success(message, options) {\n  alert({ ...options,\n    type: alertType.success,\n    message\n  });\n}\n\nfunction error(message, options) {\n  alert({ ...options,\n    type: alertType.error,\n    message\n  });\n}\n\nfunction info(message, options) {\n  alert({ ...options,\n    type: alertType.info,\n    message\n  });\n}\n\nfunction warn(message, options) {\n  alert({ ...options,\n    type: alertType.warning,\n    message\n  });\n} // core alert method\n\n\nfunction alert(alert) {\n  alert.id = alert.id || defaultId;\n  alertSubject.next(alert);\n} // clear alerts\n\n\nfunction clear(id = defaultId) {\n  alertSubject.next({\n    id\n  });\n}","map":{"version":3,"sources":["C:/Users/teowh/Desktop/Projects/Admin_Web/AdminWeb/src/services/alertService.js"],"names":["Subject","filter","alertSubject","defaultId","alertService","onAlert","success","error","info","warn","alert","clear","alertType","warning","id","asObservable","pipe","x","message","options","type","next"],"mappings":"AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AAEA,MAAMC,YAAY,GAAG,IAAIF,OAAJ,EAArB;AACA,MAAMG,SAAS,GAAG,eAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG;AACxBC,EAAAA,OADwB;AAExBC,EAAAA,OAFwB;AAGxBC,EAAAA,KAHwB;AAIxBC,EAAAA,IAJwB;AAKxBC,EAAAA,IALwB;AAMxBC,EAAAA,KANwB;AAOxBC,EAAAA;AAPwB,CAArB;AAUP,OAAO,MAAMC,SAAS,GAAG;AACrBN,EAAAA,OAAO,EAAE,SADY;AAErBC,EAAAA,KAAK,EAAE,QAFc;AAGrBC,EAAAA,IAAI,EAAE,MAHe;AAIrBK,EAAAA,OAAO,EAAE;AAJY,CAAlB,C,CAOP;;AACA,SAASR,OAAT,CAAiBS,EAAE,GAAGX,SAAtB,EAAiC;AAC7B,SAAOD,YAAY,CAACa,YAAb,GAA4BC,IAA5B,CAAiCf,MAAM,CAACgB,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAApB,CAAvC,CAAP;AACH,C,CAED;;;AACA,SAASR,OAAT,CAAiBY,OAAjB,EAA0BC,OAA1B,EAAmC;AAC/BT,EAAAA,KAAK,CAAC,EAAE,GAAGS,OAAL;AAAcC,IAAAA,IAAI,EAAER,SAAS,CAACN,OAA9B;AAAuCY,IAAAA;AAAvC,GAAD,CAAL;AACH;;AAED,SAASX,KAAT,CAAeW,OAAf,EAAwBC,OAAxB,EAAiC;AAC7BT,EAAAA,KAAK,CAAC,EAAE,GAAGS,OAAL;AAAcC,IAAAA,IAAI,EAAER,SAAS,CAACL,KAA9B;AAAqCW,IAAAA;AAArC,GAAD,CAAL;AACH;;AAED,SAASV,IAAT,CAAcU,OAAd,EAAuBC,OAAvB,EAAgC;AAC5BT,EAAAA,KAAK,CAAC,EAAE,GAAGS,OAAL;AAAcC,IAAAA,IAAI,EAAER,SAAS,CAACJ,IAA9B;AAAoCU,IAAAA;AAApC,GAAD,CAAL;AACH;;AAED,SAAST,IAAT,CAAcS,OAAd,EAAuBC,OAAvB,EAAgC;AAC5BT,EAAAA,KAAK,CAAC,EAAE,GAAGS,OAAL;AAAcC,IAAAA,IAAI,EAAER,SAAS,CAACC,OAA9B;AAAuCK,IAAAA;AAAvC,GAAD,CAAL;AACH,C,CAED;;;AACA,SAASR,KAAT,CAAeA,KAAf,EAAsB;AAClBA,EAAAA,KAAK,CAACI,EAAN,GAAWJ,KAAK,CAACI,EAAN,IAAYX,SAAvB;AACAD,EAAAA,YAAY,CAACmB,IAAb,CAAkBX,KAAlB;AACH,C,CAED;;;AACA,SAASC,KAAT,CAAeG,EAAE,GAAGX,SAApB,EAA+B;AAC3BD,EAAAA,YAAY,CAACmB,IAAb,CAAkB;AAAEP,IAAAA;AAAF,GAAlB;AACH","sourcesContent":["import { Subject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nconst alertSubject = new Subject();\r\nconst defaultId = 'default-alert';\r\n\r\nexport const alertService = {\r\n    onAlert,\r\n    success,\r\n    error,\r\n    info,\r\n    warn,\r\n    alert,\r\n    clear\r\n};\r\n\r\nexport const alertType = {\r\n    success: 'success',\r\n    error: 'danger',\r\n    info: 'info',\r\n    warning: 'warning'\r\n}\r\n\r\n// enable subscribing to alerts observable\r\nfunction onAlert(id = defaultId) {\r\n    return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\r\n}\r\n\r\n// convenience methods\r\nfunction success(message, options) {\r\n    alert({ ...options, type: alertType.success, message });\r\n}\r\n\r\nfunction error(message, options) {\r\n    alert({ ...options, type: alertType.error, message });\r\n}\r\n\r\nfunction info(message, options) {\r\n    alert({ ...options, type: alertType.info, message });\r\n}\r\n\r\nfunction warn(message, options) {\r\n    alert({ ...options, type: alertType.warning, message });\r\n}\r\n\r\n// core alert method\r\nfunction alert(alert) {\r\n    alert.id = alert.id || defaultId;\r\n    alertSubject.next(alert);\r\n}\r\n\r\n// clear alerts\r\nfunction clear(id = defaultId) {\r\n    alertSubject.next({ id });\r\n}"]},"metadata":{},"sourceType":"module"}