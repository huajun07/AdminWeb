{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teowh\\\\Desktop\\\\Projects\\\\Admin_Web\\\\AdminWeb\\\\src\\\\components\\\\GateModal.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\nimport TimeField from 'react-simple-timefield';\nimport { store } from \"../store.js\";\nimport { alertService, getGateInfo, updateGateInfo } from '../services/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GateModal(props) {\n  _s();\n\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  const server_URL = globalState.server_URL;\n  let ID = parseInt(props.id);\n  let toggleModel = props.toggleModal;\n  const [validated, setValidated] = useState(false);\n  const [state, setState] = useState({});\n  const [dummy, setDummy] = useState(false);\n  useEffect(() => {\n    setValidated(false);\n    getGateInfo(ID).then(async data => {\n      setState(data.message);\n    }).catch(error => {\n      alertService.error(\"There was an error!\");\n      console.error(\"There was an error!\", error);\n    });\n  }, [dummy, ID]);\n\n  const handleChange = (e, filler, e2) => {\n    console.log(e, filler, e2);\n    let id, value;\n\n    if (e2 === undefined) {\n      id = e.target.id;\n      value = e.target.value;\n    } else {\n      id = e2.id;\n      value = e;\n    }\n\n    if (typeof state[id] === \"boolean\") {\n      console.log(\"bool\");\n      setState(prevState => ({ ...prevState,\n        [id]: !state[id]\n      }));\n    } else {\n      setState(prevState => ({ ...prevState,\n        [id]: value\n      }));\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    setValidated(true);\n    if (form.checkValidity()) update();\n  };\n\n  const update = () => {\n    updateGateInfo(ID, state).then(async data => {\n      console.log(\"hi\");\n      alertService.success(\"Update Successful!\");\n    }).catch(error => {\n      alertService.error(\"There was an error!\");\n      console.error(\"There was an error!\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posAbs\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-dialog modalDevice modal-dialog-scrollable\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          onHide: toggleModel,\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Gate Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            noValidate: true,\n            validated: validated,\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Gate ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  className: \"align-items-center d-flex justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: ID,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Gate Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    required: true,\n                    placeholder: \"Name\",\n                    id: \"gateName\",\n                    name: \"gateName\",\n                    value: state.gateName,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Gate Name is a required field.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Gate Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    custom: true,\n                    required: true,\n                    as: \"select\",\n                    id: \"gateType\",\n                    name: \"gateType\",\n                    value: state.gateType,\n                    onChange: handleChange,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"--Select Type--\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"entry\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 138,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"exit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Gate Type is a required field.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Open Gate for invalid/expired season pass holders\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  className: \"align-items-center d-flex justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    checked: state.isOpenForInvalid,\n                    type: \"switch\",\n                    id: \"isOpenForInvalid\",\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Open Gate for temporary vehicles\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  className: \"align-items-center d-flex justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    checked: state.isOpenForTemp,\n                    type: \"switch\",\n                    id: \"isOpenForTemp\",\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Charge fee for entry\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  className: \"align-items-center d-flex justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    checked: state.isChargeable,\n                    type: \"switch\",\n                    id: \"isChargeable\",\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Time to turn on the LPR camera\\u2019s LED\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  className: \"align-items-center d-flex\",\n                  children: /*#__PURE__*/_jsxDEV(TimeField, {\n                    value: state.ledOnTime,\n                    onChange: handleChange,\n                    showSeconds: true,\n                    input: /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"ledOnTime\",\n                      type: \"text\",\n                      name: \"ledOnTime\",\n                      placeholder: \"Time\",\n                      className: \"form-control\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Time to turn off the LPR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  className: \"align-items-center d-flex\",\n                  sm: 6,\n                  children: /*#__PURE__*/_jsxDEV(TimeField, {\n                    value: state.ledOffTime,\n                    onChange: handleChange,\n                    showSeconds: true,\n                    input: /*#__PURE__*/_jsxDEV(\"input\", {\n                      id: \"ledOffTime\",\n                      type: \"text\",\n                      name: \"ledOffTime\",\n                      placeholder: \"Time\",\n                      className: \"form-control\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Row,\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                sm: {\n                  span: 1,\n                  offset: 9\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GateModal, \"hVaTALES8eeW+FdvGdbEiQcBhBw=\");\n\n_c = GateModal;\nexport default {\n  GateModal\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"GateModal\");","map":{"version":3,"sources":["C:/Users/teowh/Desktop/Projects/Admin_Web/AdminWeb/src/components/GateModal.js"],"names":["useState","useEffect","useContext","Form","Row","Col","Button","Modal","TimeField","store","alertService","getGateInfo","updateGateInfo","GateModal","props","storeContext","globalState","state","server_URL","ID","parseInt","id","toggleModel","toggleModal","validated","setValidated","setState","dummy","setDummy","then","data","message","catch","error","console","handleChange","e","filler","e2","log","value","undefined","target","prevState","handleSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","update","success","gateName","gateType","isOpenForInvalid","isOpenForTemp","isChargeable","ledOnTime","ledOffTime","span","offset"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport TimeField from 'react-simple-timefield';\r\nimport { store } from \"../store.js\";\r\nimport { alertService, getGateInfo, updateGateInfo } from '../services/index.js';\r\n\r\nexport function GateModal(props) {\r\n    const storeContext = useContext(store);\r\n    const globalState = storeContext.state;\r\n    const server_URL = globalState.server_URL;\r\n    let ID = parseInt(props.id);\r\n    let toggleModel = props.toggleModal;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    getGateInfo(ID)\r\n    .then(async (data) => {\r\n      setState(data.message);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [dummy, ID]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n      console.log(e,filler,e2);\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()) update();\r\n  };\r\n\r\n  const update = () => {\r\n    updateGateInfo(ID, state)\r\n    .then(async (data) => {\r\n      console.log(\"hi\");\r\n        alertService.success(\"Update Successful!\");\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className =\"posAbs\">\r\n      <div className = \"modal-dialog modalDevice modal-dialog-scrollable\">\r\n        <div className = \"modal-content\">\r\n            <Modal.Header\r\n             onHide={toggleModel}\r\n             closeButton>\r\n                <Modal.Title>Gate Details</Modal.Title>\r\n            </Modal.Header>\r\n            <div className=\"modal-body\">\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate ID\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={ID} readOnly />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"gateName\"\r\n                        name=\"gateName\"\r\n                        value={state.gateName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"gateType\"\r\n                        name=\"gateType\"\r\n                        value={state.gateType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        <option>entry</option>\r\n                        <option>exit</option>\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Open Gate for invalid/expired season pass holders\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isOpenForInvalid}\r\n                        type=\"switch\"\r\n                        id=\"isOpenForInvalid\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Open Gate for temporary vehicles\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isOpenForTemp}\r\n                        type=\"switch\"\r\n                        id=\"isOpenForTemp\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Charge fee for entry\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                    Time to turn on the LPR camera’s LED\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex\"\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOnTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <input\r\n                              id = \"ledOnTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOnTime\"\r\n                              placeholder=\"Time\"\r\n                              className=\"form-control\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Time to turn off the LPR\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        className=\"align-items-center d-flex\"\r\n                        sm={6}\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOffTime} \r\n                        onChange={handleChange}\r\n                        showSeconds = {true}\r\n                        input={\r\n                            <input\r\n                              id = \"ledOffTime\"\r\n                              type=\"text\"\r\n                              name=\"ledOffTime\"\r\n                              placeholder=\"Time\"\r\n                              className=\"form-control\"\r\n                            />\r\n                        } />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n                <Form.Group as={Row}>\r\n                <Col sm={{ span: 1, offset: 9 }}>\r\n                    <Button type=\"submit\">Update</Button>\r\n                </Col>\r\n                </Form.Group>\r\n            </Form>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { GateModal };\r\n"]},"metadata":{},"sourceType":"module"}