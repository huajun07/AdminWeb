{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teowh\\\\Desktop\\\\Projects\\\\Admin_Web\\\\AdminWeb\\\\src\\\\pages\\\\projectSubPages\\\\Devices.js\",\n    _s = $RefreshSig$();\n\nimport { Card, Button, CardDeck, ButtonGroup } from \"react-bootstrap\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { DeviceModal, GateModal } from \"../../components/index.js\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { store } from \"../../store.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Devices(props) {\n  _s();\n\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  const server_URL = globalState.server_URL;\n  let ID = parseInt(props.ID);\n  const [dummy, setDummy] = useState(false);\n  const [gates, setGates] = useState([]);\n  const [curGate, setCurGate] = useState(null);\n  const [info, setInfo] = useState({\n    type: \"gate\",\n    id: 2\n  });\n  let cardMenu = [];\n  useEffect(() => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        authID: \"\",\n        serviceName: \"getTable\",\n        content: {\n          objName: \"gate\",\n          columns: [\"gateID\", \"gateName\", \"gateType\"],\n          filters: {\n            projectID: ID\n          }\n        }\n      })\n    };\n    fetch(server_URL, requestOptions).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.content || response.status;\n        return Promise.reject(error);\n      }\n\n      setGates(data.content);\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.toString()\n      });\n      console.error(\"There was an error!\", error);\n    });\n  }, [dummy]);\n\n  const handleAdd = () => {\n    const newGateReq = {\n      gateName: \"Gate\",\n      gateType: \"entry\",\n      isOpenForInvalid: false,\n      isOpenForTemp: false,\n      isChargeable: false,\n      ledOnTime: \"00:00:00\",\n      ledOffTime: \"00:00:00\"\n    };\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        authID: \"\",\n        serviceName: \"createGate\",\n        content: newGateReq\n      })\n    };\n    fetch(server_URL, requestOptions).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      let newGate = { ...newGateReq,\n        gateID: data.message.gateID\n      };\n      setGates(prevGates => prevGates.concat(newGate));\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.toString()\n      });\n      console.error(\"There was an error!\", error);\n    });\n  };\n\n  const del = id => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: info.type === null ? null : info.type === \"gate\" ? /*#__PURE__*/_jsxDEV(GateModal, {\n        id: info.id,\n        toggleModal: () => setInfo({\n          type: null,\n          id: null\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deviceContainter\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"gateHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Gates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"addGate\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"add\",\n          onClick: handleAdd,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            style: {\n              color: \"#4caf50\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deviceTab cardDiv align-items-center d-flex\",\n        children: /*#__PURE__*/_jsxDEV(CardDeck, {\n          children: gates.map(gate => /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: \"200px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"delGate\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => del(gates.gateID),\n                children: /*#__PURE__*/_jsxDEV(HighlightOffIcon, {\n                  style: {\n                    color: \"#d32f2f\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: gate.gateName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: gate.gateType === \"Entry\" ? \"../../assets/entry.jpg\" : \"../../assets/exit.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => {\n                  setCurGate(gate.gateID);\n                },\n                children: \"Devices\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"warning\",\n                onClick: () => {\n                  setInfo({\n                    type: \"gate\",\n                    id: gate.gateID\n                  });\n                },\n                children: \"Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), curGate === null ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deviceContainter\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"gateHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Devices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"addGate\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"add\",\n          onClick: handleAdd,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            style: {\n              color: \"#4caf50\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deviceTab cardDiv align-items-center d-flex\",\n        children: /*#__PURE__*/_jsxDEV(CardDeck, {\n          children: gates.map(gate => /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: \"200px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"delGate\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => del(gates.gateID),\n                children: /*#__PURE__*/_jsxDEV(HighlightOffIcon, {\n                  style: {\n                    color: \"#d32f2f\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: gate.gateName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: gate.gateType === \"Entry\" ? \"../../assets/entry.jpg\" : \"../../assets/exit.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => {\n                  setCurGate(gate.gateID);\n                },\n                children: \"Devices\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"warning\",\n                onClick: () => {\n                  setInfo({\n                    type: \"gate\",\n                    id: gate.gateID\n                  });\n                },\n                children: \"Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Devices, \"SnM7R6xZIySE9zCqlaB19YD9a1o=\");\n\n_c = Devices;\nexport default {\n  Devices\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Devices\");","map":{"version":3,"sources":["C:/Users/teowh/Desktop/Projects/Admin_Web/AdminWeb/src/pages/projectSubPages/Devices.js"],"names":["Card","Button","CardDeck","ButtonGroup","useState","useEffect","useContext","DeviceModal","GateModal","IconButton","AddIcon","HighlightOffIcon","store","Devices","props","storeContext","globalState","state","server_URL","ID","parseInt","dummy","setDummy","gates","setGates","curGate","setCurGate","info","setInfo","type","id","cardMenu","requestOptions","method","headers","body","JSON","stringify","authID","serviceName","content","objName","columns","filters","projectID","fetch","then","response","data","json","ok","error","status","Promise","reject","catch","setState","errorMessage","toString","console","handleAdd","newGateReq","gateName","gateType","isOpenForInvalid","isOpenForTemp","isChargeable","ledOnTime","ledOffTime","message","newGate","gateID","prevGates","concat","del","color","map","gate","width"],"mappings":"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","sourcesContent":["import { Card, Button, CardDeck, ButtonGroup } from \"react-bootstrap\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { DeviceModal, GateModal } from \"../../components/index.js\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport { store } from \"../../store.js\";\r\n\r\nexport function Devices(props) {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  const server_URL = globalState.server_URL;\r\n  let ID = parseInt(props.ID);\r\n  const [dummy, setDummy] = useState(false);\r\n  const [gates, setGates] = useState([]);\r\n  const [curGate, setCurGate] = useState(null);\r\n  const [info, setInfo] = useState({\r\n    type: \"gate\",\r\n    id: 2\r\n  });\r\n  let cardMenu = [];\r\n  useEffect(() => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        authID: \"\",\r\n        serviceName: \"getTable\",\r\n        content: {\r\n          objName: \"gate\",\r\n          columns: [\"gateID\", \"gateName\", \"gateType\"],\r\n          filters:{\r\n            projectID: ID\r\n          }\r\n        }\r\n      })\r\n    };\r\n    \r\n    fetch(server_URL, requestOptions)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n  \r\n      // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.content) || response.status;\r\n        return Promise.reject(error);\r\n      }\r\n      setGates(data.content);\r\n    })\r\n    .catch((error) => {\r\n      this.setState({ errorMessage: error.toString() });\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  const handleAdd = () => {\r\n    const newGateReq = {\r\n      gateName: \"Gate\",\r\n      gateType: \"entry\",\r\n      isOpenForInvalid: false,\r\n      isOpenForTemp: false,\r\n      isChargeable: false,\r\n      ledOnTime: \"00:00:00\",\r\n      ledOffTime: \"00:00:00\"\r\n    }\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        authID: \"\",\r\n        serviceName: \"createGate\",\r\n        content: newGateReq\r\n      })\r\n    };\r\n    \r\n    fetch(server_URL, requestOptions)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n  \r\n      // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      }\r\n      let newGate = {\r\n        ...newGateReq,\r\n        gateID: data.message.gateID\r\n      }\r\n      setGates((prevGates) => \r\n        prevGates.concat(newGate)\r\n      );\r\n    })\r\n    .catch((error) => {\r\n      this.setState({ errorMessage: error.toString() });\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const del = (id) => {};\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n      {info.type === null? null:(\r\n        info.type === \"gate\"? \r\n        <GateModal \r\n        id={info.id}\r\n        toggleModal={\r\n          ()=>setInfo({\r\n            type: null,\r\n            id: null\r\n          })}\r\n          />\r\n          :\r\n          null\r\n      )}\r\n      </div>\r\n      <div className=\"deviceContainter\">\r\n        <div id=\"gateHeader\">\r\n          <h4>Gates</h4>\r\n        </div>\r\n        <div id=\"addGate\">\r\n          <IconButton aria-label=\"add\" onClick={handleAdd}>\r\n            <AddIcon style={{ color: \"#4caf50\" }} />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"deviceTab cardDiv align-items-center d-flex\">\r\n          <CardDeck>\r\n            {gates.map((gate) => (\r\n              <Card style={{ width: \"200px\" }}>\r\n                <div id=\"delGate\">\r\n                  <IconButton onClick={() => del(gates.gateID)}>\r\n                    <HighlightOffIcon style={{ color: \"#d32f2f\" }} />\r\n                  </IconButton>\r\n                </div>\r\n                <Card.Body>\r\n                  <Card.Title>{gate.gateName}</Card.Title>\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src={\r\n                      gate.gateType === \"Entry\"\r\n                        ? \"../../assets/entry.jpg\"\r\n                        : \"../../assets/exit.png\"\r\n                    }\r\n                  />\r\n                </Card.Body>\r\n                <ButtonGroup>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => {\r\n                      setCurGate(gate.gateID);\r\n                    }}\r\n                  >\r\n                    Devices\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"warning\"\r\n                    onClick={() => {\r\n                      setInfo({\r\n                        type: \"gate\",\r\n                        id: gate.gateID\r\n                      });\r\n                    }}\r\n                  >\r\n                    Info\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Card>\r\n            ))}\r\n          </CardDeck>\r\n        </div>\r\n      </div>\r\n      {curGate === null ? null : \r\n      <div className=\"deviceContainter\">\r\n        <div id=\"gateHeader\">\r\n          <h4>Devices</h4>\r\n        </div>\r\n        <div id=\"addGate\">\r\n          <IconButton aria-label=\"add\" onClick={handleAdd}>\r\n            <AddIcon style={{ color: \"#4caf50\" }} />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"deviceTab cardDiv align-items-center d-flex\">\r\n          <CardDeck>\r\n            {gates.map((gate) => (\r\n              <Card style={{ width: \"200px\" }}>\r\n                <div id=\"delGate\">\r\n                  <IconButton onClick={() => del(gates.gateID)}>\r\n                    <HighlightOffIcon style={{ color: \"#d32f2f\" }} />\r\n                  </IconButton>\r\n                </div>\r\n                <Card.Body>\r\n                  <Card.Title>{gate.gateName}</Card.Title>\r\n                  <Card.Img\r\n                    variant=\"top\"\r\n                    src={\r\n                      gate.gateType === \"Entry\"\r\n                        ? \"../../assets/entry.jpg\"\r\n                        : \"../../assets/exit.png\"\r\n                    }\r\n                  />\r\n                </Card.Body>\r\n                <ButtonGroup>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    onClick={() => {\r\n                      setCurGate(gate.gateID);\r\n                    }}\r\n                  >\r\n                    Devices\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"warning\"\r\n                    onClick={() => {\r\n                      setInfo({\r\n                        type: \"gate\",\r\n                        id: gate.gateID\r\n                      });\r\n                    }}\r\n                  >\r\n                    Info\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Card>\r\n            ))}\r\n          </CardDeck>\r\n        </div>\r\n      </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Devices };\r\n"]},"metadata":{},"sourceType":"module"}