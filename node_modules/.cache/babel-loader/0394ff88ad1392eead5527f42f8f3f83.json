{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teowh\\\\Desktop\\\\Projects\\\\Admin_Web\\\\AdminWeb\\\\src\\\\components\\\\DeviceModal.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\nimport TimeField from 'react-simple-timefield';\nimport { store } from \"../store.js\";\nimport { alertService, getDeviceInfo, updateDeviceInfo } from '../services/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DeviceModal(props) {\n  _s();\n\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  const server_URL = globalState.server_URL;\n  let ID = parseInt(props.id);\n  let toggleModel = props.toggleModal;\n  const [validated, setValidated] = useState(false);\n  const [state, setState] = useState({});\n  const [dummy, setDummy] = useState(false);\n  useEffect(() => {\n    getDeviceInfo(ID).then(async data => {\n      console.log(data.message);\n      setState(data.message);\n    }).catch(error => {\n      alertService.error(\"There was an error!\");\n      console.error(\"There was an error!\", error);\n    });\n  }, [dummy]);\n\n  const handleChange = (e, filler, e2) => {\n    console.log(e, filler, e2);\n    let id, value;\n\n    if (e2 === undefined) {\n      id = e.target.id;\n      value = e.target.value;\n    } else {\n      id = e2.id;\n      value = e;\n    }\n\n    console.log(typeof state[id]);\n\n    if (typeof state[id] === \"boolean\") {\n      console.log(\"bool\");\n      setState(prevState => ({ ...prevState,\n        [id]: !state[id]\n      }));\n    } else {\n      setState(prevState => ({ ...prevState,\n        [id]: value\n      }));\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    setValidated(true);\n    if (form.checkValidity()) update();\n  };\n\n  const update = () => {\n    updateDeviceInfo(ID, state).then(async data => {\n      alertService.success(\"Update Successful!\");\n    }).catch(error => {\n      alertService.error(\"There was an error!\");\n      console.error(\"There was an error!\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posAbs\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-dialog modalDevice modal-dialog-scrollable\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          onHide: toggleModel,\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Device Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            noValidate: true,\n            validated: validated,\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Gate ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  className: \"align-items-center d-flex justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: state.gateID,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Device ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    required: true,\n                    placeholder: \"ID\",\n                    id: \"deviceID\",\n                    name: \"deviceID\",\n                    value: state.deviceID,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Device ID is a required field.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Device Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    required: true,\n                    placeholder: \"Name\",\n                    id: \"deviceName\",\n                    name: \"deviceName\",\n                    value: state.deviceName,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Device Name is a required field.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Device Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    required: true,\n                    placeholder: \"Type\",\n                    id: \"deviceType\",\n                    name: \"deviceType\",\n                    value: state.deviceType,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Device Type is a required field.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Carpark which the device belongs to\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    required: true,\n                    placeholder: \"Carpark\",\n                    id: \"deviceCarpark\",\n                    name: \"deviceCarpark\",\n                    value: state.deviceCarpark,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Capark is a required field.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  className: \"align-items-center d-flex justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: state.deviceStatus,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Manufacturer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    required: true,\n                    placeholder: \"Manufacturer\",\n                    id: \"manufacturer\",\n                    name: \"manufacturer\",\n                    value: state.manufacturer,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Manufacturer is a required field.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Manufacturer Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    required: true,\n                    placeholder: \"Manufacturer Code\",\n                    id: \"manufacturerCode\",\n                    name: \"manufacturerCode\",\n                    value: state.manufacturer,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Manufacturer Code is a required field.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Direction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    required: true,\n                    placeholder: \"Direction\",\n                    id: \"direction\",\n                    name: \"direction\",\n                    value: state.manufacturer,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Direction is a required field.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 6,\n                  children: \"Is Primary Device\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 6,\n                  className: \"align-items-center d-flex justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    checked: state.isPrimaryDevice,\n                    type: \"switch\",\n                    id: \"isPrimaryDevice\",\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Row,\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                sm: {\n                  span: 1,\n                  offset: 9\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeviceModal, \"hVaTALES8eeW+FdvGdbEiQcBhBw=\");\n\n_c = DeviceModal;\nexport default {\n  DeviceModal\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceModal\");","map":{"version":3,"sources":["C:/Users/teowh/Desktop/Projects/Admin_Web/AdminWeb/src/components/DeviceModal.js"],"names":["useState","useEffect","useContext","Form","Row","Col","Button","Modal","TimeField","store","alertService","getDeviceInfo","updateDeviceInfo","DeviceModal","props","storeContext","globalState","state","server_URL","ID","parseInt","id","toggleModel","toggleModal","validated","setValidated","setState","dummy","setDummy","then","data","console","log","message","catch","error","handleChange","e","filler","e2","value","undefined","target","prevState","handleSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","update","success","gateID","deviceID","deviceName","deviceType","deviceCarpark","deviceStatus","manufacturer","isPrimaryDevice","span","offset"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal } from \"react-bootstrap\";\r\nimport TimeField from 'react-simple-timefield';\r\nimport { store } from \"../store.js\";\r\nimport { alertService, getDeviceInfo, updateDeviceInfo } from '../services/index.js';\r\n\r\nexport function DeviceModal(props) {\r\n    const storeContext = useContext(store);\r\n    const globalState = storeContext.state;\r\n    const server_URL = globalState.server_URL;\r\n    let ID = parseInt(props.id);\r\n    let toggleModel = props.toggleModal;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getDeviceInfo(ID)\r\n    .then(async (data) => {\r\n      console.log(data.message);\r\n      setState(data.message);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n      console.log(e,filler,e2);\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    console.log(typeof state[id]);\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()) update();\r\n  };\r\n\r\n  const update = () => {\r\n    updateDeviceInfo(ID,state)\r\n    .then(async (data) => {\r\n        alertService.success(\"Update Successful!\");\r\n    })\r\n    .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className =\"posAbs\">\r\n      <div className = \"modal-dialog modalDevice modal-dialog-scrollable\">\r\n        <div className = \"modal-content\">\r\n            <Modal.Header\r\n             onHide={toggleModel}\r\n             closeButton>\r\n                <Modal.Title>Device Details</Modal.Title>\r\n            </Modal.Header>\r\n            <div className=\"modal-body\">\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Gate ID\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={state.gateID} readOnly />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device ID\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"ID\"\r\n                        id=\"deviceID\"\r\n                        name=\"deviceID\"\r\n                        value={state.deviceID}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device ID is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"deviceName\"\r\n                        name=\"deviceName\"\r\n                        value={state.deviceName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Device Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Type\"\r\n                        id=\"deviceType\"\r\n                        name=\"deviceType\"\r\n                        value={state.deviceType}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Device Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Carpark which the device belongs to\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Carpark\"\r\n                        id=\"deviceCarpark\"\r\n                        name=\"deviceCarpark\"\r\n                        value={state.deviceCarpark}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Capark is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Status\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={state.deviceStatus} readOnly />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Manufacturer\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer\"\r\n                        id=\"manufacturer\"\r\n                        name=\"manufacturer\"\r\n                        value={state.manufacturer}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Manufacturer Code\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Manufacturer Code\"\r\n                        id=\"manufacturerCode\"\r\n                        name=\"manufacturerCode\"\r\n                        value={state.manufacturer}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Manufacturer Code is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                         Direction\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Direction\"\r\n                        id=\"direction\"\r\n                        name=\"direction\"\r\n                        value={state.manufacturer}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Direction is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={6}>\r\n                        Is Primary Device\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={6}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isPrimaryDevice}\r\n                        type=\"switch\"\r\n                        id=\"isPrimaryDevice\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n                <Form.Group as={Row}>\r\n                <Col sm={{ span: 1, offset: 9 }}>\r\n                    <Button type=\"submit\">Update</Button>\r\n                </Col>\r\n                </Form.Group>\r\n            </Form>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { DeviceModal };\r\n"]},"metadata":{},"sourceType":"module"}