{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teowh\\\\Desktop\\\\Projects\\\\Admin_Web\\\\AdminWeb\\\\src\\\\pages\\\\Projects.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { ConfirmModal } from \"../components/index.js\";\nimport { getProjects, addProject } from '../services/index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Projects({\n  match\n}) {\n  _s();\n\n  let history = useHistory();\n  const [initialRows, setInitialRows] = useState([]);\n  const [rows, setRows] = useState([]);\n  const [toggle, setToggle] = useState({\n    delete: false,\n    add: false\n  });\n  const [curID, setCurID] = useState(\"\");\n  const [state, setState] = useState({\n    projectName: \"\",\n    location: \"\",\n    projectType: \"\"\n  });\n  const [dummy, setDummy] = useState(false);\n  useEffect(() => {\n    getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"]).then(async data => {\n      console.log(data.content);\n      setInitialRows(data.content);\n    }).catch(error => {\n      console.error(\"There was an error!\", error);\n    });\n  }, [dummy]);\n  useEffect(() => {\n    filter();\n  }, [initialRows]);\n\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setState(prevState => ({ ...prevState,\n      [id]: value\n    }));\n  };\n\n  const toggleModal = modal => {\n    let prevVal = toggle[modal];\n    setToggle(prevState => ({ ...prevState,\n      [modal]: !prevVal\n    }));\n  };\n\n  const activateModal = projectID => {\n    setCurID(projectID);\n    toggleModal(\"delete\");\n  };\n\n  const filter = e => {\n    let {\n      projectName,\n      location,\n      projectType\n    } = state;\n    let curRows = initialRows;\n    setRows(curRows.filter(row => row[\"projectName\"].indexOf(projectName) >= 0 && row[\"location\"].indexOf(location) >= 0 && row[\"projectType\"].indexOf(projectType) >= 0));\n  };\n\n  const insert = e => {\n    addProject().then(async data => {\n      let ID = data.content.projectID;\n      history.push(\"/project/\" + ID);\n    }).catch(error => {\n      console.error(\"There was an error!\", error);\n    });\n  };\n\n  const edit = projectID => {\n    history.push(\"/project/\" + projectID);\n  };\n\n  const del = async projectID => {\n    /*\r\n    API for removing \r\n    */\n    console.log(projectID);\n    let curRows = initialRows;\n    console.log(curRows.filter(row => projectID !== row[\"id\"]));\n    setInitialRows(curRows.filter(row => projectID !== row[\"id\"]));\n    toggleModal(\"delete\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ConfirmModal, {\n      hide: toggle.delete,\n      success: () => {\n        del(curID);\n      },\n      toggleModal: () => {\n        toggleModal(\"delete\");\n      },\n      title: \"Confirm Deletion\",\n      body: \"Delete this project?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmModal, {\n      hide: toggle.add,\n      success: () => {\n        insert();\n      },\n      toggleModal: () => {\n        toggleModal(\"add\");\n      },\n      title: \"Confirm Addition\",\n      body: \"Add a new project?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          href: \"/home\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          active: true,\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        inline: true,\n        className: \"rightFlex\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"projectName\",\n              placeholder: \"Name\",\n              onChange: handleChange,\n              value: state.projectName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"location\",\n              placeholder: \"Location\",\n              onChange: handleChange,\n              value: state.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              id: \"projectType\",\n              placeholder: \"Type\",\n              onChange: handleChange,\n              value: state.projectType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              onClick: filter,\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: \"auto\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-success\",\n              type: \"button\",\n              onClick: () => {\n                toggleModal(\"add\");\n              },\n              children: \"Add +\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Project\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.projectName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: row.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: row.projectType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => edit(row.projectID),\n                  children: /*#__PURE__*/_jsxDEV(PencilSquare, {\n                    \"data-value\": row.projectID,\n                    size: 21,\n                    color: \"royalblue\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => activateModal(row.projectID),\n                  children: /*#__PURE__*/_jsxDEV(Trash, {\n                    color: \"red\",\n                    size: 21\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)]\n            }, row.projectName, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Projects, \"eV0+I7qP4cZwEOYYL0z40Os2EKw=\", false, function () {\n  return [useHistory];\n});\n\n_c = Projects;\nexport default {\n  Projects\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["C:/Users/teowh/Desktop/Projects/Admin_Web/AdminWeb/src/pages/Projects.js"],"names":["React","useState","useContext","useEffect","Form","Row","Col","Button","Breadcrumb","Table","TableBody","TableCell","TableContainer","IconButton","TableHead","TableRow","Paper","PencilSquare","Trash","useHistory","ConfirmModal","getProjects","addProject","Projects","match","history","initialRows","setInitialRows","rows","setRows","toggle","setToggle","delete","add","curID","setCurID","state","setState","projectName","location","projectType","dummy","setDummy","then","data","console","log","content","catch","error","filter","handleChange","e","id","value","target","prevState","toggleModal","modal","prevVal","activateModal","projectID","curRows","row","indexOf","insert","ID","push","edit","del","map"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { PencilSquare, Trash } from \"react-bootstrap-icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ConfirmModal } from \"../components/index.js\";\r\nimport {getProjects, addProject } from '../services/index.js';\r\n\r\nexport function Projects({ match }) {\r\n  let history = useHistory();\r\n  const [initialRows, setInitialRows] = useState([]);\r\n  const [rows, setRows] = useState([]);\r\n  const [toggle, setToggle] = useState({\r\n    delete: false,\r\n    add: false\r\n  });\r\n  const [curID, setCurID] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    location: \"\",\r\n    projectType: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  useEffect(() => {\r\n    getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n      .then(async (data) => {\r\n        console.log(data.content);\r\n        setInitialRows(data.content);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    filter();\r\n  }, [initialRows]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  const activateModal = (projectID) => {\r\n    setCurID(projectID);\r\n    toggleModal(\"delete\");\r\n  };\r\n\r\n  const filter = (e) => {\r\n    let { projectName, location, projectType } = state;\r\n    let curRows = initialRows;\r\n    setRows(\r\n      curRows.filter(\r\n        (row) =>\r\n          row[\"projectName\"].indexOf(projectName) >= 0 &&\r\n          row[\"location\"].indexOf(location) >= 0 &&\r\n          row[\"projectType\"].indexOf(projectType) >= 0\r\n      )\r\n    );\r\n  };\r\n\r\n  const insert = (e) => {\r\n    addProject()\r\n      .then(async (data) => {\r\n        let ID = data.content.projectID;\r\n        history.push(\"/project/\" + ID);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  const edit = (projectID) => {\r\n    history.push(\"/project/\" + projectID);\r\n  };\r\n\r\n  const del = async (projectID) => {\r\n    /*\r\n    API for removing \r\n    */\r\n    console.log(projectID);\r\n    let curRows = initialRows;\r\n    console.log(curRows.filter((row) => projectID !== row[\"id\"]));\r\n    setInitialRows(curRows.filter((row) => projectID !== row[\"id\"]));\r\n    toggleModal(\"delete\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delete}\r\n        success={() => {\r\n          del(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delete\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this project?\"\r\n      />\r\n      <ConfirmModal\r\n        hide={toggle.add}\r\n        success={() => {\r\n          insert();\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"add\");\r\n        }}\r\n        title=\"Confirm Addition\"\r\n        body=\"Add a new project?\"\r\n      />\r\n\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Projects</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n        <Form inline className=\"rightFlex\">\r\n          <Row>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectName\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                value={state.projectName}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"location\"\r\n                placeholder=\"Location\"\r\n                onChange={handleChange}\r\n                value={state.location}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Form.Control\r\n                id=\"projectType\"\r\n                placeholder=\"Type\"\r\n                onChange={handleChange}\r\n                value={state.projectType}\r\n              />\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button type=\"button\" onClick={filter}>\r\n                Search\r\n              </Button>\r\n            </Col>\r\n            <Col sm=\"auto\">\r\n              <Button\r\n                className=\"btn btn-success\"\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  toggleModal(\"add\");\r\n                }}\r\n              >\r\n                Add +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Project</TableCell>\r\n                <TableCell align=\"left\">Location</TableCell>\r\n                <TableCell align=\"left\">Type</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow key={row.projectName}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.projectName}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.location}</TableCell>\r\n                  <TableCell align=\"left\">{row.projectType}</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <IconButton onClick={() => edit(row.projectID)}>\r\n                      <PencilSquare\r\n                        data-value={row.projectID}\r\n                        size={21}\r\n                        color=\"royalblue\"\r\n                      />\r\n                    </IconButton>\r\n                    <IconButton onClick={() => activateModal(row.projectID)}>\r\n                      <Trash color=\"red\" size={21} />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Projects };\r\n"]},"metadata":{},"sourceType":"module"}