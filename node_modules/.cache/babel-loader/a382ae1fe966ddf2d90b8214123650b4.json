{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teowh\\\\Desktop\\\\Projects\\\\Admin_Web\\\\AdminWeb\\\\src\\\\components\\\\GateModal.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { Form, Row, Col, Button, Alert, Modal } from \"react-bootstrap\";\nimport TimeField from 'react-simple-timefield';\nimport { store } from \"../store.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function GateModal(props) {\n  _s();\n\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  const server_URL = globalState.server_URL;\n  let ID = parseInt(props.id);\n  let toggleModel = props.toggleModal;\n  const [validated, setValidated] = useState(false);\n  const [state, setState] = useState({});\n  const [alert, setAlert] = useState(null);\n  const [dummy, setDummy] = useState(false);\n  useEffect(() => {\n    console.log(\"activated\");\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        authID: \"\",\n        serviceName: \"getGate\",\n        content: {\n          gateID: ID\n        }\n      })\n    };\n    fetch(server_URL, requestOptions).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      setState(data.message);\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.toString()\n      });\n      console.error(\"There was an error!\", error);\n    });\n  }, [dummy]);\n\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setState(prevState => ({ ...prevState,\n      [id]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    setValidated(true);\n    if (form.checkValidity()) update();\n  };\n\n  const onShowAlert = () => {\n    setAlert(true);\n    window.setTimeout(() => {\n      setAlert(false);\n    }, 2000);\n  };\n\n  const update = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        authID: \"\",\n        serviceName: \"modifyGate\",\n        content: {\n          gateID: ID,\n          modifyParams: state\n        }\n      })\n    };\n    fetch(server_URL, requestOptions).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (data.status !== \"success\") {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      onShowAlert(\"success\");\n    }).catch(error => {\n      onShowAlert(\"error\");\n      console.error(\"There was an error!\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modalDevice\",\n    children: [alert === null ? null : /*#__PURE__*/_jsxDEV(Alert, {\n      className: \"alert\",\n      variant: alert === \"success\" ? \"success\" : \"danger\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0\n        },\n        children: alert === \"success\" ? \"Update Successful\" : \"An Error Occured\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-dialog modalDevice modal-dialog-scrollable\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Gate Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            noValidate: true,\n            validated: validated,\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 4,\n                  children: \"Project ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 4,\n                  className: \"align-items-center d-flex justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    placeholder: ID,\n                    readOnly: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 4,\n                  children: \"Project Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 4,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    required: true,\n                    placeholder: \"Name\",\n                    id: \"gateName\",\n                    name: \"gateName\",\n                    value: state.gateName,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Gate Name is a required field.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 4,\n                  children: \"Project Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 4,\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    custom: true,\n                    required: true,\n                    as: \"select\",\n                    id: \"gateType\",\n                    name: \"gateType\",\n                    value: state.gateType,\n                    onChange: handleChange,\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"--Select Type--\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"entry\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"exit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: \"Gate Type is a required field.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 4,\n                  children: \"Open Gate for invalid/expired season pass holders\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 4,\n                  className: \"align-items-center d-flex justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    checked: state.isOpenForInvalid,\n                    type: \"switch\",\n                    id: \"isOpenForInvalid\",\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 4,\n                  children: \"Open Gate for temporary vehicles\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 4,\n                  className: \"align-items-center d-flex justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    checked: state.isOpenForTemp,\n                    type: \"switch\",\n                    id: \"isOpenForTemp\",\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 4,\n                  children: \"Charge fee for entry\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  sm: 4,\n                  className: \"align-items-center d-flex justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                    checked: state.isChargeable,\n                    type: \"switch\",\n                    id: \"isChargeable\",\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 4,\n                  children: \"Time to turn on the LPR camera\\u2019s LED\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(TimeField, {\n                    value: state.ledOnTime,\n                    id: \"ledOnTime\",\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 4,\n                  children: \"Time to turn off the LPR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                  column: true,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(TimeField, {\n                    value: state.ledOnTime,\n                    id: \"ledOnTime\",\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Row,\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                sm: {\n                  span: 8,\n                  offset: 7\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GateModal, \"ZUIEjd9xbwZ8ZMBeRBA4sUAH2hs=\");\n\n_c = GateModal;\nexport default {\n  GateModal\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"GateModal\");","map":{"version":3,"sources":["C:/Users/teowh/Desktop/Projects/Admin_Web/AdminWeb/src/components/GateModal.js"],"names":["useState","useEffect","useContext","Form","Row","Col","Button","Alert","Modal","TimeField","store","GateModal","props","storeContext","globalState","state","server_URL","ID","parseInt","id","toggleModel","toggleModal","validated","setValidated","setState","alert","setAlert","dummy","setDummy","console","log","requestOptions","method","headers","body","JSON","stringify","authID","serviceName","content","gateID","fetch","then","response","data","json","ok","error","message","status","Promise","reject","catch","errorMessage","toString","handleChange","e","value","target","prevState","handleSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","update","onShowAlert","window","setTimeout","modifyParams","margin","gateName","gateType","isOpenForInvalid","isOpenForTemp","isChargeable","ledOnTime","span","offset"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Alert, Modal } from \"react-bootstrap\";\r\nimport TimeField from 'react-simple-timefield';\r\nimport { store } from \"../store.js\";\r\n\r\nexport function GateModal(props) {\r\n    const storeContext = useContext(store);\r\n    const globalState = storeContext.state;\r\n    const server_URL = globalState.server_URL;\r\n    let ID = parseInt(props.id);\r\n    let toggleModel = props.toggleModal;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [alert, setAlert] = useState(null);\r\n    const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n      console.log(\"activated\");\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        authID: \"\",\r\n        serviceName: \"getGate\",\r\n        content: {\r\n            gateID: ID\r\n        }\r\n      })\r\n    };\r\n    \r\n    fetch(server_URL, requestOptions)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n  \r\n      // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      }\r\n      setState(data.message);\r\n    })\r\n    .catch((error) => {\r\n      this.setState({ errorMessage: error.toString() });\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()) update();\r\n  };\r\n\r\n  const onShowAlert = () => {\r\n    setAlert(true);\r\n    window.setTimeout(() => {\r\n      setAlert(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const update = () => {\r\n    const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n        authID: \"\",\r\n        serviceName: \"modifyGate\",\r\n        content: {\r\n            gateID: ID,\r\n            modifyParams: state\r\n        }\r\n    })\r\n    };\r\n    fetch(server_URL, requestOptions)\r\n    .then(async (response) => {\r\n        const data = await response.json();\r\n        // check for error response\r\n        if (data.status !== \"success\") {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n        }\r\n        onShowAlert(\"success\");\r\n    })\r\n    .catch((error) => {\r\n        onShowAlert(\"error\");\r\n        console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className =\"modalDevice\">\r\n      {alert === null ? null:\r\n        <Alert className=\"alert\" variant={alert===\"success\"?\"success\":\"danger\"}>\r\n          <p style={{margin:0}}>{alert===\"success\"?\"Update Successful\":\"An Error Occured\"}</p>\r\n        </Alert>\r\n      }\r\n      <div className = \"modal-dialog modalDevice modal-dialog-scrollable\">\r\n        <div className = \"modal-content\">\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Gate Details</Modal.Title>\r\n            </Modal.Header>\r\n            <div className=\"modal-body\">\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Project ID\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={4}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder={ID} readOnly />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Project Name\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={4}\r\n                    >\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"gateName\"\r\n                        name=\"gateName\"\r\n                        value={state.gateName}\r\n                        onChange={handleChange}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Name is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Project Type\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={4}\r\n                    >\r\n                        <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"gateType\"\r\n                        name=\"gateType\"\r\n                        value={state.gateType}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Type--</option>\r\n                        <option>entry</option>\r\n                        <option>exit</option>\r\n                        </Form.Control>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Gate Type is a required field.\r\n                        </Form.Control.Feedback>\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Open Gate for invalid/expired season pass holders\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={4}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isOpenForInvalid}\r\n                        type=\"switch\"\r\n                        id=\"isOpenForInvalid\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Open Gate for temporary vehicles\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={4}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isOpenForTemp}\r\n                        type=\"switch\"\r\n                        id=\"isOpenForTemp\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Charge fee for entry\r\n                    </Form.Label>\r\n                    <Col\r\n                        sm={4}\r\n                        className=\"align-items-center d-flex justify-content-center\"\r\n                    >\r\n                        <Form.Check\r\n                        checked={state.isChargeable}\r\n                        type=\"switch\"\r\n                        id=\"isChargeable\"\r\n                        onChange={handleChange}\r\n                        />\r\n                    </Col>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                    Time to turn on the LPR camera’s LED\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        sm={4}\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOnTime} \r\n                        id = \"ledOnTime\"\r\n                        onChange={handleChange} />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row}>\r\n                    <Form.Label column sm={4}>\r\n                        Time to turn off the LPR\r\n                    </Form.Label>\r\n                    <Form.Label\r\n                        column\r\n                        sm={4}\r\n                    >\r\n                        <TimeField \r\n                        value={state.ledOnTime} \r\n                        id = \"ledOnTime\"\r\n                        onChange={handleChange} />\r\n                    </Form.Label>\r\n                    </Form.Group>\r\n\r\n                </div>\r\n                <Form.Group as={Row}>\r\n                <Col sm={{ span: 8, offset: 7 }}>\r\n                    <Button type=\"submit\">Update</Button>\r\n                </Col>\r\n                </Form.Group>\r\n            </Form>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { GateModal };\r\n"]},"metadata":{},"sourceType":"module"}