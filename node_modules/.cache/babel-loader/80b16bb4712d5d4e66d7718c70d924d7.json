{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teowh\\\\Desktop\\\\Projects\\\\Admin_Web\\\\AdminWeb\\\\src\\\\pages\\\\projectSubPages\\\\Devices.js\",\n    _s = $RefreshSig$();\n\nimport { Card, Button, CardDeck, ButtonGroup, Modal, Breadcrumb } from \"react-bootstrap\";\nimport { useState, useEffect, useContext } from \"react\";\nimport { DeviceModal, GateModal } from \"../../components/index.js\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\nimport { ConfirmModal, QueryModal } from \"../../components/index.js\";\nimport { alertService, getDevice, getGate, createGate, createDevice } from '../../services/index.js';\nimport entry from '../../assets/entry.jpg';\nimport exit from '../../assets/exit.png';\nimport sample from \"../../assets/sample.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction image(value) {\n  switch (value) {\n    case \"entry\":\n      return entry;\n\n    case \"exit\":\n      return exit;\n\n    default:\n      return sample;\n  }\n\n  return entry;\n}\n\nexport function Devices(props) {\n  _s();\n\n  let ID = parseInt(props.ID);\n  const [dummy, setDummy] = useState(false);\n  const [gates, setGates] = useState([]);\n  const [devices, setDevices] = useState([]);\n  const [curGate, setCurGate] = useState(null);\n  const [curID, setCurId] = useState(null);\n  const [toggle, setToggle] = useState({\n    addGate: false,\n    delGate: false,\n    addDevice: false,\n    delDevice: false\n  });\n  const [info, setInfo] = useState({\n    type: null,\n    id: null\n  });\n  let cardMenu = [];\n  useEffect(() => {\n    getGate(ID, [\"gateID\", \"gateName\", \"gateType\"]).then(async data => {\n      setGates(data.content);\n    }).catch(error => {\n      alertService.error(\"There was an error!\" + error);\n      console.error(\"There was an error!\", error);\n    });\n  }, [dummy]);\n  useEffect(() => {\n    getDevice(curGate, [\"deviceID\", \"deviceName\", \"deviceType\", \"deviceStatus\"]).then(async data => {\n      console.log(curGate);\n      console.log(data.content);\n      setDevices(data.content);\n    }).catch(error => {\n      alertService.error(\"There was an error!\" + error);\n      console.error(\"There was an error!\", error);\n    });\n  }, [curGate]);\n\n  const handleAddGate = () => {\n    createGate(ID).then(async data => {\n      setDummy(false);\n      setCurGate(data.message.gateID);\n      alertService.success(\"Gate Added\");\n    }).catch(error => {\n      alertService.error(\"There was an error!\" + error);\n      console.error(\"There was an error!\", error);\n    });\n  };\n\n  const handleAddDevice = deviceID => {\n    console.log(\"adding\", deviceID);\n    /*    \r\n    createDevice(curGate, deviceID)\r\n    .then(async (data) => {\r\n      let newDevice = {\r\n        ...newDeviceReq,\r\n        gateID: data.message.gateID\r\n      }\r\n      setDevices((prevDevices) => \r\n        prevDevices.concat(newDevice)\r\n      );\r\n      alertService.success(\"Device Added\"\");\r\n    })\r\n    .catch((error) => {\r\n        alertService.error(\"There was an error!\" + error);\r\n      console.error(\"There was an error!\", error);\r\n    });*/\n  };\n\n  const delGate = id => {\n    console.log(\"deleting\", id);\n  };\n\n  const delDevice = id => {\n    console.log(\"deleting\", id);\n  };\n\n  const toggleModal = modal => {\n    let prevVal = toggle[modal];\n    setToggle(prevState => ({ ...prevState,\n      [modal]: !prevVal\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ConfirmModal, {\n      hide: toggle.delGate,\n      success: () => {\n        delGate(curID);\n      },\n      toggleModal: () => {\n        toggleModal(\"delGate\");\n      },\n      title: \"Confirm Deletion\",\n      body: \"Delete this gate?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmModal, {\n      hide: toggle.addGate,\n      success: () => {\n        handleAddGate();\n      },\n      toggleModal: () => {\n        toggleModal(\"addGate\");\n      },\n      title: \"Confirm Addition\",\n      body: \"Add a new gate?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmModal, {\n      hide: toggle.delDevice,\n      success: () => {\n        delDevice(curID);\n      },\n      toggleModal: () => {\n        toggleModal(\"delDevice\");\n      },\n      title: \"Confirm Deletion\",\n      body: \"Delete this device?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QueryModal, {\n      hide: toggle.addDevice,\n      success: handleAddDevice,\n      toggleModal: () => {\n        toggleModal(\"addDevice\");\n      },\n      title: \"Confirm Addition\",\n      body: \"Enter Device ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n        href: \"/home\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n        href: \"/project\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n        active: true,\n        children: \"Devices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: info.type === null ? null : info.type === \"gate\" ? /*#__PURE__*/_jsxDEV(GateModal, {\n        id: info.id,\n        toggleModal: () => setInfo({\n          type: null,\n          id: null\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(DeviceModal, {\n        id: info.id,\n        toggleModal: () => setInfo({\n          type: null,\n          id: null\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gateContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"gateHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-brand\",\n          children: \"Gates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"addGate\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"add\",\n          onClick: () => toggleModal(\"addGate\"),\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            style: {\n              color: \"#4caf50\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deviceTab cardDiv scrollbar scrollbar-primary align-items-center d-flex\",\n        children: /*#__PURE__*/_jsxDEV(CardDeck, {\n          children: gates.map(gate => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"deviceCard\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"delGate\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => {\n                  setCurId(gate.gateID);\n                  toggleModal(\"delGate\");\n                },\n                children: /*#__PURE__*/_jsxDEV(HighlightOffIcon, {\n                  style: {\n                    color: \"#d32f2f\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                children: gate.gateName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n                className: \"cardImg primary-transform\",\n                variant: \"top\",\n                src: image(gate.gateType)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                className: \"cardButton\",\n                onClick: () => {\n                  setInfo({\n                    type: \"gate\",\n                    id: gate.gateID\n                  });\n                  setCurGate(gate.gateID);\n                },\n                children: \"Devices\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), curGate === null ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deviceContainter\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"gateHeader\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-brand\",\n          children: \"Devices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"addGate\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"add\",\n          onClick: () => toggleModal(\"addDevice\"),\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {\n            style: {\n              color: \"#4caf50\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"deviceTab cardDiv scrollbar scrollbar-primary align-items-center d-flex\",\n        children: /*#__PURE__*/_jsxDEV(CardDeck, {\n          children: devices.map(device => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"deviceCard\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"delGate\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => {\n                  setCurId(device.deviceID);\n                  toggleModal(\"delDevice\");\n                },\n                children: /*#__PURE__*/_jsxDEV(HighlightOffIcon, {\n                  style: {\n                    color: \"#d32f2f\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                children: device.deviceName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n                style: {\n                  cursor: \"pointer\"\n                },\n                className: \"cardImg\" + device.deviceStatus === \"Offline\" ? \" primary-transform\" : \"\",\n                variant: \"top\",\n                src: image(device.deviceType),\n                onClick: () => {\n                  setInfo({\n                    type: \"device\",\n                    id: device.deviceID\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Devices, \"xi3lQ4rjPBuNtYqJbDPAEQjWm2w=\");\n\n_c = Devices;\nexport default {\n  Devices\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Devices\");","map":{"version":3,"sources":["C:/Users/teowh/Desktop/Projects/Admin_Web/AdminWeb/src/pages/projectSubPages/Devices.js"],"names":["Card","Button","CardDeck","ButtonGroup","Modal","Breadcrumb","useState","useEffect","useContext","DeviceModal","GateModal","IconButton","AddIcon","HighlightOffIcon","ConfirmModal","QueryModal","alertService","getDevice","getGate","createGate","createDevice","entry","exit","image","value","sample","Devices","props","ID","parseInt","dummy","setDummy","gates","setGates","devices","setDevices","curGate","setCurGate","curID","setCurId","toggle","setToggle","addGate","delGate","addDevice","delDevice","info","setInfo","type","id","cardMenu","then","data","content","catch","error","console","log","handleAddGate","message","gateID","success","handleAddDevice","deviceID","toggleModal","modal","prevVal","prevState","color","map","gate","gateName","gateType","device","deviceName","cursor","deviceStatus","deviceType"],"mappings":"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","sourcesContent":["import { Card, Button, CardDeck, ButtonGroup, Modal, Breadcrumb } from \"react-bootstrap\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { DeviceModal, GateModal } from \"../../components/index.js\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport { ConfirmModal, QueryModal } from \"../../components/index.js\";\r\nimport { alertService, getDevice, getGate, createGate, createDevice } from '../../services/index.js';\r\n\r\n\r\nimport entry from '../../assets/entry.jpg';\r\nimport exit from '../../assets/exit.png';\r\nimport sample from '../../assets/sample.svg';\r\n\r\nfunction image(value){\r\n  switch(value){\r\n    case \"entry\":\r\n      return entry;\r\n    case \"exit\":\r\n      return exit;\r\n    default:\r\n      return sample;\r\n  }\r\n  return entry;\r\n}\r\n\r\nexport function Devices(props) {\r\n  let ID = parseInt(props.ID);\r\n  const [dummy, setDummy] = useState(false);\r\n  const [gates, setGates] = useState([]);\r\n  const [devices, setDevices] = useState([]);\r\n  const [curGate, setCurGate] = useState(null);\r\n  const [curID,setCurId] = useState(null);\r\n  const [toggle, setToggle] = useState({\r\n    addGate: false,\r\n    delGate: false,\r\n    addDevice: false,\r\n    delDevice: false\r\n  });\r\n  const [info, setInfo] = useState({\r\n    type: null,\r\n    id: null\r\n  });\r\n  let cardMenu = [];\r\n  useEffect(() => {\r\n    getGate(ID, [\"gateID\", \"gateName\", \"gateType\"])\r\n    .then(async (data) => {\r\n      setGates(data.content);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\" + error);\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [dummy]);\r\n\r\n  useEffect(() => {\r\n    getDevice(curGate,[\"deviceID\", \"deviceName\", \"deviceType\", \"deviceStatus\"])\r\n    .then(async (data) => {\r\n      console.log(curGate);\r\n      console.log(data.content);\r\n      setDevices(data.content);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\" + error);\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  }, [curGate]);\r\n\r\n  const handleAddGate = () => {    \r\n    createGate(ID)\r\n    .then(async (data) => {\r\n      setDummy(false);\r\n      setCurGate(data.message.gateID);\r\n      alertService.success(\"Gate Added\");\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\" + error);\r\n      console.error(\"There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const handleAddDevice = (deviceID) => {\r\n    console.log(\"adding\",deviceID);\r\n    /*    \r\n    createDevice(curGate, deviceID)\r\n    .then(async (data) => {\r\n      let newDevice = {\r\n        ...newDeviceReq,\r\n        gateID: data.message.gateID\r\n      }\r\n      setDevices((prevDevices) => \r\n        prevDevices.concat(newDevice)\r\n      );\r\n      alertService.success(\"Device Added\"\");\r\n    })\r\n    .catch((error) => {\r\n        alertService.error(\"There was an error!\" + error);\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n  };\r\n\r\n  const delGate = (id) => {console.log(\"deleting\",id)};\r\n\r\n  const delDevice = (id) => {console.log(\"deleting\",id)};\r\n\r\n  const toggleModal = (modal) => {\r\n    let prevVal = toggle[modal];\r\n    setToggle((prevState) => ({\r\n      ...prevState,\r\n      [modal]: !prevVal\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ConfirmModal\r\n        hide={toggle.delGate}\r\n        success={() => {\r\n          delGate(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delGate\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this gate?\"\r\n      />\r\n      <ConfirmModal\r\n        hide={toggle.addGate}\r\n        success={() => {\r\n          handleAddGate();\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"addGate\");\r\n        }}\r\n        title=\"Confirm Addition\"\r\n        body=\"Add a new gate?\"\r\n      />\r\n      <ConfirmModal\r\n        hide={toggle.delDevice}\r\n        success={() => {\r\n          delDevice(curID);\r\n        }}\r\n        toggleModal={() => {\r\n          toggleModal(\"delDevice\");\r\n        }}\r\n        title=\"Confirm Deletion\"\r\n        body=\"Delete this device?\"\r\n      />\r\n      <QueryModal\r\n        hide={toggle.addDevice}\r\n        success={handleAddDevice}\r\n        toggleModal={() => {\r\n          toggleModal(\"addDevice\");\r\n        }}\r\n        title=\"Confirm Addition\"\r\n        body=\"Enter Device ID\"\r\n      />\r\n      \r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Devices</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <div>\r\n      {info.type === null? null:(\r\n        info.type === \"gate\"? \r\n        <GateModal \r\n        id={info.id}\r\n        toggleModal={\r\n          ()=>setInfo({\r\n            type: null,\r\n            id: null\r\n          })}\r\n          />\r\n          :\r\n          <DeviceModal \r\n        id={info.id}\r\n        toggleModal={\r\n          ()=>setInfo({\r\n            type: null,\r\n            id: null\r\n          })}\r\n          />\r\n      )}\r\n      </div>\r\n      <div className=\"gateContainer\">\r\n        <div id=\"gateHeader\">\r\n          <div className = \"navbar-brand\">Gates</div>\r\n        </div>\r\n        <div id=\"addGate\">\r\n          <IconButton aria-label=\"add\" onClick={()=> toggleModal(\"addGate\")}>\r\n            <AddIcon style={{ color: \"#4caf50\" }} />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"deviceTab cardDiv scrollbar scrollbar-primary align-items-center d-flex\">\r\n          <CardDeck>\r\n            {gates.map((gate) => (\r\n              <Card className = \"deviceCard\">\r\n                <div id=\"delGate\">\r\n                  <IconButton onClick={() => {\r\n                    setCurId(gate.gateID);\r\n                    toggleModal(\"delGate\");\r\n                  }}>\r\n                    <HighlightOffIcon style={{ color: \"#d32f2f\" }} />\r\n                  </IconButton>\r\n                </div>\r\n                <Card.Body>\r\n                  <Card.Text>{gate.gateName}</Card.Text>\r\n                  <Card.Img\r\n                    className = \"cardImg primary-transform\"\r\n                    variant=\"top\"\r\n                    src={image(gate.gateType)}\r\n                  />\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    className = \"cardButton\"\r\n                    onClick={() => {\r\n                      setInfo({\r\n                        type: \"gate\",\r\n                        id: gate.gateID\r\n                      });\r\n                      setCurGate(gate.gateID);\r\n                    }}\r\n                  >\r\n                    Devices\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            ))}\r\n          </CardDeck>\r\n        </div>\r\n      </div>\r\n      {curGate === null ? null : \r\n      <div className=\"deviceContainter\">\r\n        <div id=\"gateHeader\">\r\n        <div className = \"navbar-brand\">Devices</div>\r\n        </div>\r\n        <div id=\"addGate\">\r\n          <IconButton aria-label=\"add\" onClick={()=>toggleModal(\"addDevice\")}>\r\n            <AddIcon style={{ color: \"#4caf50\" }} />\r\n          </IconButton>\r\n        </div>\r\n        <div className=\"deviceTab cardDiv scrollbar scrollbar-primary align-items-center d-flex\">\r\n          <CardDeck>\r\n            {devices.map((device) => (\r\n              <Card className = \"deviceCard\">\r\n                <div id=\"delGate\">\r\n                  <IconButton onClick={() => {\r\n                    setCurId(device.deviceID);\r\n                    toggleModal(\"delDevice\");\r\n                  }}>\r\n                    <HighlightOffIcon style={{ color: \"#d32f2f\" }} />\r\n                  </IconButton>\r\n                </div>\r\n                <Card.Body>\r\n                  <Card.Text>{device.deviceName}</Card.Text>\r\n                  <Card.Img\r\n                    style = {{cursor: \"pointer\"}}\r\n                    className = {\"cardImg\" + device.deviceStatus === \"Offline\"? \" primary-transform\": \"\"}\r\n                    variant=\"top\"\r\n                    src={image(device.deviceType)}\r\n                    onClick={() => {\r\n                      setInfo({\r\n                        type: \"device\",\r\n                        id: device.deviceID\r\n                      });\r\n                    }}\r\n                  />\r\n                </Card.Body>\r\n              </Card>\r\n            ))}\r\n          </CardDeck>\r\n        </div>\r\n      </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Devices };\r\n"]},"metadata":{},"sourceType":"module"}