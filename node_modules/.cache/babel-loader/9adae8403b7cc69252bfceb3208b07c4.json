{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teowh\\\\Desktop\\\\Projects\\\\Admin_Web\\\\AdminWeb\\\\src\\\\pages\\\\projectSubPages\\\\ProjectForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport { Form, Row, Col, Button, Alert } from \"react-bootstrap\";\nimport PhoneInput from \"react-phone-input-2\";\nimport { store } from \"../../store.js\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction makeAlert(value) {\n  switch (value) {\n    case \"success\":\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        className: \"alert\",\n        variant: \"success\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Update Successful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this);\n      break;\n\n    case \"error\":\n      return /*#__PURE__*/_jsxDEV(Alert, {\n        className: \"alert\",\n        variant: \"danger\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"An Error Occured!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n      break;\n\n    default:\n  }\n}\n\nexport function ProjectForm(props) {\n  _s();\n\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  const server_URL = globalState.server_URL;\n  let ID = parseInt(props.ID);\n  const [validated, setValidated] = useState(false);\n  const [state, setState] = useState({\n    projectName: \"\",\n    projectType: \"\",\n    location: \"\",\n    contactNumber: \"\",\n    maCompany: \"\",\n    equipManu: \"\"\n  });\n  const [alert, setAlert] = useState(null);\n  const [dummy, setDummy] = useState(false);\n  useEffect(() => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        authID: \"\",\n        serviceName: \"getProject\",\n        content: {\n          projectID: ID\n        }\n      })\n    };\n    fetch(server_URL, requestOptions).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (data.status !== \"success\") {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      console.log(data.message);\n      setState(data.message);\n    }).catch(error => {\n      console.error(\"There was an error!\", error);\n    });\n  }, [dummy]);\n\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setState(prevState => ({ ...prevState,\n      [id]: value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === false) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    setValidated(true);\n    console.log(form.checkValidity());\n    if (form.checkValidity()) update();\n  };\n\n  const onShowAlert = val => {\n    setAlert(val);\n    window.setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const update = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        authID: \"\",\n        serviceName: \"modifyProject\",\n        content: {\n          projectID: ID,\n          modifyParams: state\n        }\n      })\n    };\n    fetch(server_URL, requestOptions).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (data.status !== \"success\") {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      console.log(data.message);\n      onShowAlert(\"success\");\n    }).catch(error => {\n      onShowAlert(\"success\");\n      console.error(\"There was an error!\", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [makeAlert(null), /*#__PURE__*/_jsxDEV(Form, {\n      noValidate: true,\n      validated: validated,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 4,\n          children: \"Project ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: ID,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 4,\n          children: \"Project Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 4,\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            placeholder: \"Name\",\n            id: \"projectName\",\n            name: \"projectName\",\n            value: state.projectName,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Project Name is a required field.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 4,\n          children: \"Project Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 4,\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            custom: true,\n            required: true,\n            as: \"select\",\n            id: \"projectType\",\n            name: \"projectType\",\n            value: state.projectType,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"--Select Type--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"condo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"hdb\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Project Type is a required field.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 4,\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 4,\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            id: \"location\",\n            name: \"location\",\n            value: state.location,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Location is a required field.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 4,\n          children: \"Equipment Manufacturer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 4,\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            id: \"equipManu\",\n            name: \"equipManu\",\n            value: state.equipManu,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Equipment Manufacturer is a required field.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 4,\n          children: \"MA Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 4,\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            id: \"maCompany\",\n            name: \"maCompany\",\n            value: state.maCompany,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"MA Company is a required field.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 4,\n          children: \"Contact No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(PhoneInput, {\n            inputProps: {\n              required: true\n            },\n            placeholder: \"+XX-XXXX-XXXX\",\n            id: \"contactNumber\",\n            name: \"contactNumber\",\n            country: \"sg\",\n            value: state.contactNumber,\n            onChange: e => {\n              setState(prevState => ({ ...prevState,\n                [\"contactNumber\"]: e\n              }));\n            },\n            isValid: (value, country) => {\n              if (value.length === 0) {\n                return false;\n              } else {\n                return true;\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: {\n            span: 8,\n            offset: 7\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProjectForm, \"mPMd9BKRAu1xacWFEdbr8cSUCac=\");\n\n_c = ProjectForm;\nexport default {\n  ProjectForm\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"sources":["C:/Users/teowh/Desktop/Projects/Admin_Web/AdminWeb/src/pages/projectSubPages/ProjectForm.js"],"names":["useState","useEffect","useContext","Form","Row","Col","Button","Alert","PhoneInput","store","makeAlert","value","ProjectForm","props","storeContext","globalState","state","server_URL","ID","parseInt","validated","setValidated","setState","projectName","projectType","location","contactNumber","maCompany","equipManu","alert","setAlert","dummy","setDummy","requestOptions","method","headers","body","JSON","stringify","authID","serviceName","content","projectID","fetch","then","response","data","json","status","error","message","Promise","reject","console","log","catch","handleChange","e","id","target","prevState","handleSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","update","onShowAlert","val","window","setTimeout","modifyParams","required","country","length","span","offset"],"mappings":"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","sourcesContent":["import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Alert } from \"react-bootstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport { store } from \"../../store.js\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\n\r\nfunction makeAlert(value){\r\n  switch(value){\r\n    case \"success\":\r\n      return(\r\n        <Alert className=\"alert\" variant=\"success\">\r\n          <p>Update Successful</p>\r\n        </Alert>\r\n      );\r\n      break;\r\n    case \"error\":\r\n      return(\r\n        <Alert className=\"alert\" variant=\"danger\">\r\n          <p>An Error Occured!</p>\r\n        </Alert>\r\n      );\r\n      break;\r\n    default:\r\n\r\n  }\r\n}\r\n\r\nexport function ProjectForm(props) {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  const server_URL = globalState.server_URL;\r\n  let ID = parseInt(props.ID);\r\n  const [validated, setValidated] = useState(false);\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    projectType: \"\",\r\n    location: \"\",\r\n    contactNumber: \"\",\r\n    maCompany: \"\",\r\n    equipManu: \"\"\r\n  });\r\n  const [alert, setAlert] = useState(null);\r\n  const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        authID: \"\",\r\n        serviceName: \"getProject\",\r\n        content: {\r\n          projectID: ID\r\n        }\r\n      })\r\n    };\r\n    fetch(server_URL, requestOptions)\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        // check for error response\r\n        if (data.status !== \"success\") {\r\n          // get error message from body or default to response status\r\n          const error = (data && data.message) || response.status;\r\n          return Promise.reject(error);\r\n        }\r\n        console.log(data.message);\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()) update();\r\n  };\r\n\r\n  const onShowAlert = (val) => {\r\n    setAlert(val);\r\n    window.setTimeout(() => {\r\n      setAlert(null);\r\n    }, 2000);\r\n  };\r\n\r\n  const update = () => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        authID: \"\",\r\n        serviceName: \"modifyProject\",\r\n        content: {\r\n          projectID: ID,\r\n          modifyParams: state\r\n        }\r\n      })\r\n    };\r\n    fetch(server_URL, requestOptions)\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n        // check for error response\r\n        if (data.status !== \"success\") {\r\n          // get error message from body or default to response status\r\n          const error = (data && data.message) || response.status;\r\n          return Promise.reject(error);\r\n        }\r\n        console.log(data.message)\r\n        onShowAlert(\"success\");\r\n      })\r\n      .catch((error) => {\r\n        onShowAlert(\"success\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {makeAlert(null)}\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project ID\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control type=\"text\" placeholder={ID} readOnly />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project Name\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              placeholder=\"Name\"\r\n              id=\"projectName\"\r\n              name=\"projectName\"\r\n              value={state.projectName}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Name is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Project Type\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              custom\r\n              required\r\n              as=\"select\"\r\n              id=\"projectType\"\r\n              name=\"projectType\"\r\n              value={state.projectType}\r\n              onChange={handleChange}\r\n            >\r\n              <option value={\"\"}>--Select Type--</option>\r\n              <option>condo</option>\r\n              <option>hdb</option>\r\n            </Form.Control>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Type is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Location\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"location\"\r\n              name=\"location\"\r\n              value={state.location}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Location is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Equipment Manufacturer\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"equipManu\"\r\n              name=\"equipManu\"\r\n              value={state.equipManu}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Equipment Manufacturer is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            MA Company\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"maCompany\"\r\n              name=\"maCompany\"\r\n              value={state.maCompany}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              MA Company is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Contact No.\r\n          </Form.Label>\r\n          <Form.Label\r\n            column\r\n            sm={4}\r\n          >\r\n            <PhoneInput\r\n              inputProps={{\r\n                required: true\r\n              }}\r\n              placeholder=\"+XX-XXXX-XXXX\"\r\n              id=\"contactNumber\"\r\n              name=\"contactNumber\"\r\n              country={\"sg\"}\r\n              value={state.contactNumber}\r\n              onChange={(e)=>{\r\n                setState((prevState) => ({\r\n                  ...prevState,\r\n                  [\"contactNumber\"]: e\r\n                }));\r\n              }}\r\n              isValid={(value, country) => {\r\n                if (value.length === 0) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              }}\r\n            />\r\n          </Form.Label>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col sm={{ span: 8, offset: 7 }}>\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ProjectForm };\r\n"]},"metadata":{},"sourceType":"module"}