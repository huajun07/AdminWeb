[{"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\index.js":"1","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\store.js":"2","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\App.js":"3","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\index.js":"4","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\index.js":"5","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\NavBar.js":"6","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\Projects.js":"7","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\Login.js":"8","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\EditProject.js":"9","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\Home.js":"10","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\projectSubPages\\index.js":"11","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\projectSubPages\\Devices.js":"12","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\projectSubPages\\BusinessDetails.js":"13","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\projectSubPages\\ProjectForm.js":"14","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\GateModal.js":"15","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\ConfirmModal.js":"16","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\QueryModal.js":"17","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\DeviceModal.js":"18","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\services\\index.js":"19","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\services\\alertService.js":"20","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\AlertGroup.js":"21","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\services\\api.js":"22","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\TablePaginationActions.js":"23","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\projectSubPages\\LedConfig.js":"24","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\PlateRegex.js":"25","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\Records.js":"26","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\ParkRecords.js":"27","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\ParkingRules.js":"28","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\projectSubPages\\Gates.js":"29","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\RulesModal.js":"30","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\ImageModal.js":"31","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\Whitelist.js":"32","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\WhitelistModal.js":"33"},{"size":315,"mtime":1618497854270,"results":"34","hashOfConfig":"35"},{"size":852,"mtime":1620406849272,"results":"36","hashOfConfig":"35"},{"size":3270,"mtime":1620319868675,"results":"37","hashOfConfig":"35"},{"size":614,"mtime":1620151918951,"results":"38","hashOfConfig":"35"},{"size":477,"mtime":1620150942991,"results":"39","hashOfConfig":"35"},{"size":6441,"mtime":1620916751271,"results":"40","hashOfConfig":"35"},{"size":10464,"mtime":1620916703696,"results":"41","hashOfConfig":"35"},{"size":4244,"mtime":1618497854321,"results":"42","hashOfConfig":"35"},{"size":2348,"mtime":1619625339641,"results":"43","hashOfConfig":"35"},{"size":10347,"mtime":1620912284816,"results":"44","hashOfConfig":"35"},{"size":282,"mtime":1619275881959,"results":"45","hashOfConfig":"35"},{"size":10208,"mtime":1620916719128,"results":"46","hashOfConfig":"35"},{"size":5717,"mtime":1620399613026,"results":"47","hashOfConfig":"35"},{"size":7371,"mtime":1620399516955,"results":"48","hashOfConfig":"35"},{"size":10230,"mtime":1620837833809,"results":"49","hashOfConfig":"35"},{"size":764,"mtime":1618858211721,"results":"50","hashOfConfig":"35"},{"size":1249,"mtime":1618940686909,"results":"51","hashOfConfig":"35"},{"size":15449,"mtime":1620837833808,"results":"52","hashOfConfig":"35"},{"size":1776,"mtime":1620916190904,"results":"53","hashOfConfig":"35"},{"size":1196,"mtime":1618770665625,"results":"54","hashOfConfig":"35"},{"size":1652,"mtime":1618772534336,"results":"55","hashOfConfig":"35"},{"size":17375,"mtime":1620916183429,"results":"56","hashOfConfig":"35"},{"size":1714,"mtime":1618841461587,"results":"57","hashOfConfig":"35"},{"size":7807,"mtime":1619626977372,"results":"58","hashOfConfig":"35"},{"size":16685,"mtime":1620914684542,"results":"59","hashOfConfig":"35"},{"size":15197,"mtime":1620914989158,"results":"60","hashOfConfig":"35"},{"size":222,"mtime":1619113662369,"results":"61","hashOfConfig":"35"},{"size":9930,"mtime":1620916726329,"results":"62","hashOfConfig":"35"},{"size":10306,"mtime":1620916694565,"results":"63","hashOfConfig":"35"},{"size":8399,"mtime":1620837833811,"results":"64","hashOfConfig":"35"},{"size":292,"mtime":1619430373878,"results":"65","hashOfConfig":"35"},{"size":11773,"mtime":1620915962478,"results":"66","hashOfConfig":"35"},{"size":11556,"mtime":1620404967371,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1c3amt0",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"70"},"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\index.js",[],["148","149"],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\store.js",[],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\App.js",["150"],"import React, { useContext } from \"react\";\nimport { store } from \"./store.js\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport \"./styles.css\";\nimport \"./assets/scrollbar.css\";\nimport { NavBar, AlertGroup } from \"./components/index.js\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nimport { Home, Login, Projects, EditProject, PlateRegex, Records, ParkRecords, ParkingRules, Whitelist } from \"./pages/index.js\";\n\nclass DebugRouter extends Router {\n  constructor(props) {\n    super(props);\n    console.log(\"initial history is: \", JSON.stringify(this.history, null, 2));\n    this.history.listen((location, action) => {\n      console.log(\n        `The current URL is ${location.pathname}${location.search}${location.hash}`\n      );\n      console.log(\n        `The last navigation action was ${action}`,\n        JSON.stringify(this.history, null, 2)\n      );\n    });\n  }\n}\n\nexport function App() {\n  return (\n    // <DebugRouter>\n    <Router>\n      <Switch>\n        <PrivateRoute path=\"/home\">\n          <Home />\n        </PrivateRoute>\n        <PrivateRoute path=\"/project/:projectID\">\n          <EditProject />\n        </PrivateRoute>\n        <PrivateRoute path=\"/project\">\n          <Projects />\n        </PrivateRoute>\n        <PrivateRoute path=\"/regex\">\n          <PlateRegex />\n        </PrivateRoute>\n        <PrivateRoute path=\"/records\">\n          <Records />\n        </PrivateRoute>\n        <PrivateRoute path=\"/parking\">\n          <ParkRecords />\n        </PrivateRoute>\n        <PrivateRoute path=\"/accessRules\">\n          <ParkingRules />\n        </PrivateRoute>\n        <PrivateRoute path=\"/whitelist\">\n          <Whitelist />\n        </PrivateRoute>\n        <PublicRoute path=\"/\">\n          <Login />\n        </PublicRoute>\n      </Switch>\n    </Router>\n    // </DebugRouter>\n  );\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  let auth = globalState.auth;\n  let toggled = globalState.toggled;\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        auth ? (\n          <div className=\"h-100\">\n              <AlertGroup />\n            <NavBar />\n            <div id=\"content-body\" className={toggled?\"content-body-collapsed\":\"content-body-expand\"}>\n              {React.cloneElement(children, { params: props.match.params })}\n            </div>\n          </div>\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ children, ...rest }) {\n  const storeContext = useContext(store);\n  const globalState = storeContext.state;\n  let auth = globalState.auth;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth ? (\n          <Redirect\n            to={{\n              pathname: \"/home\",\n              state: { from: location }\n            }}\n          />\n        ) : \n        <div className=\"h-100\">\n        <AlertGroup />\n          {children}\n        </div>\n      }\n    />\n  );\n}\n\nexport default App;\n","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\index.js",[],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\index.js",[],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\NavBar.js",["151","152","153","154"],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\Projects.js",["155","156","157","158"],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\Login.js",["159","160"],"import React, { useState, useContext } from \"react\";\r\nimport { store } from \"../store.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport function Login() {\r\n  const storeContext = useContext(store);\r\n  const globalState = storeContext.state;\r\n  const { dispatch } = storeContext;\r\n  let history = useHistory();\r\n  const [state, setState] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  });\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n  const reqLogin = (e) => {\r\n    e.preventDefault();\r\n    let { username, password } = state;\r\n    /*\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        username,\r\n        password\r\n      })\r\n    };\r\n    \r\n    fetch(server_URL + \"/login\", requestOptions)\r\n    .then(async (response) => {\r\n      const data = await response.json();\r\n  \r\n      // check for error response\r\n      if (!response.ok) {\r\n        // get error message from body or default to response status\r\n        const error = (data && data.message) || response.status;\r\n        return Promise.reject(error);\r\n      }\r\n  \r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      return(\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/home\"\r\n          }}\r\n        />\r\n      );\r\n    })\r\n    .catch((error) => {\r\n      this.setState({ errorMessage: error.toString() });\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    if (username === \"huajun\" && password === \"huajun\") {\r\n      dispatch({\r\n        type: \"setAuth\",\r\n        value: true\r\n      });\r\n      dispatch({\r\n        type: \"setUser\",\r\n        value: username\r\n      });\r\n      history.push(\"/home\");\r\n    } else if (username.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Username cannot be blank\";\r\n    } else if (password.length === 0) {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Password cannot be blank\";\r\n    } else {\r\n      document.getElementById(\"login-error\").innerText =\r\n        \"Invalid Username or Password\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"maincontainer h-100\">\r\n      <div className=\"container-fluid bg-light h-100\">\r\n        <div className=\"login d-flex align-items-center py-5\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xs-10 col-sm-6 col-md-5 col-xl-4 mx-auto \">\r\n                <h3 className=\"display-4\">Login</h3>\r\n                <p className=\"text-muted mb-4\">\r\n                  Enter your credentials to login.\r\n                </p>\r\n                <form>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"username\"\r\n                      type=\"username\"\r\n                      placeholder=\"Username\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4\"\r\n                      onChange={handleChange}\r\n                      value={state.username}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group mb-3\">\r\n                    <input\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      placeholder=\"Password\"\r\n                      required=\"required\"\r\n                      className=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\r\n                      onChange={handleChange}\r\n                      value={state.password}\r\n                    />\r\n                  </div>\r\n                  <p id=\"login-error\" className=\"text-danger\"></p>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block text-uppercase mb-2 rounded-pill shadow-sm\"\r\n                    onClick={reqLogin}\r\n                  >\r\n                    Sign in\r\n                  </button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { Login };\r\n","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\EditProject.js",["161","162","163"],"import {\r\n  ProjectForm,\r\n  BusinessDetails,\r\n  Devices,\r\n  LedConfig,\r\n  Gates\r\n} from \"./projectSubPages/index.js\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport {Nav, Tab} from \"react-bootstrap\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useHistory,\r\n  useRouteMatch,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nexport function EditProject(props) {\r\n  let history = useHistory();\r\n  let { path, url } = useRouteMatch();\r\n  let {pathname} = useLocation();\r\n  let page = pathname.split('/')[3];\r\n  const direct = (path) =>{\r\n    history.push(url+path);\r\n  }\r\n  return (\r\n    <div className=\"tabModal\" style={{background:\"transparent\"}}>\r\n      <Tab.Container id=\"left-tabs-example\" >\r\n        <Row>\r\n          <Col xs=\"auto\">\r\n            <Nav variant=\"pills\" className=\"flex-column\">\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/info\")}} active = {page===\"info\"}>Infomation</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/business\")}} active = {page===\"business\"}>Business</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/gate\")}} active = {page===\"gate\"}>Gates</Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link onClick={()=>{direct(\"/ledconfig\")}} active = {page===\"ledconfig\"}>LED Config</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n          <Switch>\r\n            <Route exact path={`${path}/info`}>\r\n              <ProjectForm />\r\n            </Route>\r\n            <Route exact path={`${path}/business`}>\r\n              <BusinessDetails />\r\n            </Route>\r\n            <Route exact path={`${path}/gate/:gateID`}>\r\n              <Devices />\r\n            </Route>\r\n            <Route exact path={`${path}/gate`}>\r\n              <Gates />\r\n            </Route>\r\n            <Route exact path={`${path}/ledconfig`}>\r\n              <LedConfig />\r\n            </Route>\r\n            <Route path={path}>\r\n              <Redirect to={`${url}/info`} />\r\n            </Route>\r\n          </Switch>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { EditProject };\r\n","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\Home.js",["164","165","166","167","168","169","170","171","172","173","174","175"],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\projectSubPages\\index.js",[],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\projectSubPages\\Devices.js",["176","177","178","179","180","181","182","183","184","185","186"],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\projectSubPages\\BusinessDetails.js",["187","188","189","190","191"],"import { useState, useEffect } from \"react\";\r\nimport { Form, Row, Col, Button, InputGroup, Breadcrumb } from \"react-bootstrap\";\r\nimport NumericInput from \"react-numeric-input\";\r\nimport { alertService, getBusinessInfo, updateBusinessInfo, getProjectInfo } from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function BusinessDetails(props) {\r\n  let {projectID} = useParams();\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    barrierDelay: 5,\r\n    networkWarningDuration: 5,\r\n    instantImgUpload: false,\r\n    vehicleColorDetect: false,\r\n    localImgStore: false\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    /*   \r\n    getBusinessInfo(projectID)\r\n    .then(async (data) => {\r\n      setState(data.message)\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n    let res = {\r\n      barrierDelay: 5,\r\n      networkWarningDuration: 5,\r\n      instantImgUpload: false,\r\n      vehicleColorDetect: false,\r\n      localImgStore: false\r\n    };\r\n    setState(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    update();\r\n  };\r\n\r\n  const update = () => {\r\n    /* Pending API for project details update*/\r\n  };\r\n\r\n  function myFormat(num) {\r\n    return num + \" mins\";\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Business Details</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Breadcrumb>\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      </Breadcrumb>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Barrier Opening Delay\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"barrierDelay\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.barrierDelay}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Duration before issuing network down warning\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <InputGroup>\r\n              <NumericInput\r\n                strict\r\n                id=\"networkWarningDuration\"\r\n                format={myFormat}\r\n                className=\"form-control\"\r\n                value={state.networkWarningDuration}\r\n                min={0}\r\n                max={100}\r\n                onChange={handleChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Instant Image Upload to Server\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\"align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.instantImgUpload}\r\n              type=\"switch\"\r\n              id=\"instantImgUpload\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Local Storage of images after uploading\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.localImgStore}\r\n              type=\"switch\"\r\n              id=\"localImgStore\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={4}>\r\n            Enable Vehicle Colour Detection\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n            className=\" align-items-center d-flex justify-content-center\"\r\n          >\r\n            <Form.Check\r\n              checked={state.vehicleColorDetect}\r\n              type=\"switch\"\r\n              id=\"vehicleColorDetect\"\r\n              onChange={handleChange}\r\n            />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Col sm={8}\r\n           className=\"d-flex justify-content-end\">\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { BusinessDetails };\r\n","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\projectSubPages\\ProjectForm.js",["192","193","194","195","196"],"import { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Breadcrumb } from \"react-bootstrap\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { alertService, getProjectInfo, updateProjectInfo , getObjectTypes} from '../../services/index.js';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport function ProjectForm() {\r\n  let { projectID }= useParams();\r\n  const [validated, setValidated] = useState(false);\r\n  const [state, setState] = useState({\r\n    projectName: \"\",\r\n    projectType: \"\",\r\n    location: \"\",\r\n    contactNumber: \"\",\r\n    maCompany: \"\",\r\n    equipManu: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const [projectTypes, setProjectTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getProjectInfo(projectID)\r\n      .then(async (data) => {\r\n        setState(data.message);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Project Info!\", error);\r\n      });\r\n      getObjectTypes(\"project\")\r\n      .then(async (data) => {\r\n        setProjectTypes(Object.entries(data.message).map((type)=>({\r\n          id: type[0],\r\n          name: type[1].name\r\n        })));\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error Get Project Types!\", error);\r\n      });\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    console.log(form.checkValidity());\r\n    if (form.checkValidity()) update();\r\n  };\r\n\r\n  const update = () => {\r\n    updateProjectInfo(projectID, state)\r\n      .then(async (data) => {\r\n        alertService.success('Update Successful!');\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>Project Info</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Project ID\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control type=\"text\" placeholder={projectID} readOnly />\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Project Name\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              placeholder=\"Name\"\r\n              id=\"projectName\"\r\n              name=\"projectName\"\r\n              value={state.projectName}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Name is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Project Type\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              custom\r\n              required\r\n              as=\"select\"\r\n              id=\"projectType\"\r\n              name=\"projectType\"\r\n              value={state.projectType===null? '':state.projectType}\r\n              onChange={handleChange}\r\n            >\r\n              <option value={''}>--Select Type--</option>\r\n              {\r\n                projectTypes.map((type)=>(\r\n                  <option value={type.id}>{type.name}</option>\r\n                ))\r\n              }\r\n            </Form.Control>\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Project Type is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Location\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"location\"\r\n              name=\"location\"\r\n              value={state.location}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Location is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Equipment Manufacturer\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"equipManu\"\r\n              name=\"equipManu\"\r\n              value={state.equipManu}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Equipment Manufacturer is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n      </Form.Group>\r\n\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            MA Company\r\n          </Form.Label>\r\n          <Col\r\n            sm={4}\r\n          >\r\n            <Form.Control\r\n              required\r\n              id=\"maCompany\"\r\n              name=\"maCompany\"\r\n              value={state.maCompany}\r\n              onChange={handleChange}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              MA Company is a required field.\r\n            </Form.Control.Feedback>\r\n          </Col>\r\n        </Form.Group>\r\n        <Form.Group as={Row}>\r\n          <Form.Label column sm={3} align=\"right\">\r\n            Contact No.\r\n          </Form.Label>\r\n          <Form.Label\r\n            column\r\n            sm={4}\r\n          >\r\n            <PhoneInput\r\n              inputProps={{\r\n                required: true\r\n              }}\r\n              placeholder=\"+XX-XXXX-XXXX\"\r\n              id=\"contactNumber\"\r\n              name=\"contactNumber\"\r\n              country={\"sg\"}\r\n              value={String(state.contactNumber)}\r\n              onChange={(e)=>{\r\n                setState((prevState) => ({\r\n                  ...prevState,\r\n                  [\"contactNumber\"]: parseInt(e)\r\n                }));\r\n              }}\r\n              isValid={(value, country) => {\r\n                if (value.length === 0) {\r\n                  return false;\r\n                } else {\r\n                  return true;\r\n                }\r\n              }}\r\n            />\r\n          </Form.Label>\r\n        </Form.Group>\r\n\r\n        \r\n        <Form.Group as={Row}>\r\n          <Col sm={8}\r\n           className=\"d-flex justify-content-end\">\r\n            <Button type=\"submit\">Update</Button>\r\n          </Col>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { ProjectForm };\r\n","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\GateModal.js",["197","198","199","200"],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\ConfirmModal.js",["201"],"import { Button, Modal } from \"react-bootstrap\";\r\n\r\nexport function ConfirmModal(props) {\r\n  let toggleModal = props.toggleModal;\r\n  let success = props.success;\r\n  let hide = props.hide;\r\n  let body = props.body;\r\n  let title = props.title;\r\n  return (\r\n    <Modal show={hide} onHide={toggleModal}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>{body}</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={toggleModal}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={()=>{\r\n          success();\r\n        }}>\r\n          Confirm\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { ConfirmModal};\r\n","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\QueryModal.js",["202"],"import { Button, Modal, Form } from \"react-bootstrap\";\r\nimport {useState} from 'react';\r\n\r\nexport function QueryModal(props) {\r\n    let toggleModal = props.toggleModal;\r\n    let success = props.success;\r\n    let hide = props.hide;\r\n    let body = props.body;\r\n    let title = props.title;\r\n    const [value,setValue] = useState(\"\");\r\n    const handleChange = (e) =>{\r\n      setValue(e.target.value);\r\n    }\r\n    const exit = () =>{\r\n      setValue(\"\");\r\n      toggleModal();\r\n    }\r\n    return (\r\n      <Modal show={hide} onHide={exit}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Label>{body}</Form.Label>\r\n            <Form.Control \r\n            value={value}\r\n            onChange={handleChange}\r\n            />\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={exit}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>{\r\n              success(value);\r\n              exit();\r\n              }}>\r\n            Confirm\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n}\r\n\r\nexport default {QueryModal};","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\DeviceModal.js",["203","204","205","206"],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\services\\index.js",[],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\services\\alertService.js",[],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\AlertGroup.js",["207","208","209"],"import React from 'react';\r\n\r\nimport { alertService, alertType } from '../services/index.js';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nexport class AlertGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            alerts: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // subscribe to new alert notifications\r\n        this.subscription = alertService.onAlert(this.props.id)\r\n            .subscribe(alert => {\r\n                // add alert to array\r\n                this.setState({ alerts: [...this.state.alerts, alert] });\r\n\r\n                // auto close alert if required\r\n                setTimeout(() => this.removeAlert(alert), 3000);\r\n            });\r\n\r\n        // clear alerts on location change\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // unsubscribe & unlisten to avoid memory leaks\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    removeAlert(alert) {\r\n        this.setState({ alerts: this.state.alerts.filter(x => x !== alert) })\r\n    }\r\n\r\n    render() {\r\n        const { alerts } = this.state;\r\n        if (!alerts.length) return null;\r\n        return (\r\n            <div className=\"alertGrp\">\r\n                {console.log(alerts),\r\n                alerts.map((alert,idx) =>\r\n                    <Alert \r\n                    key = {idx} \r\n                    variant={alert.type}\r\n                    dismissible = {true}\r\n                    onClose={()=>{this.removeAlert(alert)}}>\r\n                        {alert.message}\r\n                    </Alert>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default {AlertGroup} ;","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\services\\api.js",["210"],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\TablePaginationActions.js",["211"],"import {IconButton} from '@material-ui/core';\r\n\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\nexport function TablePaginationActions(props) {\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div style={{flexShrink:0, right:0}}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        <FirstPageIcon />\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n         <KeyboardArrowLeft />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        <KeyboardArrowRight />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        <LastPageIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default {TablePaginationActions};","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\projectSubPages\\LedConfig.js",["212","213","214"],"import React, { useState, useEffect } from \"react\";\r\nimport { Breadcrumb } from \"react-bootstrap\";\r\nimport {Input , TableFooter, TablePagination, TableContainer, TableCell, TableBody, Table, IconButton, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { TablePaginationActions } from \"../../components/index.js\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getProjectInfo, alertService} from '../../services/index.js';\r\n\r\nimport { PencilSquare } from \"react-bootstrap-icons\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nexport function LedConfig(props) {\r\n  let {projectID} = useParams();\r\n  const [rows, setRows] = useState([]);\r\n  const [curID, setCurID] = useState(null);\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [state, setState] = useState({\r\n    trigger: \"\",\r\n    voiceMsg: \"\",\r\n    textMsg: \"\"\r\n  });\r\n  const [dummy, setDummy] = useState(false);\r\n  const reload = () =>{\r\n    getProjectInfo(projectID)\r\n    .then(async (data) => {\r\n      setProjectName(data.message.projectName);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Project Info, there was an error!\", error);\r\n    });\r\n    /*getProjects([\"projectID\", \"projectName\", \"location\", \"projectType\"])\r\n    .then(async (data) => {\r\n      console.log(data.content);\r\n      setInitialRows(data.content);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"There was an error!\", error);\r\n    });*/\r\n  }\r\n  useEffect(() => {\r\n    reload();\r\n    let res = [\r\n        {\r\n            id: 1,\r\n            trigger: \"Trigger 1\",\r\n            voiceMsg: \"Sample 1\",\r\n            textMsg: \"Sample 01\"\r\n        },\r\n        {\r\n            id: 2,\r\n            trigger: \"Trigger 2\",\r\n            voiceMsg: \"Sample 2\",\r\n            textMsg: \"Sample 02\"\r\n        },\r\n        {\r\n            id: 3,\r\n            trigger: \"Trigger 3\",\r\n            voiceMsg: \"Sample 3\",\r\n            textMsg: \"Sample 03\"\r\n        },\r\n        {\r\n            id: 4,\r\n            trigger: \"Trigger 4\",\r\n            voiceMsg: \"Sample 4\",\r\n            textMsg: \"Sample 04\"\r\n        },\r\n        {\r\n            id: 5,\r\n            trigger: \"Trigger 5\",\r\n            voiceMsg: \"Sample 5\",\r\n            textMsg: \"Sample 05\"\r\n        },\r\n        {\r\n            id: 6,\r\n            trigger: \"Trigger 6\",\r\n            voiceMsg: \"Sample 6\",\r\n            textMsg: \"Sample 06\"\r\n        }\r\n    ];\r\n    setRows(res);\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }));\r\n  };\r\n\r\n  const save = () =>{\r\n    // API\r\n    //reload();\r\n  }\r\n\r\n  const edit = (vals) =>{\r\n    const {id, trigger, voiceMsg, textMsg} = vals;\r\n    setState({\r\n        trigger, \r\n        voiceMsg, \r\n        textMsg});\r\n    setCurID(id);\r\n  }\r\n  \r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setCurID(null);\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n      <Breadcrumb>\r\n        <Breadcrumb.Item href=\"/home\">Home</Breadcrumb.Item>\r\n        <Breadcrumb.Item href=\"/project\">Projects</Breadcrumb.Item>\r\n        <Breadcrumb.Item active>LED Configuration</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n      <Breadcrumb>\r\n      <h5 style={{color:\"#6c757d\"}}>{projectName}</h5>\r\n      </Breadcrumb>\r\n      </div>\r\n      <div className=\"content\">\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">Trigger</TableCell>\r\n                <TableCell align=\"center\">Voice Message</TableCell>\r\n                <TableCell align=\"center\">Text Message</TableCell>\r\n                <TableCell align=\"right\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\r\n                    {row.trigger}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"voiceMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.voiceMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.voiceMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {curID === row.id?\r\n                    <Input \r\n                        id=\"textMsg\" \r\n                        label=\"Standard\"\r\n                        value = {state.textMsg}\r\n                        onChange = {handleChange} />\r\n                    :row.textMsg\r\n                    }\r\n                  </TableCell>\r\n                  <TableCell align=\"right\"  style={{padding:0}}>\r\n                    {curID === null?\r\n                        (<IconButton onClick={() => edit(row)}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            color=\"royalblue\"\r\n                            />\r\n                        </IconButton>)\r\n                        :(\r\n                        curID === row.id?\r\n                        <div>\r\n                            <IconButton onClick={() => save()}>\r\n                                <SaveIcon\r\n                                size={21}\r\n                                color=\"primary\"\r\n                                />\r\n                            </IconButton>\r\n                            <IconButton onClick={() => setCurID(null)}>\r\n                                <CloseIcon\r\n                                size={21}\r\n                                color=\"error\"\r\n                                />\r\n                            </IconButton>\r\n                        </div>\r\n                        :\r\n                        (<IconButton disabled = {true}>\r\n                            <PencilSquare\r\n                            size={21}\r\n                            />\r\n                        </IconButton>)\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, { label: 'All', value: -1 }]}\r\n                colSpan={4}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default { LedConfig };\r\n","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\PlateRegex.js",["215","216","217","218","219"],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\Records.js",["220","221","222","223","224","225","226","227","228","229","230","231","232","233"],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\ParkRecords.js",["234","235","236"],"import React, { useState, useEffect } from \"react\";\r\n\r\nexport function ParkRecords({ match }) {\r\n  return (<div className=\"d-flex justify-content-center\"><h1>Pending API</h1></div>);\r\n}\r\n\r\nexport default { ParkRecords };\r\n","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\ParkingRules.js",["237","238","239","240","241","242","243","244","245","246","247","248","249"],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\projectSubPages\\Gates.js",["250","251","252","253","254","255"],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\RulesModal.js",["256","257","258","259","260","261","262","263"],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\ImageModal.js",["264","265"],"import {Modal} from 'react-bootstrap';\r\n\r\nexport function ImageModal (props){\r\n    let {toggleModal, src} = props;\r\n    return(\r\n    <Modal size=\"lg\" centered show={src===null?false:true} onHide={toggleModal}>\r\n        <img src={src}/>\r\n    </Modal>\r\n    );\r\n}\r\n\r\nexport default {ImageModal};","C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\pages\\Whitelist.js",["266","267","268","269","270","271","272","273","274","275","276","277"],"C:\\Users\\teowh\\Desktop\\Projects\\Admin_Web\\AdminWeb\\src\\components\\WhitelistModal.js",["278","279","280","281","282","283","284"],"import { func } from \"prop-types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { Form, Row, Col, Button, Modal, Spinner } from \"react-bootstrap\";\r\nimport { alertService, getWhitelistEntryInfo, updateWhitelistEntryInfo, createWhitelistEntry, getWhitelistTags, getPlates } from '../services/index.js';\r\nimport {DatePicker, SelectPicker} from 'rsuite';\r\n\r\nfunction pad2(n) { return n < 10 ? '0' + n : n }\r\nfunction dateToString(date){\r\n  if(date===null)return \"\";\r\n  else return date.getFullYear().toString() +'-'+ pad2(date.getMonth() + 1) +'-'+ pad2( date.getDate()) +' '+ pad2( date.getHours() ) +':'+ pad2( date.getMinutes() ) +':'+ pad2( date.getSeconds() );\r\n}\r\n\r\nfunction minStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 > str2)return str2;\r\n  else return str1;\r\n}\r\nfunction maxStr(str1, str2){\r\n  if(str1===\"\")return str2;\r\n  if(str2===\"\")return \"\";\r\n  if(str1 < str2)return str2;\r\n  else return str1;\r\n}\r\n\r\nexport function WhitelistModal(props) {\r\n    let {hide, ID, success, projectName, accessRules, toggleModal } = props;\r\n    let cnt = 0;\r\n    const [validated, setValidated] = useState(false);\r\n    const [state, setState] = useState({});\r\n    const [dummy, setDummy] = useState(false);\r\n    const [whitelistTags, setWhitelistTags] = useState([]);\r\n    const [plates,setPlates] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const reloadTags = ()=>{\r\n    getWhitelistTags()\r\n    .then(async (data) => {\r\n      setWhitelistTags(data.message.whitelistTags);\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get WhiteList Tags, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  const reloadPlate = ()=>{\r\n    getPlates([\"plateNumber\"])\r\n    .then(async (data) => {\r\n      setPlates(data.content.map((plate)=>plate.plateNumber));\r\n    })\r\n    .catch((error) => {\r\n      alertService.error(\"There was an error!\");\r\n      console.error(\"Get Plate Number, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setValidated(false);\r\n    reloadTags();\r\n    reloadPlate();\r\n    if(ID===null){\r\n      setState({\r\n        plateNumber: \"\",\r\n        accessRuleID: \"\",\r\n        tag: \"\",\r\n        startDateTime: \"\",\r\n        endDateTime: \"\"\r\n      });\r\n    }else{\r\n      setLoading(true);\r\n      getWhitelistEntryInfo(ID)\r\n      .then(async (data) => {\r\n          console.log(data.message);\r\n        setState(data.message);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        alertService.error(\"There was an error!\");\r\n        console.error(\"Get Whitelist entry info, There was an error!\", error);\r\n      });\r\n    }\r\n  }, [dummy]);\r\n\r\n  const handleChange = (e, filler, e2) => {\r\n    let id, value;\r\n    if (e2 === undefined) {\r\n      id = e.target.id;\r\n      value = e.target.value;\r\n    } else {\r\n      id = e2.id;\r\n      value = e;\r\n    }\r\n    if (typeof state[id] === \"boolean\") {\r\n        console.log(\"bool\");\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: !state[id]\r\n      }));\r\n    } else {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        [id]: value\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    setValidated(true);\r\n    if (form.checkValidity()){\r\n      if(ID===null) create();\r\n      else update();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    setLoading(true);\r\n    console.log(state);\r\n    updateWhitelistEntryInfo(state)\r\n    .then(async (data) => {\r\n        setValidated(false);\r\n        setLoading(false);\r\n        alertService.success(\"Update Successful!\");\r\n        success();\r\n    })\r\n    .catch((error) => {\r\n      setLoading(false);\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Update Whitelist Entry, There was an error!\", error);\r\n    });\r\n  };\r\n\r\n  const create = () =>{\r\n    setLoading(true);\r\n    createWhitelistEntry(state)\r\n    .then(async (data) => {\r\n      setLoading(false);\r\n        setValidated(false);\r\n      alertService.success(\"Addition Successful!\");\r\n      success();\r\n    })\r\n    .catch((error) => {\r\n      setLoading(false);\r\n      alertService.error(\"There was an error!\");\r\n        console.error(\"Add Whitelist Entry, There was an error!\", error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Modal show={hide} onHide={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n        <Modal.Header\r\n            closeButton>\r\n            <Modal.Title>{ID===null?\"Add Entry\":\"Edit Entry\"}</Modal.Title>\r\n        </Modal.Header>\r\n          <div className={\"loadingModal\"+(loading?\"\":\" invisible\")}>\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          </div>\r\n        <Modal.Body>\r\n        <Form id =\"whitelistModal\" noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <div>\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Project Name\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                    className=\"align-items-center d-flex justify-content-center\"\r\n                >\r\n                    <Form.Control type=\"text\" placeholder={projectName} readOnly />\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Plate Number\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >  \r\n                {ID===null?\r\n                    <div>\r\n                        <Form.Control\r\n                        required\r\n                        placeholder=\"Name\"\r\n                        id=\"plateNumber\"\r\n                        name=\"plateNumber\"\r\n                        value={state.plateNumber}\r\n                        onChange={handleChange}\r\n                        isValid={plates.includes(state.plateNumber)}\r\n                        isInvalid={!plates.includes(state.plateNumber)&&validated}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                        Please enter a registered plate no.\r\n                        </Form.Control.Feedback>\r\n                    </div>\r\n                    :<Form.Control type=\"text\" placeholder={state.plateNumber} readOnly />\r\n                }\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Access Rule\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <Form.Control\r\n                        custom\r\n                        required\r\n                        as=\"select\"\r\n                        id=\"accessRuleID\"\r\n                        name=\"accessRuleID\"\r\n                        value={state.accessRuleID===null?\"\":state.accessRuleID}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>--Select Access Rule--</option>\r\n                        {accessRules.map((rule)=>(\r\n                            <option value={rule.accessRuleID}>{rule.accessRuleName}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                    Access Rule is a required field.\r\n                    </Form.Control.Feedback>\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4} align=\"right\">\r\n                    Tag\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <Form.Control\r\n                        custom\r\n                        as=\"select\"\r\n                        id=\"tag\"\r\n                        name=\"tag\"\r\n                        value={state.tag===null?\"\":state.tag}\r\n                        onChange={handleChange}\r\n                        >\r\n                        <option value={\"\"}>None</option>\r\n                        {whitelistTags.map((whitelistTag)=>(\r\n                            <option value={whitelistTag}>{whitelistTag}</option>\r\n                        ))}\r\n                    </Form.Control>\r\n                </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    Start Date Time\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                    <DatePicker\r\n                className=\"width-100\"\r\n                    value={state.startDateTime}\r\n                    onChange={(val)=>{\r\n                      handleChange({\r\n                        target:{\r\n                          id: \"startDateTime\",\r\n                          value: dateToString(val)\r\n                        }\r\n                      });\r\n                      handleChange({\r\n                        target:{\r\n                          id: \"endDateTime\",\r\n                          value: maxStr(dateToString(val),state.endDateTime)\r\n                        }\r\n                      });\r\n                    }}\r\n                      format=\"YYYY-MM-DD HH:mm:ss\"\r\n                      ranges={[\r\n                        {\r\n                          label: 'Now',\r\n                          value: new Date()\r\n                        }\r\n                      ]}\r\n                      placeholder=\"Start DateTime\"\r\n                    />\r\n                </Col>\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Row}>\r\n                <Form.Label column sm={4}  align=\"right\">\r\n                    End Date Time\r\n                </Form.Label>\r\n                <Col\r\n                    sm={6}\r\n                >\r\n                <DatePicker\r\n                className=\"width-100\"\r\n                    value={state.endDateTime}\r\n                    onChange={(val)=>{\r\n                      handleChange({\r\n                        target:{\r\n                          id: \"endDateTime\",\r\n                          value: dateToString(val)\r\n                        }\r\n                      });\r\n                      handleChange({\r\n                        target:{\r\n                          id: \"startDateTime\",\r\n                          value: minStr(dateToString(val),state.startDateTime)\r\n                        }\r\n                      });\r\n                    }}\r\n                  format=\"YYYY-MM-DD HH:mm:ss\"\r\n                  ranges={[\r\n                    {\r\n                      label: 'Now',\r\n                      value: new Date()\r\n                    }\r\n                  ]}\r\n                  placeholder=\"End DateTime\"\r\n                />\r\n                </Col>\r\n                </Form.Group>\r\n            </div>\r\n        </Form>\r\n        </Modal.Body>\r\n    <Modal.Footer>\r\n        <Button variant=\"secondary\" onClick={()=>{\r\n    setValidated(false);\r\n    toggleModal();}}>\r\n        Cancel\r\n        </Button>\r\n        <Button form =\"whitelistModal\" variant=\"primary\" type=\"submit\">\r\n        Confirm\r\n        </Button>\r\n    </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default { WhitelistModal };\r\n",{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","severity":1,"message":"290","line":18,"column":7,"nodeType":"291","messageId":"292","endLine":18,"endColumn":18},{"ruleId":"289","severity":1,"message":"293","line":12,"column":22,"nodeType":"291","messageId":"292","endLine":12,"endColumn":30},{"ruleId":"289","severity":1,"message":"294","line":18,"column":8,"nodeType":"291","messageId":"292","endLine":18,"endColumn":20},{"ruleId":"289","severity":1,"message":"295","line":52,"column":9,"nodeType":"291","messageId":"292","endLine":52,"endColumn":16},{"ruleId":"296","severity":1,"message":"297","line":182,"column":1,"nodeType":"298","endLine":182,"endColumn":27},{"ruleId":"289","severity":1,"message":"299","line":1,"column":27,"nodeType":"291","messageId":"292","endLine":1,"endColumn":37},{"ruleId":"289","severity":1,"message":"300","line":42,"column":17,"nodeType":"291","messageId":"292","endLine":42,"endColumn":25},{"ruleId":"301","severity":1,"message":"302","line":62,"column":6,"nodeType":"303","endLine":62,"endColumn":29,"suggestions":"304"},{"ruleId":"296","severity":1,"message":"297","line":332,"column":1,"nodeType":"298","endLine":332,"endColumn":29},{"ruleId":"289","severity":1,"message":"305","line":6,"column":9,"nodeType":"291","messageId":"292","endLine":6,"endColumn":20},{"ruleId":"296","severity":1,"message":"297","line":133,"column":1,"nodeType":"298","endLine":133,"endColumn":26},{"ruleId":"289","severity":1,"message":"306","line":11,"column":20,"nodeType":"291","messageId":"292","endLine":11,"endColumn":26},{"ruleId":"289","severity":1,"message":"307","line":19,"column":10,"nodeType":"291","messageId":"292","endLine":19,"endColumn":19},{"ruleId":"296","severity":1,"message":"297","line":76,"column":1,"nodeType":"298","endLine":76,"endColumn":32},{"ruleId":"289","severity":1,"message":"299","line":1,"column":27,"nodeType":"291","messageId":"292","endLine":1,"endColumn":37},{"ruleId":"289","severity":1,"message":"308","line":4,"column":35,"nodeType":"291","messageId":"292","endLine":4,"endColumn":46},{"ruleId":"289","severity":1,"message":"309","line":4,"column":48,"nodeType":"291","messageId":"292","endLine":4,"endColumn":63},{"ruleId":"289","severity":1,"message":"310","line":4,"column":138,"nodeType":"291","messageId":"292","endLine":4,"endColumn":149},{"ruleId":"289","severity":1,"message":"311","line":6,"column":10,"nodeType":"291","messageId":"292","endLine":6,"endColumn":32},{"ruleId":"289","severity":1,"message":"312","line":10,"column":10,"nodeType":"291","messageId":"292","endLine":10,"endColumn":20},{"ruleId":"289","severity":1,"message":"313","line":15,"column":10,"nodeType":"291","messageId":"292","endLine":15,"endColumn":14},{"ruleId":"289","severity":1,"message":"314","line":15,"column":16,"nodeType":"291","messageId":"292","endLine":15,"endColumn":23},{"ruleId":"289","severity":1,"message":"300","line":16,"column":17,"nodeType":"291","messageId":"292","endLine":16,"endColumn":25},{"ruleId":"315","severity":1,"message":"316","line":206,"column":57,"nodeType":"317","messageId":"318","endLine":206,"endColumn":59},{"ruleId":"315","severity":1,"message":"316","line":254,"column":57,"nodeType":"317","messageId":"318","endLine":254,"endColumn":59},{"ruleId":"296","severity":1,"message":"297","line":291,"column":1,"nodeType":"298","endLine":291,"endColumn":25},{"ruleId":"289","severity":1,"message":"299","line":1,"column":27,"nodeType":"291","messageId":"292","endLine":1,"endColumn":37},{"ruleId":"289","severity":1,"message":"319","line":4,"column":31,"nodeType":"291","messageId":"292","endLine":4,"endColumn":34},{"ruleId":"289","severity":1,"message":"312","line":9,"column":10,"nodeType":"291","messageId":"292","endLine":9,"endColumn":20},{"ruleId":"289","severity":1,"message":"320","line":16,"column":9,"nodeType":"291","messageId":"292","endLine":16,"endColumn":16},{"ruleId":"289","severity":1,"message":"321","line":17,"column":10,"nodeType":"291","messageId":"292","endLine":17,"endColumn":18},{"ruleId":"289","severity":1,"message":"322","line":26,"column":10,"nodeType":"291","messageId":"292","endLine":26,"endColumn":15},{"ruleId":"289","severity":1,"message":"323","line":26,"column":17,"nodeType":"291","messageId":"292","endLine":26,"endColumn":25},{"ruleId":"289","severity":1,"message":"300","line":28,"column":17,"nodeType":"291","messageId":"292","endLine":28,"endColumn":25},{"ruleId":"301","severity":1,"message":"324","line":75,"column":6,"nodeType":"303","endLine":75,"endColumn":13,"suggestions":"325"},{"ruleId":"315","severity":1,"message":"316","line":210,"column":59,"nodeType":"317","messageId":"318","endLine":210,"endColumn":61},{"ruleId":"296","severity":1,"message":"297","line":280,"column":1,"nodeType":"298","endLine":280,"endColumn":28},{"ruleId":"289","severity":1,"message":"326","line":4,"column":24,"nodeType":"291","messageId":"292","endLine":4,"endColumn":39},{"ruleId":"289","severity":1,"message":"327","line":4,"column":41,"nodeType":"291","messageId":"292","endLine":4,"endColumn":59},{"ruleId":"289","severity":1,"message":"300","line":17,"column":17,"nodeType":"291","messageId":"292","endLine":17,"endColumn":25},{"ruleId":"301","severity":1,"message":"328","line":45,"column":6,"nodeType":"303","endLine":45,"endColumn":13,"suggestions":"329"},{"ruleId":"296","severity":1,"message":"297","line":201,"column":1,"nodeType":"298","endLine":201,"endColumn":36},{"ruleId":"289","severity":1,"message":"299","line":1,"column":31,"nodeType":"291","messageId":"292","endLine":1,"endColumn":41},{"ruleId":"289","severity":1,"message":"300","line":19,"column":17,"nodeType":"291","messageId":"292","endLine":19,"endColumn":25},{"ruleId":"301","severity":1,"message":"328","line":42,"column":6,"nodeType":"303","endLine":42,"endColumn":13,"suggestions":"330"},{"ruleId":"331","severity":1,"message":"332","line":223,"column":19,"nodeType":"333","messageId":"334","endLine":223,"endColumn":49,"fix":"335"},{"ruleId":"296","severity":1,"message":"297","line":249,"column":1,"nodeType":"298","endLine":249,"endColumn":32},{"ruleId":"289","severity":1,"message":"299","line":1,"column":31,"nodeType":"291","messageId":"292","endLine":1,"endColumn":41},{"ruleId":"289","severity":1,"message":"300","line":12,"column":19,"nodeType":"291","messageId":"292","endLine":12,"endColumn":27},{"ruleId":"301","severity":1,"message":"336","line":63,"column":6,"nodeType":"303","endLine":63,"endColumn":18,"suggestions":"337"},{"ruleId":"296","severity":1,"message":"297","line":299,"column":1,"nodeType":"298","endLine":299,"endColumn":30},{"ruleId":"296","severity":1,"message":"297","line":29,"column":1,"nodeType":"298","endLine":29,"endColumn":32},{"ruleId":"296","severity":1,"message":"297","line":47,"column":1,"nodeType":"298","endLine":47,"endColumn":29},{"ruleId":"289","severity":1,"message":"299","line":1,"column":31,"nodeType":"291","messageId":"292","endLine":1,"endColumn":41},{"ruleId":"289","severity":1,"message":"300","line":9,"column":19,"nodeType":"291","messageId":"292","endLine":9,"endColumn":27},{"ruleId":"301","severity":1,"message":"338","line":59,"column":6,"nodeType":"303","endLine":59,"endColumn":18,"suggestions":"339"},{"ruleId":"296","severity":1,"message":"297","line":426,"column":1,"nodeType":"298","endLine":426,"endColumn":32},{"ruleId":"289","severity":1,"message":"340","line":3,"column":24,"nodeType":"291","messageId":"292","endLine":3,"endColumn":33},{"ruleId":"341","severity":1,"message":"342","line":43,"column":37,"nodeType":"343","messageId":"344","endLine":43,"endColumn":38},{"ruleId":"296","severity":1,"message":"297","line":58,"column":1,"nodeType":"298","endLine":58,"endColumn":30},{"ruleId":"289","severity":1,"message":"345","line":1,"column":10,"nodeType":"291","messageId":"292","endLine":1,"endColumn":22},{"ruleId":"296","severity":1,"message":"297","line":57,"column":1,"nodeType":"298","endLine":57,"endColumn":41},{"ruleId":"289","severity":1,"message":"300","line":23,"column":17,"nodeType":"291","messageId":"292","endLine":23,"endColumn":25},{"ruleId":"301","severity":1,"message":"324","line":83,"column":6,"nodeType":"303","endLine":83,"endColumn":13,"suggestions":"346"},{"ruleId":"296","severity":1,"message":"297","line":238,"column":1,"nodeType":"298","endLine":238,"endColumn":30},{"ruleId":"289","severity":1,"message":"299","line":1,"column":27,"nodeType":"291","messageId":"292","endLine":1,"endColumn":37},{"ruleId":"289","severity":1,"message":"300","line":46,"column":17,"nodeType":"291","messageId":"292","endLine":46,"endColumn":25},{"ruleId":"301","severity":1,"message":"347","line":85,"column":5,"nodeType":"291","endLine":85,"endColumn":17},{"ruleId":"301","severity":1,"message":"302","line":89,"column":6,"nodeType":"303","endLine":89,"endColumn":29,"suggestions":"348"},{"ruleId":"296","severity":1,"message":"297","line":528,"column":1,"nodeType":"298","endLine":528,"endColumn":31},{"ruleId":"289","severity":1,"message":"308","line":3,"column":9,"nodeType":"291","messageId":"292","endLine":3,"endColumn":20},{"ruleId":"289","severity":1,"message":"349","line":3,"column":84,"nodeType":"291","messageId":"292","endLine":3,"endColumn":94},{"ruleId":"289","severity":1,"message":"350","line":32,"column":10,"nodeType":"291","messageId":"292","endLine":32,"endColumn":19},{"ruleId":"289","severity":1,"message":"351","line":32,"column":21,"nodeType":"291","messageId":"292","endLine":32,"endColumn":33},{"ruleId":"289","severity":1,"message":"300","line":109,"column":17,"nodeType":"291","messageId":"292","endLine":109,"endColumn":25},{"ruleId":"289","severity":1,"message":"352","line":110,"column":10,"nodeType":"291","messageId":"292","endLine":110,"endColumn":18},{"ruleId":"289","severity":1,"message":"353","line":110,"column":20,"nodeType":"291","messageId":"292","endLine":110,"endColumn":31},{"ruleId":"301","severity":1,"message":"324","line":137,"column":6,"nodeType":"303","endLine":137,"endColumn":13,"suggestions":"354"},{"ruleId":"301","severity":1,"message":"302","line":141,"column":6,"nodeType":"303","endLine":141,"endColumn":29,"suggestions":"355"},{"ruleId":"301","severity":1,"message":"324","line":145,"column":5,"nodeType":"303","endLine":145,"endColumn":19,"suggestions":"356"},{"ruleId":"315","severity":1,"message":"316","line":401,"column":68,"nodeType":"317","messageId":"318","endLine":401,"endColumn":70},{"ruleId":"357","severity":1,"message":"358","line":409,"column":21,"nodeType":"359","endLine":413,"endColumn":39},{"ruleId":"357","severity":1,"message":"358","line":416,"column":21,"nodeType":"359","endLine":420,"endColumn":44},{"ruleId":"296","severity":1,"message":"297","line":461,"column":1,"nodeType":"298","endLine":461,"endColumn":28},{"ruleId":"289","severity":1,"message":"293","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":25},{"ruleId":"289","severity":1,"message":"307","line":1,"column":27,"nodeType":"291","messageId":"292","endLine":1,"endColumn":36},{"ruleId":"296","severity":1,"message":"297","line":7,"column":1,"nodeType":"298","endLine":7,"endColumn":32},{"ruleId":"289","severity":1,"message":"299","line":1,"column":27,"nodeType":"291","messageId":"292","endLine":1,"endColumn":37},{"ruleId":"289","severity":1,"message":"360","line":3,"column":9,"nodeType":"291","messageId":"292","endLine":3,"endColumn":16},{"ruleId":"289","severity":1,"message":"319","line":4,"column":31,"nodeType":"291","messageId":"292","endLine":4,"endColumn":34},{"ruleId":"289","severity":1,"message":"361","line":6,"column":10,"nodeType":"291","messageId":"292","endLine":6,"endColumn":20},{"ruleId":"289","severity":1,"message":"362","line":6,"column":22,"nodeType":"291","messageId":"292","endLine":6,"endColumn":31},{"ruleId":"289","severity":1,"message":"363","line":6,"column":33,"nodeType":"291","messageId":"292","endLine":6,"endColumn":44},{"ruleId":"289","severity":1,"message":"364","line":8,"column":32,"nodeType":"291","messageId":"292","endLine":8,"endColumn":39},{"ruleId":"289","severity":1,"message":"312","line":9,"column":10,"nodeType":"291","messageId":"292","endLine":9,"endColumn":20},{"ruleId":"289","severity":1,"message":"365","line":9,"column":22,"nodeType":"291","messageId":"292","endLine":9,"endColumn":36},{"ruleId":"289","severity":1,"message":"300","line":22,"column":17,"nodeType":"291","messageId":"292","endLine":22,"endColumn":25},{"ruleId":"301","severity":1,"message":"366","line":49,"column":6,"nodeType":"303","endLine":49,"endColumn":13,"suggestions":"367"},{"ruleId":"301","severity":1,"message":"368","line":84,"column":5,"nodeType":"303","endLine":84,"endColumn":14,"suggestions":"369"},{"ruleId":"296","severity":1,"message":"297","line":290,"column":1,"nodeType":"298","endLine":290,"endColumn":33},{"ruleId":"289","severity":1,"message":"299","line":1,"column":27,"nodeType":"291","messageId":"292","endLine":1,"endColumn":37},{"ruleId":"289","severity":1,"message":"370","line":8,"column":83,"nodeType":"291","messageId":"292","endLine":8,"endColumn":94},{"ruleId":"289","severity":1,"message":"312","line":9,"column":10,"nodeType":"291","messageId":"292","endLine":9,"endColumn":20},{"ruleId":"289","severity":1,"message":"300","line":27,"column":17,"nodeType":"291","messageId":"292","endLine":27,"endColumn":25},{"ruleId":"301","severity":1,"message":"324","line":64,"column":6,"nodeType":"303","endLine":64,"endColumn":13,"suggestions":"371"},{"ruleId":"296","severity":1,"message":"297","line":301,"column":1,"nodeType":"298","endLine":301,"endColumn":26},{"ruleId":"289","severity":1,"message":"372","line":1,"column":10,"nodeType":"291","messageId":"292","endLine":1,"endColumn":14},{"ruleId":"289","severity":1,"message":"299","line":2,"column":31,"nodeType":"291","messageId":"292","endLine":2,"endColumn":41},{"ruleId":"289","severity":1,"message":"373","line":10,"column":9,"nodeType":"291","messageId":"292","endLine":10,"endColumn":12},{"ruleId":"289","severity":1,"message":"300","line":13,"column":19,"nodeType":"291","messageId":"292","endLine":13,"endColumn":27},{"ruleId":"301","severity":1,"message":"374","line":68,"column":6,"nodeType":"303","endLine":68,"endColumn":13,"suggestions":"375"},{"ruleId":"301","severity":1,"message":"376","line":79,"column":5,"nodeType":"303","endLine":79,"endColumn":19,"suggestions":"377"},{"ruleId":"289","severity":1,"message":"378","line":104,"column":9,"nodeType":"291","messageId":"292","endLine":104,"endColumn":25},{"ruleId":"296","severity":1,"message":"297","line":265,"column":1,"nodeType":"298","endLine":265,"endColumn":31},{"ruleId":"357","severity":1,"message":"358","line":7,"column":9,"nodeType":"359","endLine":7,"endColumn":25},{"ruleId":"296","severity":1,"message":"297","line":12,"column":1,"nodeType":"298","endLine":12,"endColumn":29},{"ruleId":"289","severity":1,"message":"299","line":1,"column":27,"nodeType":"291","messageId":"292","endLine":1,"endColumn":37},{"ruleId":"289","severity":1,"message":"360","line":3,"column":9,"nodeType":"291","messageId":"292","endLine":3,"endColumn":16},{"ruleId":"289","severity":1,"message":"361","line":6,"column":10,"nodeType":"291","messageId":"292","endLine":6,"endColumn":20},{"ruleId":"289","severity":1,"message":"362","line":6,"column":22,"nodeType":"291","messageId":"292","endLine":6,"endColumn":31},{"ruleId":"289","severity":1,"message":"363","line":6,"column":33,"nodeType":"291","messageId":"292","endLine":6,"endColumn":44},{"ruleId":"289","severity":1,"message":"312","line":11,"column":10,"nodeType":"291","messageId":"292","endLine":11,"endColumn":20},{"ruleId":"289","severity":1,"message":"300","line":26,"column":17,"nodeType":"291","messageId":"292","endLine":26,"endColumn":25},{"ruleId":"301","severity":1,"message":"366","line":55,"column":6,"nodeType":"303","endLine":55,"endColumn":13,"suggestions":"379"},{"ruleId":"301","severity":1,"message":"380","line":79,"column":5,"nodeType":"303","endLine":79,"endColumn":14,"suggestions":"381"},{"ruleId":"301","severity":1,"message":"324","line":102,"column":5,"nodeType":"303","endLine":102,"endColumn":21,"suggestions":"382"},{"ruleId":"301","severity":1,"message":"302","line":118,"column":5,"nodeType":"303","endLine":118,"endColumn":27,"suggestions":"383"},{"ruleId":"296","severity":1,"message":"297","line":355,"column":1,"nodeType":"298","endLine":355,"endColumn":30},{"ruleId":"289","severity":1,"message":"372","line":1,"column":10,"nodeType":"291","messageId":"292","endLine":1,"endColumn":14},{"ruleId":"289","severity":1,"message":"299","line":2,"column":31,"nodeType":"291","messageId":"292","endLine":2,"endColumn":41},{"ruleId":"289","severity":1,"message":"384","line":5,"column":21,"nodeType":"291","messageId":"292","endLine":5,"endColumn":33},{"ruleId":"289","severity":1,"message":"373","line":28,"column":9,"nodeType":"291","messageId":"292","endLine":28,"endColumn":12},{"ruleId":"289","severity":1,"message":"300","line":31,"column":19,"nodeType":"291","messageId":"292","endLine":31,"endColumn":27},{"ruleId":"301","severity":1,"message":"385","line":84,"column":6,"nodeType":"303","endLine":84,"endColumn":13,"suggestions":"386"},{"ruleId":"296","severity":1,"message":"297","line":349,"column":1,"nodeType":"298","endLine":349,"endColumn":35},"no-native-reassign",["387"],"no-negated-in-lhs",["388"],"no-unused-vars","'DebugRouter' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'MoreVertIcon' is defined but never used.","'restart' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useContext' is defined but never used.","'setDummy' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filter'. Either include it or remove the dependency array.","ArrayExpression",["389"],"'globalState' is assigned a value but never used.","'Router' is defined but never used.","'useEffect' is defined but never used.","'TableFooter' is defined but never used.","'TablePagination' is defined but never used.","'CardActions' is defined but never used.","'TablePaginationActions' is defined but never used.","'Directions' is defined but never used.","'rows' is assigned a value but never used.","'setRows' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Cpu' is defined but never used.","'history' is assigned a value but never used.","'pathname' is assigned a value but never used.","'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'reload'. Either include it or remove the dependency array.",["390"],"'getBusinessInfo' is defined but never used.","'updateBusinessInfo' is defined but never used.","React Hook useEffect has a missing dependency: 'projectID'. Either include it or remove the dependency array.",["391"],["392"],"no-useless-computed-key","Unnecessarily computed property [\"contactNumber\"] found.","Property","unnecessarilyComputedProperty",{"range":"393","text":"394"},"React Hook useEffect has missing dependencies: 'gateID', 'newInitialState', 'newState', and 'projectID'. Either include them or remove the dependency array.",["395"],"React Hook useEffect has missing dependencies: 'deviceID' and 'gateID'. Either include them or remove the dependency array.",["396"],"'alertType' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'alertService' is defined but never used.",["397"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.",["398"],"'IconButton' is defined but never used.","'validated' is assigned a value but never used.","'setValidated' is assigned a value but never used.","'projects' is assigned a value but never used.","'setProjects' is assigned a value but never used.",["399"],["400"],["401"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Tooltip' is defined but never used.","'useHistory' is defined but never used.","'useParams' is defined but never used.","'useLocation' is defined but never used.","'delGate' is defined but never used.","'MonetizationOn' is defined but never used.","React Hook useEffect has a missing dependency: 'reloadProjects'. Either include it or remove the dependency array.",["402"],"React Hook useEffect has missing dependencies: 'reload' and 'reloadGates'. Either include them or remove the dependency array.",["403"],"'getProjects' is defined but never used.",["404"],"'func' is defined but never used.","'cnt' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accessRuleID' and 'projectID'. Either include them or remove the dependency array.",["405"],"React Hook useEffect has a missing dependency: 'loadGates'. Either include it or remove the dependency array.",["406"],"'handleGateChange' is assigned a value but never used.",["407"],"React Hook useEffect has a missing dependency: 'reloadAccessRules'. Either include it or remove the dependency array.",["408"],["409"],["410"],"'SelectPicker' is defined but never used.","React Hook useEffect has a missing dependency: 'ID'. Either include it or remove the dependency array.",["411"],"no-global-assign","no-unsafe-negation",{"desc":"412","fix":"413"},{"desc":"414","fix":"415"},{"desc":"416","fix":"417"},{"desc":"416","fix":"418"},[6737,6754],"\"contactNumber\"",{"desc":"419","fix":"420"},{"desc":"421","fix":"422"},{"desc":"414","fix":"423"},{"desc":"412","fix":"424"},{"desc":"414","fix":"425"},{"desc":"412","fix":"426"},{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"414","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"429","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},{"desc":"443","fix":"444"},{"desc":"445","fix":"446"},"Update the dependencies array to be: [initialRows, curState, filter]",{"range":"447","text":"448"},"Update the dependencies array to be: [dummy, reload]",{"range":"449","text":"450"},"Update the dependencies array to be: [dummy, projectID]",{"range":"451","text":"452"},{"range":"453","text":"452"},"Update the dependencies array to be: [dummy, gateID, hide, newInitialState, newState, projectID]",{"range":"454","text":"455"},"Update the dependencies array to be: [deviceID, dummy, gateID, hide]",{"range":"456","text":"457"},{"range":"458","text":"450"},{"range":"459","text":"448"},{"range":"460","text":"450"},{"range":"461","text":"448"},"Update the dependencies array to be: [curTimeState, reload]",{"range":"462","text":"463"},"Update the dependencies array to be: [dummy, reloadProjects]",{"range":"464","text":"465"},"Update the dependencies array to be: [project, reload, reloadGates]",{"range":"466","text":"467"},{"range":"468","text":"450"},"Update the dependencies array to be: [accessRuleID, dummy, projectID]",{"range":"469","text":"470"},"Update the dependencies array to be: [initialGates, loadGates]",{"range":"471","text":"472"},{"range":"473","text":"465"},"Update the dependencies array to be: [project, reloadAccessRules]",{"range":"474","text":"475"},"Update the dependencies array to be: [accessRuleVals, reload]",{"range":"476","text":"477"},"Update the dependencies array to be: [filter, initialRows, pNumber]",{"range":"478","text":"479"},"Update the dependencies array to be: [ID, dummy]",{"range":"480","text":"481"},[1960,1983],"[initialRows, curState, filter]",[3054,3061],"[dummy, reload]",[1445,1452],"[dummy, projectID]",[1442,1449],[2000,2012],"[dummy, gateID, hide, newInitialState, newState, projectID]",[1916,1928],"[deviceID, dummy, gateID, hide]",[2502,2509],[2628,2651],[4116,4123],[4170,4193],[4237,4251],"[curTimeState, reload]",[2082,2089],"[dummy, reloadProjects]",[2963,2972],"[project, reload, reloadGates]",[2489,2496],[2335,2342],"[accessRuleID, dummy, projectID]",[2564,2578],"[initialGates, loadGates]",[2183,2190],[2878,2887],"[project, reloadAccessRules]",[3481,3497],"[accessRuleVals, reload]",[3803,3825],"[filter, initialRows, pNumber]",[2701,2708],"[ID, dummy]"]